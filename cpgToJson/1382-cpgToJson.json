{"edges": [["21", "22"], ["21", "23"], ["21", "140"], ["21", "141"], ["21", "142"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "38"], ["23", "41"], ["23", "52"], ["23", "53"], ["23", "59"], ["23", "60"], ["23", "66"], ["23", "138"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "32"], ["28", "37"], ["29", "30"], ["29", "31"], ["32", "33"], ["32", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["41", "5"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "51"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["48", "50"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "58"], ["56", "57"], ["60", "61"], ["60", "62"], ["62", "63"], ["62", "65"], ["63", "64"], ["66", "67"], ["66", "76"], ["66", "80"], ["67", "68"], ["67", "75"], ["68", "69"], ["68", "74"], ["69", "70"], ["69", "71"], ["71", "72"], ["71", "73"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["81", "82"], ["81", "85"], ["81", "88"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["89", "90"], ["89", "93"], ["89", "96"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["97", "98"], ["97", "99"], ["97", "107"], ["97", "108"], ["97", "115"], ["97", "135"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["101", "104"], ["101", "105"], ["101", "106"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "133"], ["116", "117"], ["116", "132"], ["117", "118"], ["117", "125"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "131"], ["126", "127"], ["126", "128"], ["128", "129"], ["128", "130"], ["133", "134"], ["135", "136"], ["135", "137"], ["138", "139"], ["24", "31"], ["27", "40"], ["38", "45"], ["41", "56"], ["53", "63"], ["60", "71"], ["138", "142"], ["26", "24"], ["40", "38"], ["55", "53"], ["62", "60"], ["67", "78"], ["67", "82"], ["76", "138"], ["29", "36"], ["32", "27"], ["43", "50"], ["46", "41"], ["56", "55"], ["63", "62"], ["68", "67"], ["78", "76"], ["31", "29"], ["34", "32"], ["45", "43"], ["48", "46"], ["69", "68"], ["82", "85"], ["82", "90"], ["85", "138"], ["36", "34"], ["50", "48"], ["71", "69"], ["90", "93"], ["90", "101"], ["93", "138"], ["99", "111"], ["108", "121"], ["135", "138"], ["101", "99"], ["110", "108"], ["116", "133"], ["116", "135"], ["133", "135"], ["111", "110"], ["117", "116"], ["118", "128"], ["125", "117"], ["119", "118"], ["126", "125"], ["121", "119"], ["128", "126"], ["21", "26"], ["22", "142"], ["24", "142"], ["32", "142"], ["32", "142"], ["32", "142"], ["27", "142"], ["38", "142"], ["43", "142"], ["46", "142"], ["46", "142"], ["46", "142"], ["41", "142"], ["53", "142"], ["63", "142"], ["62", "142"], ["60", "142"], ["60", "142"], ["69", "142"], ["69", "142"], ["68", "142"], ["67", "142"], ["67", "142"], ["67", "142"], ["82", "142"], ["82", "142"], ["90", "142"], ["90", "142"], ["90", "142"], ["99", "142"], ["99", "142"], ["110", "142"], ["108", "142"], ["108", "142"], ["119", "142"], ["119", "142"], ["118", "142"], ["117", "142"], ["126", "142"], ["126", "142"], ["125", "142"], ["117", "142"], ["116", "142"], ["116", "142"], ["116", "142"], ["133", "142"], ["135", "142"], ["135", "142"], ["93", "142"], ["85", "142"], ["76", "142"], ["76", "142"], ["138", "142"], ["138", "142"], ["101", "142"], ["21", "22"], ["21", "24"], ["21", "38"], ["55", "53"], ["55", "53"], ["62", "60"], ["62", "60"], ["24", "27"], ["21", "27"], ["29", "27"], ["32", "27"], ["38", "41"], ["21", "41"], ["43", "41"], ["46", "41"], ["135", "138"], ["93", "138"], ["85", "138"], ["76", "138"], ["21", "138"], ["21", "29"], ["21", "37"], ["21", "43"], ["21", "51"], ["56", "55"], ["21", "55"], ["63", "62"], ["21", "62"], ["68", "67"], ["68", "67"], ["53", "67"], ["21", "67"], ["41", "76"], ["21", "76"], ["78", "76"], ["29", "32"], ["21", "32"], ["43", "46"], ["21", "46"], ["27", "56"], ["21", "56"], ["56", "63"], ["21", "63"], ["69", "68"], ["69", "68"], ["21", "68"], ["21", "78"], ["21", "69"], ["60", "69"], ["67", "82"], ["21", "82"], ["41", "85"], ["21", "85"], ["60", "71"], ["21", "71"], ["82", "90"], ["21", "90"], ["69", "90"], ["41", "93"], ["21", "93"], ["101", "99"], ["101", "99"], ["101", "99"], ["101", "99"], ["111", "108"], ["111", "108"], ["21", "108"], ["41", "135"], ["21", "135"], ["108", "135"], ["133", "135"], ["21", "101"], ["90", "101"], ["90", "101"], ["111", "110"], ["111", "110"], ["21", "110"], ["117", "116"], ["117", "116"], ["101", "116"], ["21", "116"], ["108", "133"], ["21", "133"], ["101", "111"], ["21", "111"], ["99", "111"], ["118", "117"], ["118", "117"], ["125", "117"], ["125", "117"], ["119", "118"], ["119", "118"], ["21", "118"], ["126", "125"], ["126", "125"], ["21", "125"], ["21", "119"], ["111", "119"], ["128", "126"], ["21", "126"], ["128", "126"], ["111", "121"], ["21", "121"], ["111", "128"], ["21", "128"], ["67", "76"], ["67", "82"], ["67", "78"], ["82", "85"], ["82", "90"], ["90", "116"], ["90", "99"], ["90", "128"], ["90", "119"], ["90", "121"], ["90", "93"], ["90", "101"], ["90", "126"], ["90", "118"], ["90", "135"], ["90", "110"], ["90", "117"], ["90", "108"], ["90", "125"], ["90", "111"], ["116", "133"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(new BufferedInputStream(System.in)))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(new BufferedInputStream(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(new BufferedInputStream(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "31": "<(&lt;operator&gt;.alloc,new BufferedInputStream(System.in))<SUB>2</SUB>>", "33": "<(IDENTIFIER,$obj0,new BufferedInputStream(System.in))>", "35": "<(IDENTIFIER,System,new BufferedInputStream(System.in))<SUB>2</SUB>>", "37": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "38": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "40": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "47": "<(IDENTIFIER,$obj2,new BufferedOutputStream(System.out))>", "49": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "51": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.assignment,long n = in.nextLong() - 1)<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.subtraction,in.nextLong() - 1)<SUB>4</SUB>>", "57": "<(IDENTIFIER,in,nextLong())<SUB>4</SUB>>", "59": "<(LOCAL,long k: long)<SUB>5</SUB>>", "61": "<(IDENTIFIER,k,long k = in.nextLong() - 1)<SUB>5</SUB>>", "63": "<(nextLong,nextLong())<SUB>5</SUB>>", "65": "<(LITERAL,1,in.nextLong() - 1)<SUB>5</SUB>>", "67": "<(&lt;operator&gt;.lessThan,k * (k + 1) / 2 &lt; n)<SUB>6</SUB>>", "69": "<(&lt;operator&gt;.multiplication,k * (k + 1))<SUB>6</SUB>>", "71": "<(&lt;operator&gt;.addition,k + 1)<SUB>6</SUB>>", "73": "<(LITERAL,1,k + 1)<SUB>6</SUB>>", "75": "<(IDENTIFIER,n,k * (k + 1) / 2 &lt; n)<SUB>6</SUB>>", "77": "<(IDENTIFIER,out,println(-1))<SUB>6</SUB>>", "79": "<(LITERAL,1,-1)<SUB>6</SUB>>", "81": "<(CONTROL_STRUCTURE,if (n == 0),if (n == 0))<SUB>7</SUB>>", "83": "<(IDENTIFIER,n,n == 0)<SUB>7</SUB>>", "85": "<(println,println(0))<SUB>7</SUB>>", "87": "<(LITERAL,0,println(0))<SUB>7</SUB>>", "89": "<(CONTROL_STRUCTURE,if (n &lt; k),if (n &lt; k))<SUB>8</SUB>>", "91": "<(IDENTIFIER,n,n &lt; k)<SUB>8</SUB>>", "93": "<(println,println(1))<SUB>8</SUB>>", "95": "<(LITERAL,1,println(1))<SUB>8</SUB>>", "97": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "99": "<(&lt;operator&gt;.assignment,long t = binSearch(n, k, 1, k))<SUB>10</SUB>>", "101": "<(binSearch,binSearch(n, k, 1, k))<SUB>10</SUB>>", "103": "<(IDENTIFIER,n,binSearch(n, k, 1, k))<SUB>10</SUB>>", "105": "<(LITERAL,1,binSearch(n, k, 1, k))<SUB>10</SUB>>", "107": "<(LOCAL,long ans: long)<SUB>11</SUB>>", "109": "<(IDENTIFIER,ans,long ans = k - t + 1)<SUB>11</SUB>>", "111": "<(&lt;operator&gt;.subtraction,k - t)<SUB>11</SUB>>", "113": "<(IDENTIFIER,t,k - t)<SUB>11</SUB>>", "115": "<(CONTROL_STRUCTURE,if (k * (k + 1) / 2 - t * (t - 1) / 2 != n),if (k * (k + 1) / 2 - t * (t - 1) / 2 != n))<SUB>12</SUB>>", "117": "<(&lt;operator&gt;.subtraction,k * (k + 1) / 2 - t * (t - 1) / 2)<SUB>12</SUB>>", "119": "<(&lt;operator&gt;.multiplication,k * (k + 1))<SUB>12</SUB>>", "121": "<(&lt;operator&gt;.addition,k + 1)<SUB>12</SUB>>", "123": "<(LITERAL,1,k + 1)<SUB>12</SUB>>", "125": "<(&lt;operator&gt;.division,t * (t - 1) / 2)<SUB>12</SUB>>", "127": "<(IDENTIFIER,t,t * (t - 1))<SUB>12</SUB>>", "129": "<(IDENTIFIER,t,t - 1)<SUB>12</SUB>>", "131": "<(LITERAL,2,t * (t - 1) / 2)<SUB>12</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>12</SUB>>", "135": "<(println,println(ans))<SUB>13</SUB>>", "137": "<(IDENTIFIER,ans,println(ans))<SUB>13</SUB>>", "139": "<(IDENTIFIER,out,close())<SUB>15</SUB>>", "141": "<(MODIFIER,STATIC)>"}}