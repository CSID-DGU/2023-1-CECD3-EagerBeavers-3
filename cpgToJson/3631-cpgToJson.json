{"edges": [["27", "28"], ["27", "29"], ["27", "310"], ["27", "311"], ["27", "312"], ["29", "4"], ["29", "30"], ["29", "6"], ["29", "33"], ["29", "36"], ["29", "78"], ["29", "82"], ["29", "86"], ["29", "87"], ["29", "91"], ["29", "92"], ["29", "101"], ["29", "102"], ["29", "10"], ["29", "110"], ["29", "113"], ["29", "114"], ["29", "160"], ["29", "161"], ["29", "162"], ["29", "165"], ["29", "168"], ["29", "169"], ["29", "177"], ["29", "178"], ["29", "186"], ["29", "301"], ["29", "308"], ["30", "31"], ["30", "32"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "62"], ["37", "38"], ["37", "41"], ["37", "50"], ["37", "53"], ["38", "39"], ["38", "40"], ["41", "3"], ["41", "42"], ["42", "43"], ["42", "46"], ["42", "49"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["53", "5"], ["53", "54"], ["54", "55"], ["54", "58"], ["54", "61"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["62", "63"], ["63", "64"], ["63", "67"], ["63", "71"], ["63", "74"], ["64", "65"], ["64", "66"], ["67", "7"], ["67", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "8"], ["74", "75"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "80"], ["80", "81"], ["82", "83"], ["82", "84"], ["84", "85"], ["87", "88"], ["87", "89"], ["89", "90"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "107"], ["104", "108"], ["105", "106"], ["108", "109"], ["110", "111"], ["110", "112"], ["113", "9"], ["114", "115"], ["114", "116"], ["114", "119"], ["114", "124"], ["114", "127"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["121", "122"], ["121", "123"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["127", "136"], ["127", "137"], ["127", "146"], ["127", "153"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "135"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "145"], ["146", "147"], ["146", "152"], ["147", "148"], ["147", "151"], ["148", "149"], ["148", "150"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "167"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["171", "174"], ["171", "175"], ["175", "176"], ["178", "179"], ["178", "180"], ["180", "181"], ["180", "182"], ["180", "183"], ["180", "185"], ["183", "184"], ["186", "187"], ["186", "188"], ["188", "189"], ["188", "190"], ["188", "12"], ["188", "193"], ["188", "196"], ["188", "197"], ["188", "198"], ["188", "202"], ["188", "294"], ["188", "297"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "11"], ["198", "199"], ["198", "200"], ["200", "201"], ["202", "203"], ["202", "205"], ["203", "204"], ["205", "206"], ["205", "207"], ["205", "211"], ["205", "212"], ["205", "217"], ["205", "218"], ["205", "223"], ["205", "287"], ["207", "208"], ["207", "209"], ["209", "210"], ["212", "213"], ["212", "214"], ["214", "215"], ["214", "216"], ["218", "219"], ["218", "220"], ["220", "221"], ["220", "222"], ["223", "224"], ["223", "225"], ["223", "228"], ["223", "231"], ["223", "233"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["231", "232"], ["233", "234"], ["233", "235"], ["233", "242"], ["233", "243"], ["233", "250"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "263"], ["251", "252"], ["251", "256"], ["252", "253"], ["252", "254"], ["252", "255"], ["256", "257"], ["256", "262"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["263", "264"], ["263", "271"], ["263", "274"], ["263", "277"], ["263", "280"], ["264", "265"], ["264", "270"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "286"], ["283", "284"], ["283", "285"], ["287", "288"], ["287", "293"], ["288", "289"], ["288", "292"], ["289", "290"], ["289", "291"], ["294", "295"], ["294", "296"], ["297", "298"], ["297", "300"], ["298", "299"], ["301", "302"], ["301", "303"], ["303", "304"], ["303", "307"], ["304", "305"], ["304", "306"], ["308", "309"], ["30", "33"], ["33", "40"], ["78", "84"], ["82", "89"], ["87", "95"], ["92", "105"], ["102", "112"], ["110", "113"], ["113", "116"], ["162", "165"], ["165", "175"], ["169", "183"], ["178", "190"], ["178", "304"], ["301", "308"], ["308", "312"], ["80", "78"], ["84", "82"], ["89", "87"], ["94", "92"], ["104", "102"], ["112", "110"], ["116", "121"], ["119", "133"], ["119", "162"], ["124", "121"], ["171", "169"], ["180", "178"], ["303", "301"], ["38", "45"], ["41", "52"], ["50", "57"], ["53", "66"], ["53", "80"], ["95", "98"], ["98", "94"], ["105", "108"], ["108", "104"], ["121", "119"], ["129", "143"], ["137", "148"], ["146", "156"], ["153", "124"], ["175", "171"], ["183", "180"], ["190", "195"], ["193", "196"], ["196", "200"], ["198", "203"], ["294", "298"], ["304", "303"], ["40", "38"], ["52", "50"], ["64", "70"], ["67", "73"], ["71", "77"], ["74", "80"], ["131", "129"], ["139", "137"], ["147", "146"], ["155", "153"], ["195", "193"], ["200", "198"], ["203", "209"], ["203", "294"], ["298", "190"], ["298", "304"], ["43", "46"], ["46", "41"], ["55", "58"], ["58", "53"], ["66", "64"], ["68", "67"], ["73", "71"], ["75", "74"], ["133", "131"], ["141", "139"], ["148", "147"], ["156", "155"], ["207", "214"], ["212", "220"], ["218", "225"], ["287", "203"], ["45", "43"], ["57", "55"], ["70", "68"], ["77", "75"], ["143", "141"], ["209", "207"], ["214", "212"], ["220", "218"], ["225", "228"], ["228", "239"], ["228", "289"], ["231", "228"], ["288", "287"], ["235", "247"], ["243", "252"], ["289", "288"], ["237", "235"], ["245", "243"], ["251", "266"], ["251", "231"], ["239", "237"], ["247", "245"], ["252", "251"], ["252", "258"], ["256", "251"], ["264", "271"], ["271", "274"], ["274", "277"], ["277", "283"], ["280", "231"], ["257", "256"], ["265", "264"], ["282", "280"], ["258", "257"], ["266", "265"], ["283", "282"], ["27", "30"], ["28", "312"], ["30", "312"], ["33", "312"], ["38", "312"], ["46", "312"], ["46", "312"], ["41", "312"], ["50", "312"], ["55", "312"], ["58", "312"], ["58", "312"], ["53", "312"], ["64", "312"], ["67", "312"], ["67", "312"], ["71", "312"], ["74", "312"], ["74", "312"], ["78", "312"], ["82", "312"], ["87", "312"], ["87", "312"], ["92", "312"], ["95", "312"], ["94", "312"], ["98", "312"], ["94", "312"], ["92", "312"], ["92", "312"], ["102", "312"], ["105", "312"], ["104", "312"], ["102", "312"], ["102", "312"], ["110", "312"], ["113", "312"], ["113", "312"], ["116", "312"], ["119", "312"], ["121", "312"], ["119", "312"], ["119", "312"], ["162", "312"], ["165", "312"], ["169", "312"], ["169", "312"], ["169", "312"], ["178", "312"], ["180", "312"], ["178", "312"], ["178", "312"], ["190", "312"], ["193", "312"], ["196", "312"], ["198", "312"], ["203", "312"], ["203", "312"], ["294", "312"], ["294", "312"], ["294", "312"], ["298", "312"], ["298", "312"], ["304", "312"], ["303", "312"], ["303", "312"], ["301", "312"], ["301", "312"], ["308", "312"], ["308", "312"], ["212", "312"], ["212", "312"], ["212", "312"], ["218", "312"], ["220", "312"], ["218", "312"], ["218", "312"], ["225", "312"], ["228", "312"], ["228", "312"], ["287", "312"], ["287", "312"], ["237", "312"], ["237", "312"], ["235", "312"], ["235", "312"], ["245", "312"], ["245", "312"], ["243", "312"], ["243", "312"], ["252", "312"], ["252", "312"], ["251", "312"], ["256", "312"], ["251", "312"], ["251", "312"], ["264", "312"], ["264", "312"], ["271", "312"], ["274", "312"], ["277", "312"], ["283", "312"], ["282", "312"], ["282", "312"], ["280", "312"], ["280", "312"], ["231", "312"], ["131", "312"], ["129", "312"], ["129", "312"], ["139", "312"], ["139", "312"], ["137", "312"], ["137", "312"], ["146", "312"], ["146", "312"], ["153", "312"], ["156", "312"], ["155", "312"], ["155", "312"], ["153", "312"], ["153", "312"], ["124", "312"], ["252", "312"], ["27", "28"], ["27", "30"], ["27", "33"], ["80", "78"], ["84", "82"], ["89", "87"], ["94", "92"], ["94", "92"], ["104", "102"], ["104", "102"], ["104", "102"], ["27", "110"], ["27", "162"], ["27", "165"], ["171", "169"], ["171", "169"], ["171", "169"], ["180", "178"], ["180", "178"], ["180", "178"], ["110", "113"], ["27", "113"], ["27", "116"], ["27", "124"], ["27", "187"], ["53", "301"], ["74", "301"], ["27", "301"], ["162", "301"], ["271", "301"], ["165", "301"], ["274", "301"], ["301", "308"], ["27", "308"], ["27", "38"], ["27", "50"], ["27", "63"], ["41", "80"], ["67", "80"], ["27", "80"], ["80", "84"], ["27", "84"], ["84", "89"], ["27", "89"], ["78", "94"], ["27", "94"], ["82", "94"], ["105", "104"], ["27", "104"], ["108", "104"], ["116", "119"], ["124", "119"], ["27", "119"], ["121", "119"], ["121", "119"], ["119", "124"], ["131", "129"], ["131", "129"], ["139", "137"], ["139", "137"], ["27", "146"], ["27", "171"], ["175", "171"], ["27", "180"], ["183", "180"], ["27", "190"], ["27", "193"], ["200", "198"], ["196", "294"], ["280", "294"], ["27", "294"], ["162", "303"], ["271", "303"], ["27", "303"], ["165", "303"], ["274", "303"], ["38", "41"], ["27", "41"], ["43", "41"], ["46", "41"], ["50", "53"], ["27", "53"], ["55", "53"], ["58", "53"], ["27", "64"], ["27", "71"], ["78", "95"], ["27", "95"], ["82", "98"], ["27", "98"], ["89", "105"], ["27", "105"], ["27", "108"], ["27", "121"], ["87", "121"], ["113", "153"], ["27", "153"], ["156", "153"], ["156", "153"], ["137", "153"], ["27", "175"], ["27", "183"], ["193", "196"], ["27", "196"], ["162", "304"], ["271", "304"], ["27", "304"], ["27", "43"], ["27", "49"], ["27", "55"], ["27", "61"], ["64", "67"], ["27", "67"], ["71", "74"], ["27", "74"], ["139", "131"], ["27", "131"], ["102", "131"], ["131", "139"], ["27", "139"], ["102", "139"], ["156", "155"], ["156", "155"], ["137", "155"], ["27", "155"], ["113", "200"], ["294", "200"], ["153", "200"], ["27", "200"], ["198", "203"], ["209", "203"], ["27", "203"], ["209", "207"], ["214", "212"], ["214", "212"], ["220", "218"], ["220", "218"], ["27", "287"], ["190", "298"], ["277", "298"], ["27", "298"], ["43", "46"], ["27", "46"], ["55", "58"], ["27", "58"], ["129", "156"], ["27", "156"], ["27", "225"], ["119", "143"], ["27", "143"], ["203", "209"], ["27", "209"], ["207", "214"], ["27", "214"], ["214", "220"], ["27", "220"], ["225", "228"], ["231", "228"], ["27", "228"], ["228", "231"], ["27", "231"], ["212", "235"], ["27", "235"], ["169", "235"], ["218", "243"], ["27", "243"], ["178", "243"], ["212", "237"], ["27", "237"], ["169", "237"], ["218", "245"], ["27", "245"], ["178", "245"], ["252", "251"], ["252", "251"], ["252", "251"], ["256", "251"], ["256", "251"], ["27", "264"], ["252", "271"], ["27", "271"], ["252", "274"], ["27", "274"], ["27", "277"], ["27", "252"], ["235", "252"], ["243", "252"], ["264", "256"], ["27", "256"], ["196", "280"], ["27", "280"], ["283", "280"], ["283", "280"], ["252", "280"], ["283", "282"], ["283", "282"], ["27", "282"], ["252", "282"], ["27", "283"], ["252", "283"], ["119", "146"], ["119", "131"], ["119", "119"], ["119", "121"], ["119", "153"], ["119", "129"], ["119", "148"], ["119", "137"], ["119", "155"], ["119", "139"], ["119", "141"], ["119", "143"], ["119", "147"], ["119", "156"], ["119", "124"], ["119", "133"], ["53", "68"], ["53", "73"], ["53", "77"], ["53", "64"], ["53", "75"], ["53", "67"], ["53", "74"], ["53", "70"], ["53", "66"], ["53", "71"], ["203", "214"], ["203", "225"], ["203", "209"], ["203", "228"], ["203", "207"], ["203", "289"], ["203", "212"], ["203", "288"], ["203", "287"], ["203", "220"], ["203", "203"], ["203", "218"], ["298", "196"], ["298", "198"], ["298", "298"], ["298", "195"], ["298", "190"], ["298", "193"], ["298", "200"], ["298", "294"], ["298", "203"], ["228", "243"], ["228", "245"], ["228", "228"], ["228", "247"], ["228", "231"], ["228", "239"], ["228", "252"], ["228", "235"], ["228", "237"], ["228", "251"], ["251", "282"], ["251", "283"], ["251", "264"], ["251", "280"], ["251", "265"], ["251", "274"], ["251", "277"], ["251", "271"], ["251", "266"], ["252", "257"], ["252", "256"], ["252", "258"]], "features": {"27": "<(METHOD,main)<SUB>1</SUB>>", "29": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY scan = null)<SUB>2</SUB>>", "32": "<(LITERAL,null,ANY scan = null)<SUB>2</SUB>>", "33": "<(&lt;operator&gt;.assignment,ANY out = null)<SUB>3</SUB>>", "35": "<(LITERAL,null,ANY out = null)<SUB>3</SUB>>", "37": "<(BLOCK,try,try)<SUB>4</SUB>>", "39": "<(IDENTIFIER,scan,scan = new FastScanner(new FileInputStream(&quot;input.txt&quot;)))<SUB>5</SUB>>", "41": "<(&lt;init&gt;,new FastScanner(new FileInputStream(&quot;input.txt&quot;)))<SUB>5</SUB>>", "42": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "44": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "46": "<(&lt;init&gt;,new FileInputStream(&quot;input.txt&quot;))<SUB>5</SUB>>", "48": "<(LITERAL,&quot;input.txt&quot;,new FileInputStream(&quot;input.txt&quot;))<SUB>5</SUB>>", "50": "<(&lt;operator&gt;.assignment,out = new PrintWriter(new FileOutputStream(&quot;output.txt&quot;)))<SUB>6</SUB>>", "52": "<(&lt;operator&gt;.alloc,new PrintWriter(new FileOutputStream(&quot;output.txt&quot;)))<SUB>6</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new FileOutputStream(&quot;output.txt&quot;)))<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "57": "<(&lt;operator&gt;.alloc,new FileOutputStream(&quot;output.txt&quot;))<SUB>6</SUB>>", "59": "<(IDENTIFIER,$obj2,new FileOutputStream(&quot;output.txt&quot;))>", "61": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "65": "<(IDENTIFIER,scan,scan = new FastScanner(System.in))<SUB>8</SUB>>", "67": "<(&lt;init&gt;,new FastScanner(System.in))<SUB>8</SUB>>", "68": "<(&lt;operator&gt;.fieldAccess,System.in)<SUB>8</SUB>>", "70": "<(FIELD_IDENTIFIER,in,in)<SUB>8</SUB>>", "72": "<(IDENTIFIER,out,out = new PrintWriter(System.out))<SUB>9</SUB>>", "74": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>9</SUB>>", "77": "<(FIELD_IDENTIFIER,out,out)<SUB>9</SUB>>", "79": "<(IDENTIFIER,n,n = nextInt())<SUB>12</SUB>>", "81": "<(IDENTIFIER,scan,nextInt())<SUB>12</SUB>>", "83": "<(IDENTIFIER,m,m = nextInt())<SUB>13</SUB>>", "85": "<(IDENTIFIER,scan,nextInt())<SUB>13</SUB>>", "87": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>14</SUB>>", "89": "<(nextInt,nextInt())<SUB>14</SUB>>", "91": "<(LOCAL,int[][] board: int[][])<SUB>15</SUB>>", "93": "<(IDENTIFIER,board,int[][] board = new int[n + 1][m + 1])<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.addition,n + 1)<SUB>15</SUB>>", "97": "<(LITERAL,1,n + 1)<SUB>15</SUB>>", "99": "<(IDENTIFIER,m,m + 1)<SUB>15</SUB>>", "101": "<(LOCAL,String[] ins: java.lang.String[])<SUB>16</SUB>>", "103": "<(IDENTIFIER,ins,String[] ins = split(&quot; &quot;, -1))<SUB>16</SUB>>", "105": "<(nextLine,nextLine())<SUB>16</SUB>>", "107": "<(LITERAL,&quot; &quot;,split(&quot; &quot;, -1))<SUB>16</SUB>>", "109": "<(LITERAL,1,-1)<SUB>16</SUB>>", "110": "<(&lt;operator&gt;.assignment,ANY ps = new ArrayList&lt;Integer&gt;())<SUB>17</SUB>>", "112": "<(&lt;operator&gt;.alloc,new ArrayList&lt;Integer&gt;())<SUB>17</SUB>>", "9": "<(IDENTIFIER,ps,new ArrayList&lt;Integer&gt;())<SUB>17</SUB>>", "115": "<(LOCAL,int i: int)<SUB>18</SUB>>", "117": "<(IDENTIFIER,i,int i = 0)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.lessThan,i &lt; 2 * k)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.multiplication,2 * k)<SUB>18</SUB>>", "123": "<(IDENTIFIER,k,2 * k)<SUB>18</SUB>>", "125": "<(IDENTIFIER,i,i += 2)<SUB>18</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.assignment,int a = Integer.parseInt(ins[i]))<SUB>19</SUB>>", "131": "<(parseInt,Integer.parseInt(ins[i]))<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,ins[i])<SUB>19</SUB>>", "135": "<(IDENTIFIER,i,Integer.parseInt(ins[i]))<SUB>19</SUB>>", "137": "<(&lt;operator&gt;.assignment,int b = Integer.parseInt(ins[i + 1]))<SUB>20</SUB>>", "139": "<(parseInt,Integer.parseInt(ins[i + 1]))<SUB>20</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,ins[i + 1])<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.addition,i + 1)<SUB>20</SUB>>", "145": "<(LITERAL,1,i + 1)<SUB>20</SUB>>", "147": "<(&lt;operator&gt;.indexAccess,board[a][b])<SUB>21</SUB>>", "149": "<(IDENTIFIER,board,board[a][b] = 1)<SUB>21</SUB>>", "151": "<(IDENTIFIER,b,board[a][b] = 1)<SUB>21</SUB>>", "153": "<(add,add(a * 2001 + b))<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.addition,a * 2001 + b)<SUB>22</SUB>>", "157": "<(IDENTIFIER,a,a * 2001)<SUB>22</SUB>>", "159": "<(IDENTIFIER,b,a * 2001 + b)<SUB>22</SUB>>", "161": "<(LOCAL,int rety: int)<SUB>25</SUB>>", "163": "<(IDENTIFIER,retx,int retx = 1)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.assignment,int rety = 1)<SUB>25</SUB>>", "167": "<(LITERAL,1,int rety = 1)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.assignment,int[] dx = { 0, 1, 0, -1 })<SUB>26</SUB>>", "171": "<(&lt;operator&gt;.arrayInitializer,{ 0, 1, 0, -1 })<SUB>26</SUB>>", "173": "<(LITERAL,1,{ 0, 1, 0, -1 })<SUB>26</SUB>>", "175": "<(&lt;operator&gt;.minus,-1)<SUB>26</SUB>>", "177": "<(LOCAL,int[] dy: int[])<SUB>27</SUB>>", "179": "<(IDENTIFIER,dy,int[] dy = { 1, 0, -1, 0 })<SUB>27</SUB>>", "181": "<(LITERAL,1,{ 1, 0, -1, 0 })<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.minus,-1)<SUB>27</SUB>>", "185": "<(LITERAL,0,{ 1, 0, -1, 0 })<SUB>27</SUB>>", "187": "<(LITERAL,true,while (true))<SUB>28</SUB>>", "189": "<(LOCAL,boolean find: boolean)<SUB>29</SUB>>", "191": "<(IDENTIFIER,find,boolean find = false)<SUB>29</SUB>>", "12": "<(LOCAL,List&lt;Integer&gt; ps2: ANY)<SUB>30</SUB>>", "194": "<(IDENTIFIER,ps2,ANY ps2 = new ArrayList&lt;Integer&gt;())<SUB>30</SUB>>", "196": "<(&lt;init&gt;,new ArrayList&lt;Integer&gt;())<SUB>30</SUB>>", "197": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>31</SUB>>", "199": "<(IDENTIFIER,$iterLocal0,)<SUB>31</SUB>>", "201": "<(IDENTIFIER,ps,&lt;empty&gt;)<SUB>31</SUB>>", "203": "<(hasNext,&lt;empty&gt;)<SUB>31</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "207": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>31</SUB>>", "209": "<(next,&lt;empty&gt;)<SUB>31</SUB>>", "211": "<(LOCAL,int i: int)<SUB>32</SUB>>", "213": "<(IDENTIFIER,i,int i = p / 2001)<SUB>32</SUB>>", "215": "<(IDENTIFIER,p,p / 2001)<SUB>32</SUB>>", "217": "<(LOCAL,int j: int)<SUB>33</SUB>>", "219": "<(IDENTIFIER,j,int j = p % 2001)<SUB>33</SUB>>", "221": "<(IDENTIFIER,p,p % 2001)<SUB>33</SUB>>", "223": "<(CONTROL_STRUCTURE,for (int q = 0; Some(q &lt; 4); q++),for (int q = 0; Some(q &lt; 4); q++))<SUB>34</SUB>>", "225": "<(&lt;operator&gt;.assignment,int q = 0)<SUB>34</SUB>>", "227": "<(LITERAL,0,int q = 0)<SUB>34</SUB>>", "229": "<(IDENTIFIER,q,q &lt; 4)<SUB>34</SUB>>", "231": "<(&lt;operator&gt;.postIncrement,q++)<SUB>34</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "235": "<(&lt;operator&gt;.assignment,int nx = i + dx[q])<SUB>35</SUB>>", "237": "<(&lt;operator&gt;.addition,i + dx[q])<SUB>35</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,dx[q])<SUB>35</SUB>>", "241": "<(IDENTIFIER,q,i + dx[q])<SUB>35</SUB>>", "243": "<(&lt;operator&gt;.assignment,int ny = j + dy[q])<SUB>36</SUB>>", "245": "<(&lt;operator&gt;.addition,j + dy[q])<SUB>36</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,dy[q])<SUB>36</SUB>>", "249": "<(IDENTIFIER,q,j + dy[q])<SUB>36</SUB>>", "251": "<(&lt;operator&gt;.logicalAnd,in(nx, ny) &amp;&amp; board[nx][ny] == 0)<SUB>37</SUB>>", "253": "<(IDENTIFIER,this,in(nx, ny))<SUB>37</SUB>>", "255": "<(IDENTIFIER,ny,in(nx, ny))<SUB>37</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,board[nx][ny])<SUB>37</SUB>>", "259": "<(IDENTIFIER,board,board[nx][ny] == 0)<SUB>37</SUB>>", "261": "<(IDENTIFIER,ny,board[nx][ny] == 0)<SUB>37</SUB>>", "263": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "265": "<(&lt;operator&gt;.indexAccess,board[nx][ny])<SUB>38</SUB>>", "267": "<(IDENTIFIER,board,board[nx][ny] = 1)<SUB>38</SUB>>", "269": "<(IDENTIFIER,ny,board[nx][ny] = 1)<SUB>38</SUB>>", "271": "<(&lt;operator&gt;.assignment,retx = nx)<SUB>39</SUB>>", "273": "<(IDENTIFIER,nx,retx = nx)<SUB>39</SUB>>", "275": "<(IDENTIFIER,rety,rety = ny)<SUB>40</SUB>>", "277": "<(&lt;operator&gt;.assignment,find = true)<SUB>41</SUB>>", "279": "<(LITERAL,true,find = true)<SUB>41</SUB>>", "281": "<(IDENTIFIER,ps2,add(nx * 2001 + ny))<SUB>42</SUB>>", "283": "<(&lt;operator&gt;.multiplication,nx * 2001)<SUB>42</SUB>>", "285": "<(LITERAL,2001,nx * 2001)<SUB>42</SUB>>", "287": "<(&lt;operator&gt;.assignment,board[i][j] = 2)<SUB>45</SUB>>", "289": "<(&lt;operator&gt;.indexAccess,board[i])<SUB>45</SUB>>", "291": "<(IDENTIFIER,i,board[i][j] = 2)<SUB>45</SUB>>", "293": "<(LITERAL,2,board[i][j] = 2)<SUB>45</SUB>>", "295": "<(IDENTIFIER,ps,ps = ps2)<SUB>47</SUB>>", "297": "<(CONTROL_STRUCTURE,if (!find),if (!find))<SUB>48</SUB>>", "299": "<(IDENTIFIER,find,!find)<SUB>48</SUB>>", "301": "<(println,println(retx + &quot; &quot; + rety))<SUB>50</SUB>>", "303": "<(&lt;operator&gt;.addition,retx + &quot; &quot; + rety)<SUB>50</SUB>>", "305": "<(IDENTIFIER,retx,retx + &quot; &quot;)<SUB>50</SUB>>", "307": "<(IDENTIFIER,rety,retx + &quot; &quot; + rety)<SUB>50</SUB>>", "309": "<(IDENTIFIER,out,close())<SUB>51</SUB>>", "311": "<(MODIFIER,STATIC)>"}}