{"edges": [["19", "21"], ["19", "103"], ["19", "104"], ["19", "105"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "38"], ["34", "44"], ["35", "36"], ["35", "37"], ["38", "39"], ["39", "40"], ["39", "43"], ["40", "41"], ["40", "42"], ["44", "45"], ["45", "46"], ["45", "51"], ["45", "65"], ["46", "47"], ["46", "50"], ["47", "48"], ["47", "49"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["56", "62"], ["57", "58"], ["57", "59"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["65", "66"], ["66", "67"], ["66", "72"], ["66", "88"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["72", "73"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "85"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "87"], ["88", "89"], ["89", "90"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "100"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["22", "28"], ["25", "32"], ["30", "35"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "42"], ["35", "47"], ["28", "26"], ["39", "105"], ["40", "39"], ["46", "55"], ["46", "68"], ["42", "40"], ["47", "46"], ["52", "105"], ["53", "59"], ["56", "52"], ["67", "76"], ["67", "93"], ["55", "53"], ["57", "62"], ["62", "56"], ["68", "67"], ["73", "105"], ["59", "57"], ["74", "79"], ["77", "73"], ["90", "105"], ["76", "74"], ["78", "85"], ["85", "77"], ["91", "97"], ["94", "90"], ["79", "82"], ["82", "78"], ["93", "91"], ["95", "100"], ["100", "94"], ["97", "95"], ["19", "24"], ["20", "105"], ["22", "105"], ["25", "105"], ["25", "105"], ["32", "105"], ["30", "105"], ["30", "105"], ["35", "105"], ["39", "105"], ["39", "105"], ["39", "105"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["30", "35"], ["19", "35"], ["35", "39"], ["19", "39"], ["47", "46"], ["47", "46"], ["19", "46"], ["35", "47"], ["19", "47"], ["56", "52"], ["56", "52"], ["57", "56"], ["57", "56"], ["62", "56"], ["62", "56"], ["68", "67"], ["68", "67"], ["19", "67"], ["59", "57"], ["19", "57"], ["59", "57"], ["57", "62"], ["19", "62"], ["47", "68"], ["19", "68"], ["77", "73"], ["77", "73"], ["47", "59"], ["19", "59"], ["78", "77"], ["78", "77"], ["85", "77"], ["85", "77"], ["94", "90"], ["94", "90"], ["79", "78"], ["79", "78"], ["82", "78"], ["82", "78"], ["82", "85"], ["19", "85"], ["95", "94"], ["95", "94"], ["100", "94"], ["100", "94"], ["68", "79"], ["19", "79"], ["79", "82"], ["19", "82"], ["97", "95"], ["19", "95"], ["97", "95"], ["95", "100"], ["19", "100"], ["68", "97"], ["19", "97"], ["35", "47"], ["35", "42"], ["35", "46"], ["35", "40"], ["35", "39"], ["46", "68"], ["46", "57"], ["46", "52"], ["46", "56"], ["46", "67"], ["46", "59"], ["46", "53"], ["46", "55"], ["46", "62"], ["67", "94"], ["67", "73"], ["67", "77"], ["67", "85"], ["67", "74"], ["67", "95"], ["67", "76"], ["67", "97"], ["67", "91"], ["67", "82"], ["67", "93"], ["67", "90"], ["67", "79"], ["67", "100"], ["67", "78"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.lessThan,n &lt; 3)<SUB>4</SUB>>", "37": "<(LITERAL,3,n &lt; 3)<SUB>4</SUB>>", "39": "<(println,System.out.println(n))<SUB>5</SUB>>", "41": "<(IDENTIFIER,System,System.out.println(n))<SUB>5</SUB>>", "43": "<(IDENTIFIER,n,System.out.println(n))<SUB>5</SUB>>", "45": "<(CONTROL_STRUCTURE,if (n % 2 != 0),if (n % 2 != 0))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.modulo,n % 2)<SUB>7</SUB>>", "49": "<(LITERAL,2,n % 2)<SUB>7</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "55": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>8</SUB>>", "61": "<(LITERAL,1,n - 1)<SUB>8</SUB>>", "63": "<(IDENTIFIER,n,n - 2)<SUB>8</SUB>>", "65": "<(CONTROL_STRUCTURE,else,else)<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.equals,n % 3 == 0)<SUB>10</SUB>>", "69": "<(IDENTIFIER,n,n % 3)<SUB>10</SUB>>", "71": "<(LITERAL,0,n % 3 == 0)<SUB>10</SUB>>", "73": "<(println,System.out.println((n - 1) * (n - 2) * (n - 3)))<SUB>11</SUB>>", "75": "<(IDENTIFIER,System,System.out.println((n - 1) * (n - 2) * (n - 3)))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2) * (n - 3))<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>11</SUB>>", "81": "<(LITERAL,1,n - 1)<SUB>11</SUB>>", "83": "<(IDENTIFIER,n,n - 2)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.subtraction,n - 3)<SUB>11</SUB>>", "87": "<(LITERAL,3,n - 3)<SUB>11</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>14</SUB>>", "93": "<(FIELD_IDENTIFIER,out,out)<SUB>14</SUB>>", "95": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>14</SUB>>", "99": "<(LITERAL,1,n - 1)<SUB>14</SUB>>", "101": "<(IDENTIFIER,n,n - 3)<SUB>14</SUB>>", "103": "<(MODIFIER,PUBLIC)>", "105": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}