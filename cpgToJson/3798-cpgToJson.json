{"edges": [["21", "23"], ["21", "425"], ["21", "426"], ["21", "427"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["31", "37"], ["31", "38"], ["31", "42"], ["31", "43"], ["31", "47"], ["31", "48"], ["31", "54"], ["31", "103"], ["31", "152"], ["31", "153"], ["31", "158"], ["31", "159"], ["31", "164"], ["31", "6"], ["31", "365"], ["31", "368"], ["31", "369"], ["31", "420"], ["33", "34"], ["33", "35"], ["35", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["50", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "62"], ["54", "64"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "75"], ["65", "77"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "79"], ["77", "83"], ["77", "92"], ["79", "80"], ["79", "81"], ["81", "82"], ["83", "84"], ["83", "91"], ["84", "85"], ["84", "90"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["92", "93"], ["92", "102"], ["93", "94"], ["93", "101"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["103", "104"], ["103", "105"], ["103", "108"], ["103", "113"], ["103", "115"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["113", "114"], ["115", "116"], ["116", "117"], ["116", "118"], ["116", "121"], ["116", "124"], ["116", "126"], ["118", "119"], ["118", "120"], ["121", "122"], ["121", "123"], ["124", "125"], ["126", "127"], ["126", "128"], ["126", "132"], ["126", "141"], ["128", "129"], ["128", "130"], ["130", "131"], ["132", "133"], ["132", "140"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["141", "142"], ["141", "151"], ["142", "143"], ["142", "150"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "148"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["164", "169"], ["164", "174"], ["164", "176"], ["166", "167"], ["166", "168"], ["169", "170"], ["169", "171"], ["171", "172"], ["171", "173"], ["174", "175"], ["176", "177"], ["176", "332"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "185"], ["177", "187"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["187", "188"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["198", "200"], ["198", "205"], ["198", "234"], ["198", "265"], ["198", "294"], ["198", "325"], ["200", "201"], ["200", "202"], ["202", "203"], ["202", "204"], ["205", "206"], ["205", "209"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "211"], ["209", "228"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "221"], ["214", "215"], ["214", "220"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["221", "222"], ["221", "225"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["230", "231"], ["230", "232"], ["230", "233"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "237"], ["237", "238"], ["237", "239"], ["240", "241"], ["240", "242"], ["240", "259"], ["242", "243"], ["242", "244"], ["244", "245"], ["244", "252"], ["245", "246"], ["245", "251"], ["246", "247"], ["246", "250"], ["247", "248"], ["247", "249"], ["252", "253"], ["252", "256"], ["253", "254"], ["253", "255"], ["256", "257"], ["256", "258"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "263"], ["261", "264"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["269", "288"], ["271", "272"], ["271", "273"], ["273", "274"], ["273", "281"], ["274", "275"], ["274", "280"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["281", "282"], ["281", "287"], ["282", "283"], ["282", "284"], ["284", "285"], ["284", "286"], ["288", "289"], ["288", "290"], ["290", "291"], ["290", "292"], ["290", "293"], ["294", "295"], ["294", "300"], ["295", "296"], ["295", "297"], ["297", "298"], ["297", "299"], ["300", "301"], ["300", "302"], ["300", "319"], ["302", "303"], ["302", "304"], ["304", "305"], ["304", "312"], ["305", "306"], ["305", "311"], ["306", "307"], ["306", "310"], ["307", "308"], ["307", "309"], ["312", "313"], ["312", "318"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "317"], ["319", "320"], ["319", "321"], ["321", "322"], ["321", "323"], ["321", "324"], ["325", "326"], ["325", "331"], ["326", "327"], ["326", "330"], ["327", "328"], ["327", "329"], ["332", "333"], ["332", "334"], ["332", "337"], ["332", "340"], ["332", "342"], ["334", "335"], ["334", "336"], ["337", "338"], ["337", "339"], ["340", "341"], ["342", "343"], ["343", "344"], ["343", "345"], ["343", "348"], ["343", "351"], ["343", "353"], ["345", "346"], ["345", "347"], ["348", "349"], ["348", "350"], ["351", "352"], ["353", "354"], ["354", "355"], ["354", "360"], ["355", "356"], ["355", "359"], ["356", "357"], ["356", "358"], ["360", "361"], ["360", "364"], ["361", "362"], ["361", "363"], ["365", "366"], ["365", "367"], ["368", "5"], ["369", "370"], ["369", "371"], ["369", "374"], ["369", "377"], ["369", "379"], ["371", "372"], ["371", "373"], ["374", "375"], ["374", "376"], ["377", "378"], ["379", "380"], ["379", "417"], ["380", "381"], ["380", "382"], ["380", "385"], ["380", "388"], ["380", "390"], ["382", "383"], ["382", "384"], ["385", "386"], ["385", "387"], ["388", "389"], ["390", "391"], ["391", "392"], ["391", "397"], ["391", "404"], ["392", "393"], ["392", "396"], ["393", "394"], ["393", "395"], ["397", "398"], ["398", "399"], ["398", "400"], ["400", "401"], ["400", "403"], ["401", "402"], ["404", "405"], ["405", "406"], ["406", "407"], ["406", "408"], ["408", "409"], ["408", "416"], ["409", "410"], ["409", "411"], ["411", "412"], ["411", "415"], ["412", "413"], ["412", "414"], ["417", "418"], ["417", "419"], ["420", "421"], ["420", "424"], ["421", "422"], ["421", "423"], ["24", "30"], ["27", "35"], ["26", "24"], ["28", "27"], ["33", "40"], ["38", "45"], ["43", "50"], ["48", "56"], ["153", "161"], ["159", "166"], ["365", "368"], ["368", "371"], ["420", "427"], ["30", "28"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["56", "59"], ["59", "67"], ["59", "105"], ["62", "59"], ["105", "110"], ["108", "118"], ["108", "155"], ["113", "110"], ["155", "153"], ["161", "159"], ["166", "171"], ["169", "179"], ["169", "367"], ["174", "171"], ["367", "365"], ["371", "374"], ["374", "382"], ["374", "423"], ["377", "374"], ["421", "420"], ["110", "108"], ["171", "169"], ["417", "377"], ["423", "421"], ["67", "72"], ["70", "81"], ["70", "62"], ["75", "72"], ["118", "121"], ["121", "130"], ["121", "113"], ["124", "121"], ["179", "182"], ["182", "190"], ["182", "334"], ["185", "182"], ["334", "337"], ["337", "345"], ["337", "174"], ["340", "337"], ["382", "385"], ["385", "393"], ["385", "417"], ["388", "385"], ["72", "70"], ["79", "86"], ["83", "95"], ["92", "75"], ["128", "135"], ["132", "146"], ["141", "124"], ["81", "79"], ["84", "83"], ["93", "92"], ["130", "128"], ["133", "132"], ["142", "141"], ["190", "193"], ["193", "204"], ["193", "185"], ["196", "193"], ["345", "348"], ["348", "356"], ["348", "340"], ["351", "348"], ["392", "401"], ["392", "412"], ["85", "84"], ["94", "93"], ["134", "133"], ["143", "142"], ["200", "206"], ["325", "196"], ["354", "351"], ["393", "392"], ["398", "388"], ["86", "85"], ["95", "98"], ["98", "94"], ["135", "134"], ["144", "143"], ["202", "200"], ["206", "216"], ["206", "237"], ["235", "247"], ["235", "266"], ["266", "276"], ["266", "297"], ["295", "307"], ["295", "327"], ["326", "325"], ["355", "361"], ["360", "354"], ["400", "398"], ["406", "388"], ["146", "144"], ["204", "202"], ["211", "230"], ["228", "237"], ["237", "235"], ["242", "261"], ["259", "266"], ["271", "290"], ["288", "297"], ["297", "295"], ["302", "321"], ["319", "327"], ["327", "326"], ["356", "355"], ["361", "360"], ["401", "400"], ["408", "406"], ["213", "211"], ["230", "228"], ["244", "242"], ["261", "259"], ["273", "271"], ["290", "288"], ["304", "302"], ["321", "319"], ["409", "408"], ["214", "222"], ["221", "213"], ["245", "253"], ["252", "244"], ["274", "284"], ["281", "273"], ["305", "315"], ["312", "304"], ["411", "409"], ["215", "214"], ["222", "225"], ["225", "221"], ["246", "245"], ["253", "256"], ["256", "252"], ["275", "274"], ["282", "281"], ["306", "305"], ["313", "312"], ["412", "411"], ["216", "215"], ["247", "246"], ["276", "275"], ["284", "282"], ["307", "306"], ["315", "313"], ["21", "26"], ["22", "427"], ["24", "427"], ["27", "427"], ["27", "427"], ["33", "427"], ["38", "427"], ["45", "427"], ["43", "427"], ["43", "427"], ["48", "427"], ["48", "427"], ["48", "427"], ["108", "427"], ["108", "427"], ["153", "427"], ["153", "427"], ["159", "427"], ["161", "427"], ["159", "427"], ["159", "427"], ["166", "427"], ["169", "427"], ["171", "427"], ["169", "427"], ["169", "427"], ["365", "427"], ["368", "427"], ["371", "427"], ["374", "427"], ["374", "427"], ["374", "427"], ["420", "427"], ["420", "427"], ["420", "427"], ["382", "427"], ["385", "427"], ["385", "427"], ["385", "427"], ["417", "427"], ["377", "427"], ["393", "427"], ["392", "427"], ["392", "427"], ["409", "427"], ["408", "427"], ["406", "427"], ["406", "427"], ["400", "427"], ["398", "427"], ["398", "427"], ["388", "427"], ["174", "427"], ["345", "427"], ["348", "427"], ["348", "427"], ["348", "427"], ["340", "427"], ["354", "427"], ["354", "427"], ["354", "427"], ["351", "427"], ["190", "427"], ["193", "427"], ["193", "427"], ["193", "427"], ["185", "427"], ["200", "427"], ["200", "427"], ["206", "427"], ["213", "427"], ["213", "427"], ["211", "427"], ["211", "427"], ["230", "427"], ["230", "427"], ["228", "427"], ["228", "427"], ["235", "427"], ["235", "427"], ["244", "427"], ["244", "427"], ["242", "427"], ["242", "427"], ["261", "427"], ["261", "427"], ["259", "427"], ["259", "427"], ["266", "427"], ["273", "427"], ["273", "427"], ["271", "427"], ["271", "427"], ["290", "427"], ["290", "427"], ["288", "427"], ["288", "427"], ["295", "427"], ["295", "427"], ["304", "427"], ["304", "427"], ["302", "427"], ["302", "427"], ["321", "427"], ["321", "427"], ["319", "427"], ["319", "427"], ["325", "427"], ["325", "427"], ["325", "427"], ["196", "427"], ["118", "427"], ["121", "427"], ["121", "427"], ["113", "427"], ["130", "427"], ["128", "427"], ["128", "427"], ["132", "427"], ["132", "427"], ["141", "427"], ["141", "427"], ["141", "427"], ["124", "427"], ["67", "427"], ["70", "427"], ["70", "427"], ["70", "427"], ["62", "427"], ["81", "427"], ["79", "427"], ["79", "427"], ["83", "427"], ["83", "427"], ["92", "427"], ["92", "427"], ["92", "427"], ["75", "427"], ["21", "22"], ["21", "24"], ["21", "31"], ["24", "27"], ["21", "27"], ["35", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["50", "48"], ["50", "48"], ["155", "153"], ["155", "153"], ["161", "159"], ["161", "159"], ["21", "365"], ["21", "56"], ["21", "105"], ["21", "166"], ["365", "368"], ["21", "368"], ["21", "371"], ["368", "420"], ["417", "420"], ["21", "420"], ["27", "35"], ["21", "35"], ["35", "40"], ["21", "40"], ["40", "45"], ["21", "45"], ["33", "50"], ["21", "50"], ["38", "50"], ["56", "59"], ["62", "59"], ["21", "59"], ["50", "59"], ["59", "62"], ["21", "62"], ["105", "108"], ["113", "108"], ["21", "108"], ["110", "108"], ["110", "108"], ["108", "113"], ["21", "113"], ["110", "155"], ["21", "155"], ["50", "155"], ["121", "155"], ["72", "155"], ["155", "161"], ["21", "161"], ["155", "161"], ["166", "169"], ["174", "169"], ["21", "169"], ["171", "169"], ["171", "169"], ["169", "174"], ["21", "174"], ["371", "374"], ["377", "374"], ["21", "374"], ["161", "374"], ["337", "374"], ["374", "377"], ["21", "377"], ["21", "67"], ["59", "110"], ["21", "110"], ["21", "118"], ["43", "171"], ["21", "171"], ["21", "179"], ["21", "334"], ["21", "382"], ["368", "417"], ["406", "417"], ["398", "417"], ["21", "417"], ["67", "70"], ["75", "70"], ["21", "70"], ["72", "70"], ["72", "70"], ["21", "75"], ["70", "75"], ["81", "79"], ["79", "83"], ["21", "83"], ["21", "92"], ["79", "92"], ["118", "121"], ["124", "121"], ["21", "121"], ["50", "121"], ["72", "121"], ["121", "124"], ["21", "124"], ["130", "128"], ["128", "132"], ["21", "132"], ["21", "141"], ["128", "141"], ["179", "182"], ["185", "182"], ["21", "182"], ["161", "182"], ["337", "182"], ["297", "182"], ["182", "185"], ["295", "185"], ["21", "185"], ["334", "337"], ["340", "337"], ["21", "337"], ["182", "337"], ["337", "340"], ["21", "340"], ["382", "385"], ["388", "385"], ["21", "385"], ["161", "385"], ["348", "385"], ["193", "385"], ["385", "388"], ["21", "388"], ["50", "72"], ["21", "72"], ["21", "190"], ["21", "345"], ["45", "81"], ["21", "81"], ["45", "130"], ["81", "130"], ["21", "130"], ["190", "193"], ["196", "193"], ["21", "193"], ["161", "193"], ["348", "193"], ["237", "193"], ["235", "196"], ["21", "196"], ["200", "325"], ["228", "325"], ["259", "325"], ["288", "325"], ["319", "325"], ["21", "325"], ["345", "348"], ["351", "348"], ["21", "348"], ["161", "348"], ["193", "348"], ["348", "351"], ["21", "351"], ["325", "354"], ["393", "392"], ["393", "392"], ["21", "392"], ["171", "393"], ["21", "393"], ["368", "398"], ["417", "398"], ["406", "398"], ["21", "398"], ["401", "398"], ["70", "98"], ["21", "98"], ["193", "206"], ["21", "206"], ["230", "228"], ["230", "228"], ["230", "228"], ["206", "235"], ["225", "235"], ["21", "235"], ["237", "235"], ["237", "235"], ["83", "242"], ["261", "259"], ["261", "259"], ["261", "259"], ["182", "266"], ["295", "266"], ["21", "266"], ["290", "288"], ["290", "288"], ["290", "288"], ["266", "295"], ["284", "295"], ["21", "295"], ["297", "295"], ["297", "295"], ["132", "302"], ["321", "319"], ["321", "319"], ["321", "319"], ["401", "400"], ["21", "400"], ["368", "406"], ["417", "406"], ["398", "406"], ["21", "406"], ["409", "406"], ["409", "406"], ["108", "146"], ["21", "146"], ["193", "237"], ["21", "237"], ["182", "297"], ["21", "297"], ["21", "401"], ["409", "408"], ["409", "408"], ["21", "408"], ["261", "230"], ["290", "230"], ["321", "230"], ["21", "230"], ["200", "230"], ["211", "230"], ["83", "244"], ["230", "261"], ["290", "261"], ["321", "261"], ["21", "261"], ["200", "261"], ["228", "261"], ["242", "261"], ["230", "290"], ["261", "290"], ["321", "290"], ["21", "290"], ["200", "290"], ["228", "290"], ["259", "290"], ["271", "290"], ["132", "304"], ["230", "321"], ["261", "321"], ["290", "321"], ["21", "321"], ["200", "321"], ["228", "321"], ["259", "321"], ["288", "321"], ["302", "321"], ["21", "409"], ["354", "409"], ["206", "225"], ["21", "225"], ["235", "256"], ["21", "256"], ["266", "284"], ["21", "284"], ["295", "315"], ["21", "315"], ["59", "59"], ["59", "70"], ["59", "72"], ["59", "67"], ["59", "62"], ["108", "118"], ["108", "108"], ["108", "113"], ["108", "121"], ["108", "110"], ["169", "334"], ["169", "174"], ["169", "182"], ["169", "169"], ["169", "179"], ["169", "337"], ["169", "171"], ["374", "382"], ["374", "374"], ["374", "385"], ["374", "377"], ["374", "417"], ["70", "84"], ["70", "95"], ["70", "93"], ["70", "70"], ["70", "86"], ["70", "72"], ["70", "94"], ["70", "98"], ["70", "75"], ["70", "81"], ["70", "85"], ["70", "92"], ["70", "79"], ["70", "83"], ["121", "146"], ["121", "128"], ["121", "134"], ["121", "141"], ["121", "135"], ["121", "133"], ["121", "132"], ["121", "121"], ["121", "144"], ["121", "130"], ["121", "142"], ["121", "143"], ["121", "124"], ["182", "190"], ["182", "182"], ["182", "185"], ["182", "193"], ["337", "340"], ["337", "348"], ["337", "337"], ["337", "345"], ["385", "392"], ["385", "388"], ["385", "385"], ["385", "393"], ["193", "196"], ["193", "326"], ["193", "204"], ["193", "206"], ["193", "202"], ["193", "200"], ["193", "237"], ["193", "297"], ["193", "325"], ["193", "327"], ["193", "295"], ["193", "235"], ["193", "193"], ["193", "266"], ["348", "356"], ["348", "355"], ["348", "348"], ["348", "360"], ["348", "351"], ["348", "361"], ["348", "354"], ["392", "401"], ["392", "408"], ["392", "412"], ["392", "411"], ["392", "400"], ["392", "409"], ["392", "398"], ["392", "406"], ["206", "214"], ["206", "230"], ["206", "215"], ["206", "213"], ["206", "228"], ["206", "216"], ["206", "222"], ["206", "225"], ["206", "221"], ["206", "211"], ["235", "256"], ["235", "247"], ["235", "242"], ["235", "253"], ["235", "244"], ["235", "261"], ["235", "245"], ["235", "259"], ["235", "246"], ["235", "252"], ["266", "290"], ["266", "281"], ["266", "288"], ["266", "276"], ["266", "274"], ["266", "282"], ["266", "273"], ["266", "275"], ["266", "284"], ["266", "271"], ["295", "302"], ["295", "306"], ["295", "315"], ["295", "304"], ["295", "305"], ["295", "321"], ["295", "319"], ["295", "307"], ["295", "313"], ["295", "312"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>3</SUB>>", "31": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "33": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>8</SUB>>", "35": "<(nextInt,nextInt())<SUB>8</SUB>>", "37": "<(LOCAL,int m: int)<SUB>9</SUB>>", "39": "<(IDENTIFIER,m,int m = nextInt())<SUB>9</SUB>>", "41": "<(IDENTIFIER,sc,nextInt())<SUB>9</SUB>>", "43": "<(&lt;operator&gt;.assignment,int steps = nextInt())<SUB>10</SUB>>", "45": "<(nextInt,nextInt())<SUB>10</SUB>>", "47": "<(LOCAL,long[][][] arr: long[][][])<SUB>11</SUB>>", "49": "<(IDENTIFIER,arr,long[][][] arr = new long[n][m][5])<SUB>11</SUB>>", "51": "<(IDENTIFIER,n,new long[n][m][5])<SUB>11</SUB>>", "53": "<(LITERAL,5,new long[n][m][5])<SUB>11</SUB>>", "55": "<(LOCAL,int j: int)<SUB>12</SUB>>", "57": "<(IDENTIFIER,j,int j = 0)<SUB>12</SUB>>", "59": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>12</SUB>>", "61": "<(IDENTIFIER,n,j &lt; n)<SUB>12</SUB>>", "63": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; m - 1); k++),for (int k = 0; Some(k &lt; m - 1); k++))<SUB>14</SUB>>", "67": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>14</SUB>>", "69": "<(LITERAL,0,int k = 0)<SUB>14</SUB>>", "71": "<(IDENTIFIER,k,k &lt; m - 1)<SUB>14</SUB>>", "73": "<(IDENTIFIER,m,m - 1)<SUB>14</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,k++)<SUB>14</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "79": "<(&lt;operator&gt;.assignment,long num = nextLong())<SUB>16</SUB>>", "81": "<(nextLong,nextLong())<SUB>16</SUB>>", "83": "<(&lt;operator&gt;.assignment,arr[j][k][1] = num)<SUB>17</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,arr[j][k])<SUB>17</SUB>>", "87": "<(IDENTIFIER,arr,arr[j][k][1] = num)<SUB>17</SUB>>", "89": "<(IDENTIFIER,k,arr[j][k][1] = num)<SUB>17</SUB>>", "91": "<(IDENTIFIER,num,arr[j][k][1] = num)<SUB>17</SUB>>", "93": "<(&lt;operator&gt;.indexAccess,arr[j][k + 1][3])<SUB>18</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>18</SUB>>", "97": "<(IDENTIFIER,j,arr[j][k + 1][3] = num)<SUB>18</SUB>>", "99": "<(IDENTIFIER,k,k + 1)<SUB>18</SUB>>", "101": "<(LITERAL,3,arr[j][k + 1][3] = num)<SUB>18</SUB>>", "103": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n - 1); j++),for (int j = 0; Some(j &lt; n - 1); j++))<SUB>22</SUB>>", "105": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>22</SUB>>", "107": "<(LITERAL,0,int j = 0)<SUB>22</SUB>>", "109": "<(IDENTIFIER,j,j &lt; n - 1)<SUB>22</SUB>>", "111": "<(IDENTIFIER,n,n - 1)<SUB>22</SUB>>", "113": "<(&lt;operator&gt;.postIncrement,j++)<SUB>22</SUB>>", "115": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "117": "<(LOCAL,int k: int)<SUB>24</SUB>>", "119": "<(IDENTIFIER,k,int k = 0)<SUB>24</SUB>>", "121": "<(&lt;operator&gt;.lessThan,k &lt; m)<SUB>24</SUB>>", "123": "<(IDENTIFIER,m,k &lt; m)<SUB>24</SUB>>", "125": "<(IDENTIFIER,k,k++)<SUB>24</SUB>>", "127": "<(LOCAL,long num: long)<SUB>26</SUB>>", "129": "<(IDENTIFIER,num,long num = nextLong())<SUB>26</SUB>>", "131": "<(IDENTIFIER,sc,nextLong())<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,arr[j][k][2])<SUB>27</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>27</SUB>>", "137": "<(IDENTIFIER,j,arr[j][k][2] = num)<SUB>27</SUB>>", "139": "<(LITERAL,2,arr[j][k][2] = num)<SUB>27</SUB>>", "141": "<(&lt;operator&gt;.assignment,arr[j + 1][k][4] = num)<SUB>28</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,arr[j + 1][k])<SUB>28</SUB>>", "145": "<(IDENTIFIER,arr,arr[j + 1][k][4] = num)<SUB>28</SUB>>", "147": "<(IDENTIFIER,j,j + 1)<SUB>28</SUB>>", "149": "<(IDENTIFIER,k,arr[j + 1][k][4] = num)<SUB>28</SUB>>", "151": "<(IDENTIFIER,num,arr[j + 1][k][4] = num)<SUB>28</SUB>>", "153": "<(&lt;operator&gt;.assignment,long[][] temp = new long[n][m])<SUB>32</SUB>>", "155": "<(&lt;operator&gt;.alloc,new long[n][m])>", "157": "<(IDENTIFIER,m,new long[n][m])<SUB>32</SUB>>", "159": "<(&lt;operator&gt;.assignment,long[][] ans = new long[n][m])<SUB>33</SUB>>", "161": "<(&lt;operator&gt;.alloc,new long[n][m])>", "163": "<(IDENTIFIER,m,new long[n][m])<SUB>33</SUB>>", "165": "<(LOCAL,int i: int)<SUB>34</SUB>>", "167": "<(IDENTIFIER,i,int i = 0)<SUB>34</SUB>>", "169": "<(&lt;operator&gt;.lessThan,i &lt; steps / 2)<SUB>34</SUB>>", "171": "<(&lt;operator&gt;.division,steps / 2)<SUB>34</SUB>>", "173": "<(LITERAL,2,steps / 2)<SUB>34</SUB>>", "175": "<(IDENTIFIER,i,i++)<SUB>34</SUB>>", "177": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>36</SUB>>", "179": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>36</SUB>>", "181": "<(LITERAL,0,int j = 0)<SUB>36</SUB>>", "183": "<(IDENTIFIER,j,j &lt; n)<SUB>36</SUB>>", "185": "<(&lt;operator&gt;.postIncrement,j++)<SUB>36</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "189": "<(LOCAL,int k: int)<SUB>38</SUB>>", "191": "<(IDENTIFIER,k,int k = 0)<SUB>38</SUB>>", "193": "<(&lt;operator&gt;.lessThan,k &lt; m)<SUB>38</SUB>>", "195": "<(IDENTIFIER,m,k &lt; m)<SUB>38</SUB>>", "197": "<(IDENTIFIER,k,k++)<SUB>38</SUB>>", "199": "<(LOCAL,long min: long)<SUB>40</SUB>>", "201": "<(IDENTIFIER,min,long min = Long.MAX_VALUE)<SUB>40</SUB>>", "203": "<(IDENTIFIER,Long,long min = Long.MAX_VALUE)<SUB>40</SUB>>", "205": "<(CONTROL_STRUCTURE,if (k &gt; 0),if (k &gt; 0))<SUB>41</SUB>>", "207": "<(IDENTIFIER,k,k &gt; 0)<SUB>41</SUB>>", "209": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "211": "<(&lt;operator&gt;.assignment,long f = arr[j][k][3] + ans[j][k - 1])<SUB>43</SUB>>", "213": "<(&lt;operator&gt;.addition,arr[j][k][3] + ans[j][k - 1])<SUB>43</SUB>>", "215": "<(&lt;operator&gt;.indexAccess,arr[j][k])<SUB>43</SUB>>", "217": "<(IDENTIFIER,arr,arr[j][k][3] + ans[j][k - 1])<SUB>43</SUB>>", "219": "<(IDENTIFIER,k,arr[j][k][3] + ans[j][k - 1])<SUB>43</SUB>>", "221": "<(&lt;operator&gt;.indexAccess,ans[j][k - 1])<SUB>43</SUB>>", "223": "<(IDENTIFIER,ans,arr[j][k][3] + ans[j][k - 1])<SUB>43</SUB>>", "225": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>43</SUB>>", "227": "<(LITERAL,1,k - 1)<SUB>43</SUB>>", "229": "<(IDENTIFIER,min,min = Math.min(min, f))<SUB>44</SUB>>", "231": "<(IDENTIFIER,Math,Math.min(min, f))<SUB>44</SUB>>", "233": "<(IDENTIFIER,f,Math.min(min, f))<SUB>44</SUB>>", "235": "<(&lt;operator&gt;.lessThan,k &lt; m - 1)<SUB>47</SUB>>", "237": "<(&lt;operator&gt;.subtraction,m - 1)<SUB>47</SUB>>", "239": "<(LITERAL,1,m - 1)<SUB>47</SUB>>", "241": "<(LOCAL,long f: long)<SUB>49</SUB>>", "243": "<(IDENTIFIER,f,long f = arr[j][k][1] + ans[j][k + 1])<SUB>49</SUB>>", "245": "<(&lt;operator&gt;.indexAccess,arr[j][k][1])<SUB>49</SUB>>", "247": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>49</SUB>>", "249": "<(IDENTIFIER,j,arr[j][k][1] + ans[j][k + 1])<SUB>49</SUB>>", "251": "<(LITERAL,1,arr[j][k][1] + ans[j][k + 1])<SUB>49</SUB>>", "253": "<(&lt;operator&gt;.indexAccess,ans[j])<SUB>49</SUB>>", "255": "<(IDENTIFIER,j,arr[j][k][1] + ans[j][k + 1])<SUB>49</SUB>>", "257": "<(IDENTIFIER,k,k + 1)<SUB>49</SUB>>", "259": "<(&lt;operator&gt;.assignment,min = Math.min(min, f))<SUB>50</SUB>>", "261": "<(min,Math.min(min, f))<SUB>50</SUB>>", "263": "<(IDENTIFIER,min,Math.min(min, f))<SUB>50</SUB>>", "265": "<(CONTROL_STRUCTURE,if (j &gt; 0),if (j &gt; 0))<SUB>53</SUB>>", "267": "<(IDENTIFIER,j,j &gt; 0)<SUB>53</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>54</SUB>>", "271": "<(&lt;operator&gt;.assignment,long f = arr[j][k][4] + ans[j - 1][k])<SUB>55</SUB>>", "273": "<(&lt;operator&gt;.addition,arr[j][k][4] + ans[j - 1][k])<SUB>55</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,arr[j][k])<SUB>55</SUB>>", "277": "<(IDENTIFIER,arr,arr[j][k][4] + ans[j - 1][k])<SUB>55</SUB>>", "279": "<(IDENTIFIER,k,arr[j][k][4] + ans[j - 1][k])<SUB>55</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,ans[j - 1][k])<SUB>55</SUB>>", "283": "<(IDENTIFIER,ans,arr[j][k][4] + ans[j - 1][k])<SUB>55</SUB>>", "285": "<(IDENTIFIER,j,j - 1)<SUB>55</SUB>>", "287": "<(IDENTIFIER,k,arr[j][k][4] + ans[j - 1][k])<SUB>55</SUB>>", "289": "<(IDENTIFIER,min,min = Math.min(min, f))<SUB>56</SUB>>", "291": "<(IDENTIFIER,Math,Math.min(min, f))<SUB>56</SUB>>", "293": "<(IDENTIFIER,f,Math.min(min, f))<SUB>56</SUB>>", "295": "<(&lt;operator&gt;.lessThan,j &lt; n - 1)<SUB>59</SUB>>", "297": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>59</SUB>>", "299": "<(LITERAL,1,n - 1)<SUB>59</SUB>>", "301": "<(LOCAL,long f: long)<SUB>61</SUB>>", "303": "<(IDENTIFIER,f,long f = arr[j][k][2] + ans[j + 1][k])<SUB>61</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,arr[j][k][2])<SUB>61</SUB>>", "307": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>61</SUB>>", "309": "<(IDENTIFIER,j,arr[j][k][2] + ans[j + 1][k])<SUB>61</SUB>>", "311": "<(LITERAL,2,arr[j][k][2] + ans[j + 1][k])<SUB>61</SUB>>", "313": "<(&lt;operator&gt;.indexAccess,ans[j + 1])<SUB>61</SUB>>", "315": "<(&lt;operator&gt;.addition,j + 1)<SUB>61</SUB>>", "317": "<(LITERAL,1,j + 1)<SUB>61</SUB>>", "319": "<(&lt;operator&gt;.assignment,min = Math.min(min, f))<SUB>62</SUB>>", "321": "<(min,Math.min(min, f))<SUB>62</SUB>>", "323": "<(IDENTIFIER,min,Math.min(min, f))<SUB>62</SUB>>", "325": "<(&lt;operator&gt;.assignment,temp[j][k] = min)<SUB>65</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,temp[j])<SUB>65</SUB>>", "329": "<(IDENTIFIER,j,temp[j][k] = min)<SUB>65</SUB>>", "331": "<(IDENTIFIER,min,temp[j][k] = min)<SUB>65</SUB>>", "333": "<(LOCAL,int j: int)<SUB>69</SUB>>", "335": "<(IDENTIFIER,j,int j = 0)<SUB>69</SUB>>", "337": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>69</SUB>>", "339": "<(IDENTIFIER,n,j &lt; n)<SUB>69</SUB>>", "341": "<(IDENTIFIER,j,j++)<SUB>69</SUB>>", "343": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; m); k++),for (int k = 0; Some(k &lt; m); k++))<SUB>71</SUB>>", "345": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>71</SUB>>", "347": "<(LITERAL,0,int k = 0)<SUB>71</SUB>>", "349": "<(IDENTIFIER,k,k &lt; m)<SUB>71</SUB>>", "351": "<(&lt;operator&gt;.postIncrement,k++)<SUB>71</SUB>>", "353": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>72</SUB>>", "355": "<(&lt;operator&gt;.indexAccess,ans[j][k])<SUB>73</SUB>>", "357": "<(IDENTIFIER,ans,ans[j][k] = temp[j][k])<SUB>73</SUB>>", "359": "<(IDENTIFIER,k,ans[j][k] = temp[j][k])<SUB>73</SUB>>", "361": "<(&lt;operator&gt;.indexAccess,temp[j])<SUB>73</SUB>>", "363": "<(IDENTIFIER,j,ans[j][k] = temp[j][k])<SUB>73</SUB>>", "6": "<(LOCAL,StringBuilder p: java.lang.StringBuilder)<SUB>79</SUB>>", "366": "<(IDENTIFIER,p,StringBuilder p = new StringBuilder())<SUB>79</SUB>>", "368": "<(&lt;init&gt;,new StringBuilder())<SUB>79</SUB>>", "369": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>80</SUB>>", "371": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>80</SUB>>", "373": "<(LITERAL,0,int j = 0)<SUB>80</SUB>>", "375": "<(IDENTIFIER,j,j &lt; n)<SUB>80</SUB>>", "377": "<(&lt;operator&gt;.postIncrement,j++)<SUB>80</SUB>>", "379": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>81</SUB>>", "381": "<(LOCAL,int k: int)<SUB>82</SUB>>", "383": "<(IDENTIFIER,k,int k = 0)<SUB>82</SUB>>", "385": "<(&lt;operator&gt;.lessThan,k &lt; m)<SUB>82</SUB>>", "387": "<(IDENTIFIER,m,k &lt; m)<SUB>82</SUB>>", "389": "<(IDENTIFIER,k,k++)<SUB>82</SUB>>", "391": "<(CONTROL_STRUCTURE,if (steps % 2 != 0),if (steps % 2 != 0))<SUB>84</SUB>>", "393": "<(&lt;operator&gt;.modulo,steps % 2)<SUB>84</SUB>>", "395": "<(LITERAL,2,steps % 2)<SUB>84</SUB>>", "397": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>85</SUB>>", "399": "<(IDENTIFIER,p,p.append(-1 + &quot; &quot;))<SUB>86</SUB>>", "401": "<(&lt;operator&gt;.minus,-1)<SUB>86</SUB>>", "403": "<(LITERAL,&quot; &quot;,-1 + &quot; &quot;)<SUB>86</SUB>>", "405": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>89</SUB>>", "407": "<(IDENTIFIER,p,p.append(2 * ans[j][k] + &quot; &quot;))<SUB>90</SUB>>", "409": "<(&lt;operator&gt;.multiplication,2 * ans[j][k])<SUB>90</SUB>>", "411": "<(&lt;operator&gt;.indexAccess,ans[j][k])<SUB>90</SUB>>", "413": "<(IDENTIFIER,ans,2 * ans[j][k])<SUB>90</SUB>>", "415": "<(IDENTIFIER,k,2 * ans[j][k])<SUB>90</SUB>>", "417": "<(append,p.append(&quot;\\n&quot;))<SUB>93</SUB>>", "419": "<(LITERAL,&quot;\\n&quot;,p.append(&quot;\\n&quot;))<SUB>93</SUB>>", "421": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>97</SUB>>", "423": "<(FIELD_IDENTIFIER,out,out)<SUB>97</SUB>>", "425": "<(MODIFIER,PUBLIC)>", "427": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}