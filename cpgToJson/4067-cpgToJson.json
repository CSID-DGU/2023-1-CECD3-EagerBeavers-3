{"edges": [["23", "24"], ["23", "25"], ["23", "606"], ["23", "607"], ["23", "608"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "53"], ["25", "54"], ["25", "60"], ["25", "61"], ["25", "67"], ["25", "85"], ["25", "90"], ["25", "91"], ["25", "100"], ["25", "167"], ["25", "168"], ["25", "177"], ["25", "222"], ["25", "223"], ["25", "229"], ["25", "230"], ["25", "237"], ["25", "243"], ["25", "248"], ["25", "379"], ["25", "380"], ["25", "383"], ["25", "8"], ["25", "482"], ["25", "485"], ["25", "486"], ["25", "489"], ["25", "520"], ["25", "529"], ["25", "530"], ["25", "539"], ["25", "599"], ["25", "604"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["58", "59"], ["61", "62"], ["61", "63"], ["63", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "89"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["121", "123"], ["121", "138"], ["121", "139"], ["121", "154"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["133", "134"], ["133", "137"], ["134", "135"], ["134", "136"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["143", "144"], ["143", "149"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["149", "150"], ["149", "153"], ["150", "151"], ["150", "152"], ["154", "155"], ["154", "160"], ["155", "156"], ["155", "159"], ["156", "157"], ["156", "158"], ["160", "161"], ["160", "164"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "179"], ["177", "182"], ["177", "185"], ["177", "187"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "184"], ["185", "186"], ["187", "188"], ["188", "189"], ["188", "190"], ["188", "193"], ["188", "196"], ["188", "198"], ["190", "191"], ["190", "192"], ["193", "194"], ["193", "195"], ["196", "197"], ["198", "199"], ["199", "200"], ["199", "205"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["205", "206"], ["205", "217"], ["206", "207"], ["206", "212"], ["207", "208"], ["207", "211"], ["208", "209"], ["208", "210"], ["212", "213"], ["212", "216"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "221"], ["218", "219"], ["218", "220"], ["223", "224"], ["223", "225"], ["225", "226"], ["226", "227"], ["226", "228"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["237", "240"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "247"], ["244", "245"], ["244", "246"], ["248", "249"], ["248", "250"], ["248", "253"], ["248", "258"], ["248", "260"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "257"], ["258", "259"], ["260", "261"], ["260", "271"], ["260", "272"], ["260", "277"], ["261", "262"], ["261", "269"], ["262", "263"], ["262", "266"], ["263", "264"], ["263", "265"], ["266", "267"], ["266", "268"], ["269", "270"], ["272", "273"], ["272", "274"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["277", "282"], ["277", "285"], ["277", "287"], ["279", "280"], ["279", "281"], ["282", "283"], ["282", "284"], ["285", "286"], ["287", "288"], ["287", "298"], ["288", "289"], ["288", "296"], ["289", "290"], ["289", "295"], ["290", "291"], ["290", "292"], ["292", "293"], ["292", "294"], ["296", "297"], ["298", "299"], ["298", "300"], ["298", "305"], ["298", "308"], ["298", "310"], ["300", "301"], ["300", "302"], ["302", "303"], ["302", "304"], ["305", "306"], ["305", "307"], ["308", "309"], ["310", "311"], ["310", "321"], ["310", "322"], ["310", "333"], ["310", "334"], ["310", "345"], ["311", "312"], ["311", "319"], ["312", "313"], ["312", "318"], ["313", "314"], ["313", "315"], ["315", "316"], ["315", "317"], ["319", "320"], ["322", "323"], ["322", "324"], ["324", "325"], ["324", "330"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["330", "331"], ["330", "332"], ["334", "335"], ["334", "336"], ["336", "337"], ["336", "342"], ["337", "338"], ["337", "339"], ["339", "340"], ["339", "341"], ["342", "343"], ["342", "344"], ["345", "346"], ["345", "353"], ["346", "347"], ["346", "350"], ["347", "348"], ["347", "349"], ["350", "351"], ["350", "352"], ["353", "354"], ["353", "361"], ["353", "370"], ["354", "355"], ["354", "358"], ["355", "356"], ["355", "357"], ["358", "359"], ["358", "360"], ["361", "362"], ["361", "367"], ["362", "363"], ["362", "366"], ["363", "364"], ["363", "365"], ["367", "368"], ["367", "369"], ["370", "371"], ["370", "376"], ["371", "372"], ["371", "375"], ["372", "373"], ["372", "374"], ["376", "377"], ["376", "378"], ["380", "381"], ["380", "382"], ["383", "384"], ["383", "385"], ["383", "388"], ["383", "393"], ["383", "395"], ["385", "386"], ["385", "387"], ["388", "389"], ["388", "390"], ["390", "391"], ["390", "392"], ["393", "394"], ["395", "396"], ["395", "406"], ["395", "407"], ["395", "416"], ["395", "417"], ["395", "420"], ["395", "451"], ["396", "397"], ["396", "404"], ["397", "398"], ["397", "401"], ["398", "399"], ["398", "400"], ["401", "402"], ["401", "403"], ["404", "405"], ["407", "408"], ["407", "409"], ["409", "410"], ["409", "415"], ["410", "411"], ["410", "414"], ["411", "412"], ["411", "413"], ["417", "418"], ["417", "419"], ["420", "421"], ["420", "422"], ["420", "425"], ["420", "428"], ["420", "430"], ["422", "423"], ["422", "424"], ["425", "426"], ["425", "427"], ["428", "429"], ["430", "431"], ["431", "432"], ["431", "439"], ["432", "433"], ["432", "438"], ["433", "434"], ["433", "435"], ["435", "436"], ["435", "437"], ["439", "440"], ["440", "441"], ["440", "442"], ["442", "443"], ["442", "450"], ["443", "444"], ["443", "447"], ["444", "445"], ["444", "446"], ["447", "448"], ["447", "449"], ["451", "452"], ["451", "465"], ["452", "453"], ["452", "458"], ["453", "454"], ["453", "457"], ["454", "455"], ["454", "456"], ["458", "459"], ["458", "460"], ["460", "461"], ["460", "464"], ["461", "462"], ["461", "463"], ["465", "466"], ["465", "479"], ["466", "467"], ["466", "474"], ["467", "468"], ["467", "469"], ["469", "470"], ["469", "473"], ["470", "471"], ["470", "472"], ["474", "475"], ["474", "478"], ["475", "476"], ["475", "477"], ["479", "480"], ["479", "481"], ["482", "483"], ["482", "484"], ["485", "7"], ["486", "487"], ["486", "488"], ["489", "490"], ["489", "491"], ["489", "494"], ["489", "497"], ["489", "499"], ["491", "492"], ["491", "493"], ["494", "495"], ["494", "496"], ["497", "498"], ["499", "500"], ["500", "501"], ["500", "508"], ["501", "502"], ["501", "507"], ["502", "503"], ["502", "504"], ["504", "505"], ["504", "506"], ["508", "509"], ["509", "510"], ["509", "519"], ["510", "511"], ["510", "518"], ["511", "512"], ["511", "515"], ["512", "513"], ["512", "514"], ["515", "516"], ["515", "517"], ["520", "521"], ["520", "522"], ["522", "523"], ["522", "524"], ["524", "525"], ["524", "528"], ["525", "526"], ["525", "527"], ["530", "531"], ["530", "532"], ["532", "533"], ["532", "538"], ["533", "534"], ["533", "537"], ["534", "535"], ["534", "536"], ["539", "540"], ["539", "543"], ["540", "541"], ["540", "542"], ["543", "544"], ["543", "545"], ["543", "552"], ["543", "553"], ["543", "560"], ["543", "577"], ["543", "594"], ["545", "546"], ["545", "547"], ["547", "548"], ["547", "551"], ["548", "549"], ["548", "550"], ["553", "554"], ["553", "555"], ["555", "556"], ["555", "559"], ["556", "557"], ["556", "558"], ["560", "561"], ["560", "564"], ["561", "562"], ["561", "563"], ["564", "565"], ["564", "572"], ["565", "566"], ["565", "567"], ["567", "568"], ["567", "569"], ["569", "570"], ["569", "571"], ["572", "573"], ["572", "576"], ["573", "574"], ["573", "575"], ["577", "578"], ["577", "581"], ["578", "579"], ["578", "580"], ["581", "582"], ["581", "589"], ["582", "583"], ["582", "584"], ["584", "585"], ["584", "586"], ["586", "587"], ["586", "588"], ["589", "590"], ["589", "593"], ["590", "591"], ["590", "592"], ["594", "595"], ["594", "598"], ["595", "596"], ["595", "597"], ["599", "600"], ["599", "601"], ["601", "602"], ["601", "603"], ["604", "605"], ["26", "33"], ["29", "42"], ["40", "46"], ["43", "50"], ["48", "58"], ["54", "64"], ["61", "69"], ["85", "94"], ["91", "102"], ["168", "179"], ["223", "234"], ["230", "242"], ["237", "244"], ["243", "250"], ["380", "385"], ["482", "485"], ["485", "486"], ["486", "491"], ["520", "534"], ["530", "540"], ["599", "604"], ["604", "608"], ["28", "26"], ["42", "40"], ["44", "43"], ["50", "48"], ["56", "54"], ["63", "61"], ["69", "72"], ["72", "79"], ["72", "86"], ["75", "72"], ["86", "85"], ["93", "91"], ["102", "105"], ["105", "113"], ["105", "171"], ["108", "105"], ["170", "168"], ["179", "182"], ["182", "190"], ["182", "226"], ["185", "182"], ["225", "223"], ["232", "230"], ["240", "237"], ["244", "243"], ["250", "255"], ["253", "263"], ["253", "380"], ["258", "255"], ["385", "390"], ["388", "398"], ["388", "484"], ["393", "390"], ["484", "482"], ["491", "494"], ["494", "504"], ["494", "525"], ["497", "494"], ["522", "520"], ["532", "530"], ["540", "548"], ["540", "601"], ["601", "599"], ["31", "38"], ["34", "29"], ["46", "44"], ["58", "56"], ["64", "63"], ["78", "75"], ["94", "97"], ["97", "93"], ["171", "174"], ["174", "170"], ["226", "225"], ["234", "232"], ["242", "240"], ["255", "253"], ["272", "279"], ["390", "388"], ["407", "417"], ["417", "422"], ["524", "522"], ["533", "532"], ["545", "556"], ["553", "561"], ["594", "540"], ["33", "31"], ["36", "34"], ["79", "82"], ["82", "78"], ["113", "116"], ["116", "129"], ["116", "108"], ["119", "116"], ["190", "193"], ["193", "201"], ["193", "185"], ["196", "193"], ["262", "258"], ["262", "274"], ["274", "272"], ["279", "282"], ["282", "292"], ["282", "258"], ["285", "282"], ["397", "393"], ["397", "411"], ["409", "407"], ["422", "425"], ["425", "435"], ["425", "454"], ["428", "425"], ["452", "470"], ["452", "393"], ["501", "512"], ["501", "497"], ["525", "524"], ["534", "533"], ["547", "545"], ["555", "553"], ["561", "569"], ["561", "578"], ["578", "586"], ["578", "595"], ["595", "594"], ["38", "36"], ["123", "145"], ["139", "156"], ["154", "119"], ["199", "196"], ["263", "268"], ["266", "262"], ["398", "403"], ["401", "397"], ["410", "409"], ["453", "461"], ["458", "452"], ["466", "479"], ["479", "393"], ["502", "501"], ["509", "497"], ["548", "547"], ["556", "555"], ["565", "573"], ["572", "578"], ["582", "590"], ["589", "595"], ["125", "123"], ["141", "139"], ["155", "161"], ["160", "154"], ["200", "208"], ["205", "199"], ["268", "266"], ["289", "258"], ["289", "302"], ["300", "305"], ["305", "315"], ["305", "285"], ["308", "305"], ["403", "401"], ["411", "410"], ["432", "444"], ["432", "428"], ["454", "453"], ["460", "458"], ["467", "475"], ["474", "466"], ["504", "502"], ["510", "509"], ["567", "565"], ["573", "572"], ["584", "582"], ["590", "589"], ["127", "125"], ["143", "141"], ["156", "155"], ["161", "164"], ["164", "160"], ["201", "200"], ["206", "218"], ["217", "205"], ["290", "289"], ["302", "300"], ["322", "339"], ["334", "347"], ["433", "432"], ["440", "428"], ["461", "460"], ["469", "467"], ["475", "474"], ["511", "510"], ["569", "567"], ["586", "584"], ["128", "134"], ["133", "127"], ["144", "150"], ["149", "143"], ["207", "213"], ["212", "206"], ["218", "217"], ["292", "290"], ["312", "308"], ["312", "327"], ["324", "322"], ["336", "334"], ["346", "355"], ["346", "308"], ["435", "433"], ["442", "440"], ["470", "469"], ["512", "515"], ["515", "511"], ["129", "128"], ["134", "133"], ["145", "144"], ["150", "149"], ["208", "207"], ["213", "212"], ["313", "312"], ["325", "330"], ["330", "324"], ["337", "342"], ["342", "336"], ["347", "350"], ["350", "346"], ["354", "363"], ["361", "372"], ["370", "308"], ["443", "442"], ["315", "313"], ["327", "325"], ["339", "337"], ["355", "358"], ["358", "354"], ["362", "367"], ["367", "361"], ["371", "376"], ["376", "370"], ["444", "447"], ["447", "443"], ["363", "362"], ["372", "371"], ["23", "28"], ["24", "608"], ["26", "608"], ["31", "608"], ["34", "608"], ["34", "608"], ["34", "608"], ["29", "608"], ["40", "608"], ["43", "608"], ["43", "608"], ["50", "608"], ["48", "608"], ["48", "608"], ["56", "608"], ["58", "608"], ["56", "608"], ["54", "608"], ["54", "608"], ["61", "608"], ["61", "608"], ["61", "608"], ["69", "608"], ["85", "608"], ["85", "608"], ["85", "608"], ["91", "608"], ["91", "608"], ["168", "608"], ["170", "608"], ["168", "608"], ["168", "608"], ["182", "608"], ["223", "608"], ["223", "608"], ["230", "608"], ["230", "608"], ["230", "608"], ["237", "608"], ["237", "608"], ["237", "608"], ["243", "608"], ["243", "608"], ["380", "608"], ["388", "608"], ["482", "608"], ["485", "608"], ["486", "608"], ["491", "608"], ["494", "608"], ["494", "608"], ["520", "608"], ["520", "608"], ["534", "608"], ["533", "608"], ["532", "608"], ["532", "608"], ["530", "608"], ["530", "608"], ["540", "608"], ["540", "608"], ["601", "608"], ["599", "608"], ["599", "608"], ["604", "608"], ["604", "608"], ["545", "608"], ["545", "608"], ["553", "608"], ["553", "608"], ["561", "608"], ["561", "608"], ["567", "608"], ["565", "608"], ["565", "608"], ["572", "608"], ["572", "608"], ["578", "608"], ["578", "608"], ["584", "608"], ["582", "608"], ["582", "608"], ["589", "608"], ["589", "608"], ["594", "608"], ["594", "608"], ["502", "608"], ["501", "608"], ["501", "608"], ["511", "608"], ["511", "608"], ["510", "608"], ["509", "608"], ["509", "608"], ["497", "608"], ["397", "608"], ["397", "608"], ["397", "608"], ["407", "608"], ["407", "608"], ["407", "608"], ["417", "608"], ["422", "608"], ["425", "608"], ["425", "608"], ["453", "608"], ["453", "608"], ["452", "608"], ["452", "608"], ["474", "608"], ["474", "608"], ["466", "608"], ["466", "608"], ["479", "608"], ["479", "608"], ["433", "608"], ["433", "608"], ["432", "608"], ["432", "608"], ["442", "608"], ["440", "608"], ["440", "608"], ["428", "608"], ["393", "608"], ["262", "608"], ["262", "608"], ["262", "608"], ["272", "608"], ["272", "608"], ["272", "608"], ["279", "608"], ["282", "608"], ["282", "608"], ["292", "608"], ["290", "608"], ["289", "608"], ["289", "608"], ["300", "608"], ["300", "608"], ["305", "608"], ["305", "608"], ["285", "608"], ["313", "608"], ["312", "608"], ["312", "608"], ["322", "608"], ["325", "608"], ["324", "608"], ["324", "608"], ["322", "608"], ["322", "608"], ["334", "608"], ["334", "608"], ["346", "608"], ["350", "608"], ["350", "608"], ["346", "608"], ["346", "608"], ["354", "608"], ["358", "608"], ["358", "608"], ["354", "608"], ["354", "608"], ["361", "608"], ["361", "608"], ["361", "608"], ["370", "608"], ["370", "608"], ["370", "608"], ["308", "608"], ["258", "608"], ["190", "608"], ["193", "608"], ["193", "608"], ["185", "608"], ["199", "608"], ["206", "608"], ["206", "608"], ["205", "608"], ["205", "608"], ["199", "608"], ["199", "608"], ["196", "608"], ["113", "608"], ["116", "608"], ["116", "608"], ["108", "608"], ["127", "608"], ["127", "608"], ["125", "608"], ["123", "608"], ["123", "608"], ["141", "608"], ["143", "608"], ["143", "608"], ["141", "608"], ["139", "608"], ["139", "608"], ["154", "608"], ["161", "608"], ["160", "608"], ["164", "608"], ["160", "608"], ["154", "608"], ["154", "608"], ["119", "608"], ["78", "608"], ["82", "608"], ["82", "608"], ["78", "608"], ["78", "608"], ["75", "608"], ["237", "608"], ["23", "24"], ["23", "26"], ["23", "40"], ["50", "48"], ["50", "48"], ["56", "54"], ["56", "54"], ["63", "61"], ["48", "85"], ["23", "85"], ["93", "91"], ["170", "168"], ["225", "223"], ["232", "230"], ["232", "230"], ["23", "243"], ["23", "380"], ["23", "482"], ["532", "530"], ["532", "530"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["23", "69"], ["23", "102"], ["23", "179"], ["23", "237"], ["223", "237"], ["56", "237"], ["23", "250"], ["23", "385"], ["482", "485"], ["23", "485"], ["485", "486"], ["23", "486"], ["23", "491"], ["43", "520"], ["23", "520"], ["237", "520"], ["452", "520"], ["466", "520"], ["520", "599"], ["23", "599"], ["601", "599"], ["601", "599"], ["599", "604"], ["23", "604"], ["23", "31"], ["23", "39"], ["23", "50"], ["29", "50"], ["23", "56"], ["58", "56"], ["54", "63"], ["23", "63"], ["69", "72"], ["75", "72"], ["23", "72"], ["54", "72"], ["72", "75"], ["23", "75"], ["82", "78"], ["82", "78"], ["72", "93"], ["23", "93"], ["102", "105"], ["108", "105"], ["23", "105"], ["116", "105"], ["72", "105"], ["105", "108"], ["23", "108"], ["105", "170"], ["23", "170"], ["179", "182"], ["185", "182"], ["23", "182"], ["193", "182"], ["105", "182"], ["182", "185"], ["23", "185"], ["226", "225"], ["226", "225"], ["23", "232"], ["234", "232"], ["234", "232"], ["250", "253"], ["258", "253"], ["23", "253"], ["255", "253"], ["255", "253"], ["253", "258"], ["290", "258"], ["313", "258"], ["325", "258"], ["23", "258"], ["237", "272"], ["262", "272"], ["385", "388"], ["393", "388"], ["23", "388"], ["390", "388"], ["390", "388"], ["388", "393"], ["409", "393"], ["23", "393"], ["409", "407"], ["409", "407"], ["23", "417"], ["491", "494"], ["497", "494"], ["23", "494"], ["390", "494"], ["504", "497"], ["23", "497"], ["533", "532"], ["533", "532"], ["380", "532"], ["502", "532"], ["479", "532"], ["23", "532"], ["530", "540"], ["565", "540"], ["582", "540"], ["23", "540"], ["486", "601"], ["595", "601"], ["512", "601"], ["23", "601"], ["31", "34"], ["23", "34"], ["50", "58"], ["23", "58"], ["54", "64"], ["23", "64"], ["72", "94"], ["23", "94"], ["23", "97"], ["72", "97"], ["23", "113"], ["105", "171"], ["23", "171"], ["23", "174"], ["105", "174"], ["23", "190"], ["23", "226"], ["182", "226"], ["23", "234"], ["226", "234"], ["23", "255"], ["234", "255"], ["282", "255"], ["23", "279"], ["23", "390"], ["255", "390"], ["461", "390"], ["470", "390"], ["23", "422"], ["525", "524"], ["525", "524"], ["23", "524"], ["534", "533"], ["534", "533"], ["23", "533"], ["595", "594"], ["595", "594"], ["23", "594"], ["50", "82"], ["23", "82"], ["58", "82"], ["113", "116"], ["119", "116"], ["23", "116"], ["105", "116"], ["116", "119"], ["23", "119"], ["125", "123"], ["125", "123"], ["141", "139"], ["141", "139"], ["161", "154"], ["164", "154"], ["190", "193"], ["196", "193"], ["23", "193"], ["182", "193"], ["193", "196"], ["23", "196"], ["154", "199"], ["237", "262"], ["56", "262"], ["237", "262"], ["279", "282"], ["285", "282"], ["23", "282"], ["255", "282"], ["305", "282"], ["23", "285"], ["292", "285"], ["327", "285"], ["237", "397"], ["262", "397"], ["56", "397"], ["237", "397"], ["262", "397"], ["410", "409"], ["410", "409"], ["388", "409"], ["23", "409"], ["422", "425"], ["428", "425"], ["23", "425"], ["411", "425"], ["435", "428"], ["23", "428"], ["237", "452"], ["397", "452"], ["417", "452"], ["440", "452"], ["23", "452"], ["466", "452"], ["237", "466"], ["397", "466"], ["23", "466"], ["417", "466"], ["440", "466"], ["407", "479"], ["433", "479"], ["23", "479"], ["502", "501"], ["502", "501"], ["23", "501"], ["23", "525"], ["494", "525"], ["23", "534"], ["525", "534"], ["545", "561"], ["23", "561"], ["567", "565"], ["567", "565"], ["553", "578"], ["23", "578"], ["584", "582"], ["584", "582"], ["486", "595"], ["573", "595"], ["590", "595"], ["512", "595"], ["23", "595"], ["292", "300"], ["23", "300"], ["411", "410"], ["411", "410"], ["23", "410"], ["237", "453"], ["397", "453"], ["417", "453"], ["440", "453"], ["23", "453"], ["380", "502"], ["479", "502"], ["23", "502"], ["504", "502"], ["504", "502"], ["510", "509"], ["510", "509"], ["23", "509"], ["540", "565"], ["23", "565"], ["573", "572"], ["573", "572"], ["569", "572"], ["23", "572"], ["540", "582"], ["565", "582"], ["23", "582"], ["590", "589"], ["590", "589"], ["586", "589"], ["23", "589"], ["141", "125"], ["23", "125"], ["127", "125"], ["127", "125"], ["125", "141"], ["23", "141"], ["143", "141"], ["143", "141"], ["161", "160"], ["164", "160"], ["154", "205"], ["290", "289"], ["290", "289"], ["23", "289"], ["300", "305"], ["308", "305"], ["23", "305"], ["282", "305"], ["315", "308"], ["23", "308"], ["330", "308"], ["324", "322"], ["324", "322"], ["23", "411"], ["390", "411"], ["433", "432"], ["433", "432"], ["23", "432"], ["442", "440"], ["442", "440"], ["461", "460"], ["461", "460"], ["23", "460"], ["237", "474"], ["397", "474"], ["23", "474"], ["417", "474"], ["440", "474"], ["23", "504"], ["494", "504"], ["511", "510"], ["511", "510"], ["23", "510"], ["23", "567"], ["569", "567"], ["569", "567"], ["486", "573"], ["595", "573"], ["512", "573"], ["23", "573"], ["23", "584"], ["586", "584"], ["586", "584"], ["486", "590"], ["573", "590"], ["595", "590"], ["512", "590"], ["23", "590"], ["123", "161"], ["23", "161"], ["139", "164"], ["23", "164"], ["154", "206"], ["253", "290"], ["313", "290"], ["325", "290"], ["23", "290"], ["292", "290"], ["292", "290"], ["292", "302"], ["23", "302"], ["407", "433"], ["23", "433"], ["435", "433"], ["435", "433"], ["417", "440"], ["23", "440"], ["23", "461"], ["425", "461"], ["470", "469"], ["470", "469"], ["23", "469"], ["512", "511"], ["512", "511"], ["504", "511"], ["23", "511"], ["561", "569"], ["23", "569"], ["578", "586"], ["23", "586"], ["23", "292"], ["282", "292"], ["313", "312"], ["313", "312"], ["23", "312"], ["325", "324"], ["325", "324"], ["330", "324"], ["330", "324"], ["237", "346"], ["354", "346"], ["272", "346"], ["23", "346"], ["334", "346"], ["23", "354"], ["334", "354"], ["23", "361"], ["330", "361"], ["23", "370"], ["327", "370"], ["23", "435"], ["425", "435"], ["23", "442"], ["23", "470"], ["461", "470"], ["486", "512"], ["23", "512"], ["504", "515"], ["23", "515"], ["290", "313"], ["325", "313"], ["23", "313"], ["315", "313"], ["315", "313"], ["313", "325"], ["23", "325"], ["327", "325"], ["327", "325"], ["23", "330"], ["315", "330"], ["330", "342"], ["23", "342"], ["272", "350"], ["23", "350"], ["334", "350"], ["23", "315"], ["305", "315"], ["23", "327"], ["292", "327"], ["327", "339"], ["23", "339"], ["23", "358"], ["334", "358"], ["23", "367"], ["330", "367"], ["23", "376"], ["327", "376"], ["435", "447"], ["23", "447"], ["72", "72"], ["72", "75"], ["72", "79"], ["72", "82"], ["72", "78"], ["105", "108"], ["105", "116"], ["105", "113"], ["105", "105"], ["182", "190"], ["182", "182"], ["182", "185"], ["182", "193"], ["253", "262"], ["253", "258"], ["253", "268"], ["253", "253"], ["253", "255"], ["253", "263"], ["253", "266"], ["388", "401"], ["388", "403"], ["388", "390"], ["388", "388"], ["388", "397"], ["388", "393"], ["388", "398"], ["494", "494"], ["494", "504"], ["494", "497"], ["494", "502"], ["494", "501"], ["540", "578"], ["540", "545"], ["540", "553"], ["540", "548"], ["540", "561"], ["540", "555"], ["540", "540"], ["540", "547"], ["540", "556"], ["540", "594"], ["540", "595"], ["116", "154"], ["116", "128"], ["116", "161"], ["116", "150"], ["116", "129"], ["116", "134"], ["116", "127"], ["116", "160"], ["116", "141"], ["116", "116"], ["116", "123"], ["116", "133"], ["116", "145"], ["116", "149"], ["116", "119"], ["116", "144"], ["116", "164"], ["116", "155"], ["116", "139"], ["116", "143"], ["116", "156"], ["116", "125"], ["193", "196"], ["193", "213"], ["193", "206"], ["193", "208"], ["193", "201"], ["193", "200"], ["193", "217"], ["193", "199"], ["193", "207"], ["193", "212"], ["193", "205"], ["193", "193"], ["193", "218"], ["262", "272"], ["262", "274"], ["262", "282"], ["262", "279"], ["282", "292"], ["282", "290"], ["282", "289"], ["397", "460"], ["397", "452"], ["397", "425"], ["397", "410"], ["397", "411"], ["397", "417"], ["397", "409"], ["397", "453"], ["397", "461"], ["397", "458"], ["397", "422"], ["397", "454"], ["397", "407"], ["425", "428"], ["425", "435"], ["425", "425"], ["425", "433"], ["425", "432"], ["452", "469"], ["452", "479"], ["452", "466"], ["452", "470"], ["452", "467"], ["452", "474"], ["452", "475"], ["501", "511"], ["501", "512"], ["501", "510"], ["501", "509"], ["501", "515"], ["561", "572"], ["561", "567"], ["561", "565"], ["561", "573"], ["561", "569"], ["578", "584"], ["578", "582"], ["578", "589"], ["578", "586"], ["578", "590"], ["289", "300"], ["289", "302"], ["289", "305"], ["289", "282"], ["289", "285"], ["305", "308"], ["305", "315"], ["305", "305"], ["305", "313"], ["305", "312"], ["432", "442"], ["432", "447"], ["432", "443"], ["432", "440"], ["432", "444"], ["312", "334"], ["312", "322"], ["312", "324"], ["312", "336"], ["312", "346"], ["312", "347"], ["312", "342"], ["312", "337"], ["312", "339"], ["312", "325"], ["312", "327"], ["312", "330"], ["312", "350"], ["346", "376"], ["346", "358"], ["346", "370"], ["346", "362"], ["346", "355"], ["346", "372"], ["346", "361"], ["346", "367"], ["346", "354"], ["346", "371"], ["346", "363"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY s = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "37": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "45": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "47": "<(LOCAL,int[] pt: int[])<SUB>7</SUB>>", "49": "<(IDENTIFIER,pt,int[] pt = readPoint(s))<SUB>7</SUB>>", "51": "<(IDENTIFIER,this,readPoint(s))<SUB>7</SUB>>", "53": "<(LOCAL,int n: int)<SUB>8</SUB>>", "55": "<(IDENTIFIER,n,int n = valueOf(s.readLine()))<SUB>8</SUB>>", "57": "<(IDENTIFIER,Integer,valueOf(s.readLine()))<SUB>8</SUB>>", "59": "<(IDENTIFIER,s,readLine())<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,int[][] xp = new int[n + 1][])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[n + 1][])>", "65": "<(IDENTIFIER,n,n + 1)<SUB>9</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "71": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "73": "<(IDENTIFIER,i,i &lt;= n)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,xp[i])<SUB>11</SUB>>", "81": "<(IDENTIFIER,i,xp[i] = readPoint(s))<SUB>11</SUB>>", "83": "<(IDENTIFIER,this,readPoint(s))<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.assignment,xp[0] = pt)<SUB>13</SUB>>", "87": "<(IDENTIFIER,xp,xp[0] = pt)<SUB>13</SUB>>", "89": "<(IDENTIFIER,pt,xp[0] = pt)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,int[][] dist = new int[n + 1][n + 1])<SUB>15</SUB>>", "93": "<(&lt;operator&gt;.alloc,new int[n + 1][n + 1])>", "95": "<(IDENTIFIER,n,n + 1)<SUB>15</SUB>>", "97": "<(&lt;operator&gt;.addition,n + 1)<SUB>15</SUB>>", "99": "<(LITERAL,1,n + 1)<SUB>15</SUB>>", "101": "<(LOCAL,int i: int)<SUB>16</SUB>>", "103": "<(IDENTIFIER,i,int i = 0)<SUB>16</SUB>>", "105": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>16</SUB>>", "107": "<(IDENTIFIER,n,i &lt;= n)<SUB>16</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>16</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= n); j++),for (int j = 0; Some(j &lt;= n); j++))<SUB>17</SUB>>", "113": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "115": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "117": "<(IDENTIFIER,j,j &lt;= n)<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "123": "<(&lt;operator&gt;.assignment,int dx = Math.abs(xp[i][0] - xp[j][0]))<SUB>18</SUB>>", "125": "<(abs,Math.abs(xp[i][0] - xp[j][0]))<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.subtraction,xp[i][0] - xp[j][0])<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,xp[i])<SUB>18</SUB>>", "131": "<(IDENTIFIER,i,xp[i][0] - xp[j][0])<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,xp[j][0])<SUB>18</SUB>>", "135": "<(IDENTIFIER,xp,xp[i][0] - xp[j][0])<SUB>18</SUB>>", "137": "<(LITERAL,0,xp[i][0] - xp[j][0])<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.assignment,int dy = Math.abs(xp[i][1] - xp[j][1]))<SUB>19</SUB>>", "141": "<(abs,Math.abs(xp[i][1] - xp[j][1]))<SUB>19</SUB>>", "143": "<(&lt;operator&gt;.subtraction,xp[i][1] - xp[j][1])<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,xp[i])<SUB>19</SUB>>", "147": "<(IDENTIFIER,i,xp[i][1] - xp[j][1])<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.indexAccess,xp[j][1])<SUB>19</SUB>>", "151": "<(IDENTIFIER,xp,xp[i][1] - xp[j][1])<SUB>19</SUB>>", "153": "<(LITERAL,1,xp[i][1] - xp[j][1])<SUB>19</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,dist[i][j])<SUB>20</SUB>>", "157": "<(IDENTIFIER,dist,dist[i][j] = dx * dx + dy * dy)<SUB>20</SUB>>", "159": "<(IDENTIFIER,j,dist[i][j] = dx * dx + dy * dy)<SUB>20</SUB>>", "161": "<(&lt;operator&gt;.multiplication,dx * dx)<SUB>20</SUB>>", "163": "<(IDENTIFIER,dx,dx * dx)<SUB>20</SUB>>", "165": "<(IDENTIFIER,dy,dy * dy)<SUB>20</SUB>>", "167": "<(LOCAL,int[][] dist2: int[][])<SUB>24</SUB>>", "169": "<(IDENTIFIER,dist2,int[][] dist2 = new int[n + 1][n + 1])<SUB>24</SUB>>", "171": "<(&lt;operator&gt;.addition,n + 1)<SUB>24</SUB>>", "173": "<(LITERAL,1,n + 1)<SUB>24</SUB>>", "175": "<(IDENTIFIER,n,n + 1)<SUB>24</SUB>>", "177": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n); i++),for (int i = 0; Some(i &lt;= n); i++))<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>25</SUB>>", "181": "<(LITERAL,0,int i = 0)<SUB>25</SUB>>", "183": "<(IDENTIFIER,i,i &lt;= n)<SUB>25</SUB>>", "185": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "189": "<(LOCAL,int j: int)<SUB>26</SUB>>", "191": "<(IDENTIFIER,j,int j = 0)<SUB>26</SUB>>", "193": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>26</SUB>>", "195": "<(IDENTIFIER,n,j &lt;= n)<SUB>26</SUB>>", "197": "<(IDENTIFIER,j,j++)<SUB>26</SUB>>", "199": "<(&lt;operator&gt;.assignment,dist2[i][j] = dist[0][i] + dist[i][j] + dist[j][0])<SUB>27</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,dist2[i])<SUB>27</SUB>>", "203": "<(IDENTIFIER,i,dist2[i][j] = dist[0][i] + dist[i][j] + dist[j][0])<SUB>27</SUB>>", "205": "<(&lt;operator&gt;.addition,dist[0][i] + dist[i][j] + dist[j][0])<SUB>27</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,dist[0][i])<SUB>27</SUB>>", "209": "<(IDENTIFIER,dist,dist[0][i] + dist[i][j])<SUB>27</SUB>>", "211": "<(IDENTIFIER,i,dist[0][i] + dist[i][j])<SUB>27</SUB>>", "213": "<(&lt;operator&gt;.indexAccess,dist[i])<SUB>27</SUB>>", "215": "<(IDENTIFIER,i,dist[0][i] + dist[i][j])<SUB>27</SUB>>", "217": "<(&lt;operator&gt;.indexAccess,dist[j][0])<SUB>27</SUB>>", "219": "<(IDENTIFIER,dist,dist[0][i] + dist[i][j] + dist[j][0])<SUB>27</SUB>>", "221": "<(LITERAL,0,dist[0][i] + dist[i][j] + dist[j][0])<SUB>27</SUB>>", "223": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; n])<SUB>31</SUB>>", "225": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; n])>", "227": "<(LITERAL,1,1 &lt;&lt; n)<SUB>31</SUB>>", "229": "<(LOCAL,int[][] dp_prev: int[][])<SUB>32</SUB>>", "231": "<(IDENTIFIER,dp_prev,int[][] dp_prev = new int[2][1 &lt;&lt; n])<SUB>32</SUB>>", "233": "<(LITERAL,2,new int[2][1 &lt;&lt; n])<SUB>32</SUB>>", "235": "<(LITERAL,1,1 &lt;&lt; n)<SUB>32</SUB>>", "237": "<(fill,fill(dp, Integer.MAX_VALUE))<SUB>33</SUB>>", "239": "<(IDENTIFIER,dp,fill(dp, Integer.MAX_VALUE))<SUB>33</SUB>>", "241": "<(IDENTIFIER,Integer,fill(dp, Integer.MAX_VALUE))<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>34</SUB>>", "245": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>34</SUB>>", "247": "<(LITERAL,0,dp[0] = 0)<SUB>34</SUB>>", "249": "<(LOCAL,int i: int)<SUB>36</SUB>>", "251": "<(IDENTIFIER,i,int i = 0)<SUB>36</SUB>>", "253": "<(&lt;operator&gt;.lessThan,i &lt; (1 &lt;&lt; n))<SUB>36</SUB>>", "255": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>36</SUB>>", "257": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>36</SUB>>", "259": "<(IDENTIFIER,i,i++)<SUB>36</SUB>>", "261": "<(CONTROL_STRUCTURE,if (dp[i] == Integer.MAX_VALUE),if (dp[i] == Integer.MAX_VALUE))<SUB>37</SUB>>", "263": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>37</SUB>>", "265": "<(IDENTIFIER,i,dp[i] == Integer.MAX_VALUE)<SUB>37</SUB>>", "267": "<(IDENTIFIER,Integer,dp[i] == Integer.MAX_VALUE)<SUB>37</SUB>>", "269": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "271": "<(LOCAL,int base: int)<SUB>40</SUB>>", "273": "<(IDENTIFIER,base,int base = dp[i])<SUB>40</SUB>>", "275": "<(IDENTIFIER,dp,int base = dp[i])<SUB>40</SUB>>", "277": "<(CONTROL_STRUCTURE,for (int y = 0; Some(y &lt; n); y++),for (int y = 0; Some(y &lt; n); y++))<SUB>42</SUB>>", "279": "<(&lt;operator&gt;.assignment,int y = 0)<SUB>42</SUB>>", "281": "<(LITERAL,0,int y = 0)<SUB>42</SUB>>", "283": "<(IDENTIFIER,y,y &lt; n)<SUB>42</SUB>>", "285": "<(&lt;operator&gt;.postIncrement,y++)<SUB>42</SUB>>", "287": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "289": "<(&lt;operator&gt;.greaterEqualsThan,(i &amp; (1 &lt;&lt; y)) &gt;= 1)<SUB>43</SUB>>", "291": "<(IDENTIFIER,i,i &amp; (1 &lt;&lt; y))<SUB>43</SUB>>", "293": "<(LITERAL,1,1 &lt;&lt; y)<SUB>43</SUB>>", "295": "<(LITERAL,1,(i &amp; (1 &lt;&lt; y)) &gt;= 1)<SUB>43</SUB>>", "297": "<(CONTROL_STRUCTURE,break;,break;)<SUB>44</SUB>>", "299": "<(LOCAL,int z: int)<SUB>46</SUB>>", "301": "<(IDENTIFIER,z,int z = y + 1)<SUB>46</SUB>>", "303": "<(IDENTIFIER,y,y + 1)<SUB>46</SUB>>", "305": "<(&lt;operator&gt;.lessThan,z &lt; n)<SUB>46</SUB>>", "307": "<(IDENTIFIER,n,z &lt; n)<SUB>46</SUB>>", "309": "<(IDENTIFIER,z,z++)<SUB>46</SUB>>", "311": "<(CONTROL_STRUCTURE,if ((i &amp; (1 &lt;&lt; z)) &gt;= 1),if ((i &amp; (1 &lt;&lt; z)) &gt;= 1))<SUB>47</SUB>>", "313": "<(&lt;operator&gt;.and,i &amp; (1 &lt;&lt; z))<SUB>47</SUB>>", "315": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; z)<SUB>47</SUB>>", "317": "<(IDENTIFIER,z,1 &lt;&lt; z)<SUB>47</SUB>>", "319": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>47</SUB>>", "321": "<(LOCAL,int ti: int)<SUB>50</SUB>>", "323": "<(IDENTIFIER,ti,int ti = i | (1 &lt;&lt; y) | (1 &lt;&lt; z))<SUB>50</SUB>>", "325": "<(&lt;operator&gt;.or,i | (1 &lt;&lt; y))<SUB>50</SUB>>", "327": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; y)<SUB>50</SUB>>", "329": "<(IDENTIFIER,y,1 &lt;&lt; y)<SUB>50</SUB>>", "331": "<(LITERAL,1,1 &lt;&lt; z)<SUB>50</SUB>>", "333": "<(LOCAL,int d: int)<SUB>51</SUB>>", "335": "<(IDENTIFIER,d,int d = dist2[y + 1][z + 1])<SUB>51</SUB>>", "337": "<(&lt;operator&gt;.indexAccess,dist2[y + 1])<SUB>51</SUB>>", "339": "<(&lt;operator&gt;.addition,y + 1)<SUB>51</SUB>>", "341": "<(LITERAL,1,y + 1)<SUB>51</SUB>>", "343": "<(IDENTIFIER,z,z + 1)<SUB>51</SUB>>", "345": "<(CONTROL_STRUCTURE,if (dp[ti] &gt; base + d),if (dp[ti] &gt; base + d))<SUB>52</SUB>>", "347": "<(&lt;operator&gt;.indexAccess,dp[ti])<SUB>52</SUB>>", "349": "<(IDENTIFIER,ti,dp[ti] &gt; base + d)<SUB>52</SUB>>", "351": "<(IDENTIFIER,base,base + d)<SUB>52</SUB>>", "353": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>52</SUB>>", "355": "<(&lt;operator&gt;.indexAccess,dp[ti])<SUB>53</SUB>>", "357": "<(IDENTIFIER,ti,dp[ti] = base + d)<SUB>53</SUB>>", "359": "<(IDENTIFIER,base,base + d)<SUB>53</SUB>>", "361": "<(&lt;operator&gt;.assignment,dp_prev[0][ti] = z + 1)<SUB>54</SUB>>", "363": "<(&lt;operator&gt;.indexAccess,dp_prev[0])<SUB>54</SUB>>", "365": "<(LITERAL,0,dp_prev[0][ti] = z + 1)<SUB>54</SUB>>", "367": "<(&lt;operator&gt;.addition,z + 1)<SUB>54</SUB>>", "369": "<(LITERAL,1,z + 1)<SUB>54</SUB>>", "371": "<(&lt;operator&gt;.indexAccess,dp_prev[1][ti])<SUB>55</SUB>>", "373": "<(IDENTIFIER,dp_prev,dp_prev[1][ti] = y + 1)<SUB>55</SUB>>", "375": "<(IDENTIFIER,ti,dp_prev[1][ti] = y + 1)<SUB>55</SUB>>", "377": "<(IDENTIFIER,y,y + 1)<SUB>55</SUB>>", "379": "<(LOCAL,int bestOnes: int)<SUB>63</SUB>>", "381": "<(IDENTIFIER,bestOnes,int bestOnes = 0)<SUB>63</SUB>>", "383": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; (1 &lt;&lt; n)); i++),for (int i = 0; Some(i &lt; (1 &lt;&lt; n)); i++))<SUB>64</SUB>>", "385": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>64</SUB>>", "387": "<(LITERAL,0,int i = 0)<SUB>64</SUB>>", "389": "<(IDENTIFIER,i,i &lt; (1 &lt;&lt; n))<SUB>64</SUB>>", "391": "<(LITERAL,1,1 &lt;&lt; n)<SUB>64</SUB>>", "393": "<(&lt;operator&gt;.postIncrement,i++)<SUB>64</SUB>>", "395": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "397": "<(&lt;operator&gt;.equals,dp[i] == Integer.MAX_VALUE)<SUB>65</SUB>>", "399": "<(IDENTIFIER,dp,dp[i] == Integer.MAX_VALUE)<SUB>65</SUB>>", "401": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>65</SUB>>", "403": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>65</SUB>>", "405": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>66</SUB>>", "407": "<(&lt;operator&gt;.assignment,int sub = (1 &lt;&lt; n) - 1 - i)<SUB>68</SUB>>", "409": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1 - i)<SUB>68</SUB>>", "411": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>68</SUB>>", "413": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>68</SUB>>", "415": "<(IDENTIFIER,i,(1 &lt;&lt; n) - 1 - i)<SUB>68</SUB>>", "417": "<(&lt;operator&gt;.assignment,int add = 0)<SUB>69</SUB>>", "419": "<(LITERAL,0,int add = 0)<SUB>69</SUB>>", "421": "<(LOCAL,int j: int)<SUB>70</SUB>>", "423": "<(IDENTIFIER,j,int j = 0)<SUB>70</SUB>>", "425": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>70</SUB>>", "427": "<(IDENTIFIER,n,j &lt; n)<SUB>70</SUB>>", "429": "<(IDENTIFIER,j,j++)<SUB>70</SUB>>", "431": "<(CONTROL_STRUCTURE,if ((sub &amp; (1 &lt;&lt; j)) &gt;= 1),if ((sub &amp; (1 &lt;&lt; j)) &gt;= 1))<SUB>71</SUB>>", "433": "<(&lt;operator&gt;.and,sub &amp; (1 &lt;&lt; j))<SUB>71</SUB>>", "435": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>71</SUB>>", "437": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>71</SUB>>", "439": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>71</SUB>>", "441": "<(IDENTIFIER,add,add += dist[0][j + 1] * 2)<SUB>72</SUB>>", "443": "<(&lt;operator&gt;.indexAccess,dist[0][j + 1])<SUB>72</SUB>>", "445": "<(IDENTIFIER,dist,dist[0][j + 1] * 2)<SUB>72</SUB>>", "447": "<(&lt;operator&gt;.addition,j + 1)<SUB>72</SUB>>", "449": "<(LITERAL,1,j + 1)<SUB>72</SUB>>", "451": "<(CONTROL_STRUCTURE,if (dp[i] + add &lt; dp[(1 &lt;&lt; n) - 1]),if (dp[i] + add &lt; dp[(1 &lt;&lt; n) - 1]))<SUB>75</SUB>>", "453": "<(&lt;operator&gt;.addition,dp[i] + add)<SUB>75</SUB>>", "455": "<(IDENTIFIER,dp,dp[i] + add)<SUB>75</SUB>>", "457": "<(IDENTIFIER,add,dp[i] + add)<SUB>75</SUB>>", "459": "<(IDENTIFIER,dp,dp[i] + add &lt; dp[(1 &lt;&lt; n) - 1])<SUB>75</SUB>>", "461": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>75</SUB>>", "463": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>75</SUB>>", "465": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>75</SUB>>", "467": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; n) - 1])<SUB>76</SUB>>", "469": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>76</SUB>>", "471": "<(LITERAL,1,1 &lt;&lt; n)<SUB>76</SUB>>", "473": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>76</SUB>>", "475": "<(&lt;operator&gt;.indexAccess,dp[i])<SUB>76</SUB>>", "477": "<(IDENTIFIER,i,dp[i] + add)<SUB>76</SUB>>", "479": "<(&lt;operator&gt;.assignment,bestOnes = sub)<SUB>77</SUB>>", "481": "<(IDENTIFIER,sub,bestOnes = sub)<SUB>77</SUB>>", "482": "<(&lt;operator&gt;.assignment,StringBuffer b = new StringBuffer())<SUB>81</SUB>>", "484": "<(&lt;operator&gt;.alloc,new StringBuffer())<SUB>81</SUB>>", "7": "<(IDENTIFIER,b,new StringBuffer())<SUB>81</SUB>>", "487": "<(IDENTIFIER,b,b.append(&quot; 0&quot;))<SUB>82</SUB>>", "489": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>83</SUB>>", "491": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>83</SUB>>", "493": "<(LITERAL,0,int i = 0)<SUB>83</SUB>>", "495": "<(IDENTIFIER,i,i &lt; n)<SUB>83</SUB>>", "497": "<(&lt;operator&gt;.postIncrement,i++)<SUB>83</SUB>>", "499": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>83</SUB>>", "501": "<(&lt;operator&gt;.greaterEqualsThan,(bestOnes &amp; (1 &lt;&lt; i)) &gt;= 1)<SUB>84</SUB>>", "503": "<(IDENTIFIER,bestOnes,bestOnes &amp; (1 &lt;&lt; i))<SUB>84</SUB>>", "505": "<(LITERAL,1,1 &lt;&lt; i)<SUB>84</SUB>>", "507": "<(LITERAL,1,(bestOnes &amp; (1 &lt;&lt; i)) &gt;= 1)<SUB>84</SUB>>", "509": "<(append,b.append(&quot; &quot;).append(i + 1).append(&quot; &quot;).append(0))<SUB>85</SUB>>", "511": "<(append,b.append(&quot; &quot;).append(i + 1))<SUB>85</SUB>>", "513": "<(IDENTIFIER,b,b.append(&quot; &quot;))<SUB>85</SUB>>", "515": "<(&lt;operator&gt;.addition,i + 1)<SUB>85</SUB>>", "517": "<(LITERAL,1,i + 1)<SUB>85</SUB>>", "519": "<(LITERAL,0,b.append(&quot; &quot;).append(i + 1).append(&quot; &quot;).append(0))<SUB>85</SUB>>", "521": "<(IDENTIFIER,out,println(dp[(1 &lt;&lt; n) - 1]))<SUB>89</SUB>>", "523": "<(IDENTIFIER,dp,println(dp[(1 &lt;&lt; n) - 1]))<SUB>89</SUB>>", "525": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; n)<SUB>89</SUB>>", "527": "<(IDENTIFIER,n,1 &lt;&lt; n)<SUB>89</SUB>>", "529": "<(LOCAL,int nptn: int)<SUB>90</SUB>>", "531": "<(IDENTIFIER,nptn,int nptn = (1 &lt;&lt; n) - 1 - bestOnes)<SUB>90</SUB>>", "533": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; n) - 1)<SUB>90</SUB>>", "535": "<(LITERAL,1,1 &lt;&lt; n)<SUB>90</SUB>>", "537": "<(LITERAL,1,(1 &lt;&lt; n) - 1)<SUB>90</SUB>>", "539": "<(CONTROL_STRUCTURE,while (nptn &gt;= 1),while (nptn &gt;= 1))<SUB>91</SUB>>", "541": "<(IDENTIFIER,nptn,nptn &gt;= 1)<SUB>91</SUB>>", "543": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>91</SUB>>", "545": "<(&lt;operator&gt;.assignment,int i1 = dp_prev[0][nptn])<SUB>92</SUB>>", "547": "<(&lt;operator&gt;.indexAccess,dp_prev[0][nptn])<SUB>92</SUB>>", "549": "<(IDENTIFIER,dp_prev,int i1 = dp_prev[0][nptn])<SUB>92</SUB>>", "551": "<(IDENTIFIER,nptn,int i1 = dp_prev[0][nptn])<SUB>92</SUB>>", "553": "<(&lt;operator&gt;.assignment,int i2 = dp_prev[1][nptn])<SUB>93</SUB>>", "555": "<(&lt;operator&gt;.indexAccess,dp_prev[1][nptn])<SUB>93</SUB>>", "557": "<(IDENTIFIER,dp_prev,int i2 = dp_prev[1][nptn])<SUB>93</SUB>>", "559": "<(IDENTIFIER,nptn,int i2 = dp_prev[1][nptn])<SUB>93</SUB>>", "561": "<(&lt;operator&gt;.greaterEqualsThan,i1 &gt;= 1)<SUB>94</SUB>>", "563": "<(LITERAL,1,i1 &gt;= 1)<SUB>94</SUB>>", "565": "<(&lt;operator&gt;.assignmentMinus,nptn -= 1 &lt;&lt; (i1 - 1))<SUB>95</SUB>>", "567": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (i1 - 1))<SUB>95</SUB>>", "569": "<(&lt;operator&gt;.subtraction,i1 - 1)<SUB>95</SUB>>", "571": "<(LITERAL,1,i1 - 1)<SUB>95</SUB>>", "573": "<(append,b.append(&quot; &quot;))<SUB>96</SUB>>", "575": "<(LITERAL,&quot; &quot;,b.append(&quot; &quot;))<SUB>96</SUB>>", "577": "<(CONTROL_STRUCTURE,if (i2 &gt;= 1),if (i2 &gt;= 1))<SUB>98</SUB>>", "579": "<(IDENTIFIER,i2,i2 &gt;= 1)<SUB>98</SUB>>", "581": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>98</SUB>>", "583": "<(IDENTIFIER,nptn,nptn -= 1 &lt;&lt; (i2 - 1))<SUB>99</SUB>>", "585": "<(LITERAL,1,1 &lt;&lt; (i2 - 1))<SUB>99</SUB>>", "587": "<(IDENTIFIER,i2,i2 - 1)<SUB>99</SUB>>", "589": "<(append,b.append(&quot; &quot;).append(i2))<SUB>100</SUB>>", "591": "<(IDENTIFIER,b,b.append(&quot; &quot;))<SUB>100</SUB>>", "593": "<(IDENTIFIER,i2,b.append(&quot; &quot;).append(i2))<SUB>100</SUB>>", "595": "<(append,b.append(&quot; &quot;))<SUB>102</SUB>>", "597": "<(LITERAL,&quot; &quot;,b.append(&quot; &quot;))<SUB>102</SUB>>", "599": "<(println,println(b.substring(1)))<SUB>104</SUB>>", "601": "<(substring,b.substring(1))<SUB>104</SUB>>", "603": "<(LITERAL,1,b.substring(1))<SUB>104</SUB>>", "605": "<(IDENTIFIER,out,flush())<SUB>105</SUB>>", "607": "<(MODIFIER,STATIC)>"}}