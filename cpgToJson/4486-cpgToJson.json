{"edges": [["17", "18"], ["17", "19"], ["17", "320"], ["17", "321"], ["17", "322"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "34"], ["19", "38"], ["19", "39"], ["19", "43"], ["19", "44"], ["19", "49"], ["19", "50"], ["19", "54"], ["19", "110"], ["19", "111"], ["19", "117"], ["19", "135"], ["19", "136"], ["19", "143"], ["19", "214"], ["19", "215"], ["19", "221"], ["19", "227"], ["19", "232"], ["19", "309"], ["19", "318"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["50", "51"], ["50", "52"], ["52", "53"], ["54", "55"], ["54", "56"], ["54", "59"], ["54", "64"], ["54", "66"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "61"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["67", "68"], ["67", "77"], ["68", "69"], ["68", "72"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "94"], ["78", "79"], ["79", "80"], ["79", "87"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["87", "88"], ["87", "93"], ["88", "89"], ["88", "90"], ["90", "91"], ["90", "92"], ["94", "95"], ["95", "96"], ["95", "105"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "104"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["105", "106"], ["105", "109"], ["106", "107"], ["106", "108"], ["111", "112"], ["111", "113"], ["113", "114"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["117", "122"], ["117", "125"], ["117", "127"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["143", "148"], ["143", "151"], ["143", "153"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["153", "154"], ["154", "155"], ["154", "156"], ["154", "159"], ["154", "164"], ["154", "166"], ["156", "157"], ["156", "158"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "163"], ["164", "165"], ["166", "167"], ["166", "168"], ["166", "173"], ["166", "174"], ["166", "177"], ["166", "193"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "187"], ["178", "179"], ["178", "182"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "186"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "191"], ["188", "189"], ["188", "190"], ["191", "192"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "209"], ["200", "201"], ["200", "204"], ["201", "202"], ["201", "203"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "208"], ["209", "210"], ["209", "213"], ["210", "211"], ["210", "212"], ["215", "216"], ["215", "217"], ["217", "218"], ["218", "219"], ["218", "220"], ["221", "222"], ["221", "223"], ["221", "224"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "231"], ["228", "229"], ["228", "230"], ["232", "233"], ["232", "234"], ["232", "237"], ["232", "242"], ["232", "244"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["239", "240"], ["239", "241"], ["242", "243"], ["244", "245"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "253"], ["245", "255"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["255", "256"], ["255", "257"], ["255", "262"], ["257", "258"], ["257", "259"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "268"], ["263", "264"], ["263", "267"], ["264", "265"], ["264", "266"], ["268", "269"], ["268", "270"], ["268", "289"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "280"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "288"], ["285", "286"], ["285", "287"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["293", "294"], ["293", "295"], ["293", "298"], ["295", "296"], ["295", "297"], ["298", "299"], ["298", "304"], ["299", "300"], ["299", "301"], ["301", "302"], ["301", "303"], ["304", "305"], ["304", "306"], ["306", "307"], ["306", "308"], ["309", "310"], ["309", "311"], ["311", "312"], ["311", "313"], ["313", "314"], ["313", "317"], ["314", "315"], ["314", "316"], ["318", "319"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "36"], ["34", "41"], ["39", "46"], ["44", "52"], ["50", "56"], ["111", "119"], ["136", "145"], ["215", "226"], ["221", "228"], ["227", "234"], ["309", "318"], ["318", "322"], ["22", "20"], ["27", "25"], ["30", "28"], ["36", "34"], ["41", "39"], ["46", "44"], ["52", "50"], ["56", "61"], ["59", "69"], ["59", "114"], ["64", "61"], ["113", "111"], ["119", "122"], ["122", "129"], ["122", "140"], ["125", "122"], ["138", "136"], ["145", "148"], ["148", "156"], ["148", "218"], ["151", "148"], ["217", "215"], ["224", "221"], ["228", "227"], ["234", "239"], ["237", "247"], ["237", "314"], ["242", "239"], ["311", "309"], ["32", "30"], ["61", "59"], ["114", "113"], ["128", "125"], ["140", "138"], ["218", "217"], ["226", "224"], ["239", "237"], ["313", "311"], ["68", "83"], ["68", "64"], ["129", "132"], ["132", "128"], ["156", "161"], ["159", "170"], ["159", "151"], ["164", "161"], ["247", "250"], ["250", "259"], ["250", "242"], ["253", "250"], ["314", "313"], ["69", "74"], ["72", "68"], ["78", "101"], ["94", "64"], ["161", "159"], ["168", "174"], ["174", "179"], ["193", "164"], ["257", "264"], ["74", "72"], ["79", "78"], ["95", "94"], ["170", "168"], ["178", "188"], ["178", "195"], ["194", "201"], ["199", "193"], ["259", "257"], ["263", "276"], ["263", "253"], ["80", "90"], ["87", "79"], ["96", "106"], ["105", "95"], ["179", "178"], ["179", "183"], ["182", "178"], ["188", "191"], ["191", "179"], ["195", "194"], ["200", "210"], ["209", "199"], ["264", "263"], ["270", "290"], ["289", "253"], ["82", "80"], ["88", "87"], ["98", "96"], ["106", "105"], ["183", "182"], ["201", "206"], ["204", "200"], ["210", "209"], ["272", "270"], ["290", "295"], ["293", "289"], ["83", "82"], ["90", "88"], ["99", "98"], ["206", "204"], ["273", "281"], ["280", "272"], ["295", "301"], ["298", "293"], ["101", "99"], ["275", "273"], ["281", "285"], ["284", "280"], ["299", "306"], ["304", "298"], ["276", "275"], ["285", "284"], ["301", "299"], ["306", "304"], ["17", "22"], ["18", "322"], ["20", "322"], ["23", "322"], ["25", "322"], ["28", "322"], ["28", "322"], ["34", "322"], ["39", "322"], ["39", "322"], ["44", "322"], ["44", "322"], ["44", "322"], ["50", "322"], ["52", "322"], ["50", "322"], ["50", "322"], ["61", "322"], ["59", "322"], ["59", "322"], ["111", "322"], ["113", "322"], ["111", "322"], ["111", "322"], ["122", "322"], ["136", "322"], ["136", "322"], ["136", "322"], ["145", "322"], ["148", "322"], ["215", "322"], ["215", "322"], ["221", "322"], ["221", "322"], ["221", "322"], ["227", "322"], ["227", "322"], ["234", "322"], ["237", "322"], ["237", "322"], ["237", "322"], ["314", "322"], ["313", "322"], ["309", "322"], ["309", "322"], ["318", "322"], ["318", "322"], ["247", "322"], ["250", "322"], ["250", "322"], ["242", "322"], ["257", "322"], ["257", "322"], ["264", "322"], ["263", "322"], ["263", "322"], ["273", "322"], ["272", "322"], ["272", "322"], ["270", "322"], ["270", "322"], ["289", "322"], ["301", "322"], ["298", "322"], ["304", "322"], ["306", "322"], ["304", "322"], ["298", "322"], ["293", "322"], ["289", "322"], ["289", "322"], ["253", "322"], ["156", "322"], ["159", "322"], ["159", "322"], ["151", "322"], ["168", "322"], ["174", "322"], ["174", "322"], ["179", "322"], ["178", "322"], ["183", "322"], ["182", "322"], ["178", "322"], ["178", "322"], ["193", "322"], ["206", "322"], ["204", "322"], ["199", "322"], ["199", "322"], ["193", "322"], ["193", "322"], ["164", "322"], ["188", "322"], ["191", "322"], ["191", "322"], ["128", "322"], ["128", "322"], ["128", "322"], ["125", "322"], ["68", "322"], ["72", "322"], ["72", "322"], ["68", "322"], ["68", "322"], ["78", "322"], ["78", "322"], ["99", "322"], ["98", "322"], ["106", "322"], ["105", "322"], ["94", "322"], ["94", "322"], ["64", "322"], ["221", "322"], ["293", "322"], ["17", "18"], ["17", "20"], ["17", "25"], ["36", "34"], ["41", "39"], ["46", "44"], ["52", "50"], ["113", "111"], ["138", "136"], ["138", "136"], ["217", "215"], ["17", "227"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "56"], ["17", "119"], ["17", "145"], ["17", "221"], ["215", "221"], ["206", "221"], ["17", "234"], ["28", "309"], ["17", "309"], ["221", "309"], ["309", "318"], ["17", "318"], ["23", "36"], ["17", "36"], ["36", "41"], ["17", "41"], ["39", "46"], ["17", "46"], ["41", "52"], ["17", "52"], ["56", "59"], ["64", "59"], ["17", "59"], ["61", "59"], ["61", "59"], ["106", "64"], ["17", "64"], ["69", "64"], ["46", "113"], ["17", "113"], ["119", "122"], ["125", "122"], ["17", "122"], ["46", "122"], ["132", "125"], ["17", "125"], ["132", "128"], ["132", "128"], ["140", "138"], ["17", "138"], ["140", "138"], ["145", "148"], ["151", "148"], ["17", "148"], ["138", "148"], ["161", "148"], ["148", "151"], ["17", "151"], ["218", "217"], ["218", "217"], ["234", "237"], ["242", "237"], ["17", "237"], ["111", "237"], ["237", "242"], ["264", "242"], ["306", "242"], ["17", "242"], ["34", "61"], ["17", "61"], ["46", "114"], ["17", "114"], ["17", "140"], ["122", "140"], ["17", "156"], ["17", "218"], ["148", "218"], ["17", "247"], ["314", "313"], ["314", "313"], ["17", "313"], ["69", "68"], ["69", "68"], ["72", "68"], ["72", "68"], ["17", "132"], ["122", "132"], ["156", "159"], ["164", "159"], ["17", "159"], ["161", "159"], ["161", "159"], ["204", "164"], ["17", "164"], ["170", "168"], ["170", "168"], ["17", "174"], ["247", "250"], ["253", "250"], ["17", "250"], ["218", "250"], ["285", "250"], ["250", "253"], ["17", "253"], ["111", "257"], ["17", "314"], ["218", "314"], ["250", "314"], ["50", "69"], ["72", "69"], ["106", "69"], ["17", "69"], ["59", "69"], ["69", "72"], ["17", "72"], ["69", "72"], ["17", "161"], ["148", "161"], ["69", "74"], ["17", "74"], ["206", "170"], ["17", "170"], ["159", "170"], ["179", "178"], ["179", "178"], ["182", "178"], ["182", "178"], ["17", "188"], ["264", "263"], ["264", "263"], ["17", "263"], ["272", "270"], ["272", "270"], ["293", "289"], ["293", "289"], ["293", "289"], ["88", "87"], ["88", "87"], ["17", "87"], ["106", "105"], ["106", "105"], ["17", "105"], ["168", "179"], ["188", "179"], ["17", "179"], ["183", "182"], ["183", "182"], ["17", "182"], ["179", "188"], ["183", "188"], ["174", "191"], ["17", "191"], ["257", "264"], ["17", "264"], ["237", "264"], ["306", "264"], ["83", "82"], ["83", "82"], ["17", "82"], ["83", "88"], ["17", "88"], ["83", "88"], ["99", "98"], ["99", "98"], ["17", "98"], ["99", "106"], ["17", "106"], ["83", "106"], ["179", "183"], ["17", "183"], ["206", "204"], ["17", "204"], ["206", "204"], ["273", "272"], ["273", "272"], ["17", "293"], ["221", "293"], ["289", "293"], ["304", "293"], ["304", "293"], ["72", "83"], ["17", "83"], ["69", "83"], ["83", "90"], ["17", "90"], ["88", "99"], ["17", "99"], ["83", "99"], ["170", "206"], ["17", "206"], ["170", "206"], ["17", "273"], ["221", "298"], ["304", "298"], ["304", "298"], ["17", "101"], ["83", "101"], ["285", "284"], ["285", "284"], ["17", "284"], ["270", "304"], ["17", "304"], ["306", "304"], ["306", "304"], ["17", "285"], ["250", "285"], ["264", "301"], ["17", "301"], ["264", "301"], ["221", "306"], ["206", "306"], ["17", "306"], ["301", "306"], ["59", "68"], ["59", "64"], ["59", "69"], ["59", "74"], ["59", "59"], ["59", "61"], ["59", "72"], ["122", "128"], ["122", "132"], ["122", "129"], ["122", "122"], ["122", "125"], ["148", "161"], ["148", "151"], ["148", "148"], ["148", "159"], ["148", "156"], ["237", "247"], ["237", "242"], ["237", "239"], ["237", "237"], ["237", "250"], ["68", "94"], ["68", "96"], ["68", "98"], ["68", "95"], ["68", "87"], ["68", "101"], ["68", "90"], ["68", "79"], ["68", "80"], ["68", "88"], ["68", "99"], ["68", "106"], ["68", "82"], ["68", "83"], ["68", "105"], ["68", "78"], ["159", "161"], ["159", "179"], ["159", "178"], ["159", "209"], ["159", "168"], ["159", "204"], ["159", "170"], ["159", "206"], ["159", "195"], ["159", "174"], ["159", "194"], ["159", "164"], ["159", "201"], ["159", "193"], ["159", "210"], ["159", "200"], ["159", "159"], ["159", "199"], ["250", "257"], ["250", "264"], ["250", "259"], ["250", "253"], ["250", "263"], ["250", "250"], ["178", "188"], ["178", "179"], ["178", "178"], ["178", "191"], ["263", "273"], ["263", "272"], ["263", "290"], ["263", "275"], ["263", "301"], ["263", "298"], ["263", "284"], ["263", "281"], ["263", "285"], ["263", "306"], ["263", "289"], ["263", "293"], ["263", "276"], ["263", "280"], ["263", "295"], ["263", "299"], ["263", "304"], ["263", "270"], ["179", "182"], ["179", "183"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new MyScanner())<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "29": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(LOCAL,int n: int)<SUB>6</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>6</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "39": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>7</SUB>>", "41": "<(nextInt,nextInt())<SUB>7</SUB>>", "43": "<(LOCAL,int[][] cnt: int[][])<SUB>8</SUB>>", "45": "<(IDENTIFIER,cnt,int[][] cnt = new int[m][m])<SUB>8</SUB>>", "47": "<(IDENTIFIER,m,new int[m][m])<SUB>8</SUB>>", "49": "<(LOCAL,String s: java.lang.String)<SUB>9</SUB>>", "51": "<(IDENTIFIER,s,String s = next())<SUB>9</SUB>>", "53": "<(IDENTIFIER,sc,next())<SUB>9</SUB>>", "55": "<(LOCAL,int j: int)<SUB>10</SUB>>", "57": "<(IDENTIFIER,j,int j = 0)<SUB>10</SUB>>", "59": "<(&lt;operator&gt;.lessThan,j &lt; n - 1)<SUB>10</SUB>>", "61": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>10</SUB>>", "63": "<(LITERAL,1,n - 1)<SUB>10</SUB>>", "65": "<(IDENTIFIER,j,j++)<SUB>10</SUB>>", "67": "<(CONTROL_STRUCTURE,if (s.charAt(j) != s.charAt(j + 1)),if (s.charAt(j) != s.charAt(j + 1)))<SUB>11</SUB>>", "69": "<(charAt,s.charAt(j))<SUB>11</SUB>>", "71": "<(IDENTIFIER,j,s.charAt(j))<SUB>11</SUB>>", "73": "<(IDENTIFIER,s,s.charAt(j + 1))<SUB>11</SUB>>", "75": "<(IDENTIFIER,j,j + 1)<SUB>11</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,cnt[s.charAt(j) - 'a'][s.charAt(j + 1) - 'a'])<SUB>12</SUB>>", "81": "<(IDENTIFIER,cnt,cnt[s.charAt(j) - 'a'][s.charAt(j + 1) - 'a']++)<SUB>12</SUB>>", "83": "<(charAt,s.charAt(j))<SUB>12</SUB>>", "85": "<(IDENTIFIER,j,s.charAt(j))<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.subtraction,s.charAt(j + 1) - 'a')<SUB>12</SUB>>", "89": "<(IDENTIFIER,s,s.charAt(j + 1))<SUB>12</SUB>>", "91": "<(IDENTIFIER,j,j + 1)<SUB>12</SUB>>", "93": "<(LITERAL,'a',s.charAt(j + 1) - 'a')<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,cnt[s.charAt(j + 1) - 'a'][s.charAt(j) - 'a'])<SUB>13</SUB>>", "97": "<(IDENTIFIER,cnt,cnt[s.charAt(j + 1) - 'a'][s.charAt(j) - 'a']++)<SUB>13</SUB>>", "99": "<(charAt,s.charAt(j + 1))<SUB>13</SUB>>", "101": "<(&lt;operator&gt;.addition,j + 1)<SUB>13</SUB>>", "103": "<(LITERAL,1,j + 1)<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.subtraction,s.charAt(j) - 'a')<SUB>13</SUB>>", "107": "<(IDENTIFIER,s,s.charAt(j))<SUB>13</SUB>>", "109": "<(LITERAL,'a',s.charAt(j) - 'a')<SUB>13</SUB>>", "111": "<(&lt;operator&gt;.assignment,int[] st = new int[m + 1])<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.alloc,new int[m + 1])>", "115": "<(IDENTIFIER,m,m + 1)<SUB>16</SUB>>", "117": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= m); j++),for (int j = 0; Some(j &lt;= m); j++))<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>17</SUB>>", "121": "<(LITERAL,0,int j = 0)<SUB>17</SUB>>", "123": "<(IDENTIFIER,j,j &lt;= m)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.postIncrement,j++)<SUB>17</SUB>>", "127": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,st[j])<SUB>18</SUB>>", "131": "<(IDENTIFIER,j,st[j] = 1 &lt;&lt; j)<SUB>18</SUB>>", "133": "<(LITERAL,1,1 &lt;&lt; j)<SUB>18</SUB>>", "135": "<(LOCAL,int[][] arr: int[][])<SUB>20</SUB>>", "137": "<(IDENTIFIER,arr,int[][] arr = new int[m][1 &lt;&lt; m])<SUB>20</SUB>>", "139": "<(IDENTIFIER,m,new int[m][1 &lt;&lt; m])<SUB>20</SUB>>", "141": "<(LITERAL,1,1 &lt;&lt; m)<SUB>20</SUB>>", "143": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>21</SUB>>", "145": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "147": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "149": "<(IDENTIFIER,j,j &lt; m)<SUB>21</SUB>>", "151": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "153": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "155": "<(LOCAL,int k: int)<SUB>22</SUB>>", "157": "<(IDENTIFIER,k,int k = 1)<SUB>22</SUB>>", "159": "<(&lt;operator&gt;.lessThan,k &lt; (1 &lt;&lt; m))<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>22</SUB>>", "163": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>22</SUB>>", "165": "<(IDENTIFIER,k,k++)<SUB>22</SUB>>", "167": "<(LOCAL,int z: int)<SUB>23</SUB>>", "169": "<(IDENTIFIER,z,int z = Integer.lowestOneBit(k))<SUB>23</SUB>>", "171": "<(IDENTIFIER,Integer,Integer.lowestOneBit(k))<SUB>23</SUB>>", "173": "<(LOCAL,int count: int)<SUB>24</SUB>>", "175": "<(IDENTIFIER,count,int count = 0)<SUB>24</SUB>>", "177": "<(CONTROL_STRUCTURE,while (z != 0 &amp;&amp; z % 2 == 0),while (z != 0 &amp;&amp; z % 2 == 0))<SUB>25</SUB>>", "179": "<(&lt;operator&gt;.notEquals,z != 0)<SUB>25</SUB>>", "181": "<(LITERAL,0,z != 0)<SUB>25</SUB>>", "183": "<(&lt;operator&gt;.modulo,z % 2)<SUB>25</SUB>>", "185": "<(LITERAL,2,z % 2)<SUB>25</SUB>>", "187": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "189": "<(IDENTIFIER,z,z /= 2)<SUB>26</SUB>>", "191": "<(&lt;operator&gt;.postIncrement,count++)<SUB>27</SUB>>", "193": "<(&lt;operator&gt;.assignment,arr[j][k] = arr[j][k ^ (Integer.lowestOneBit(k))] + cnt[j][count])<SUB>29</SUB>>", "195": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>29</SUB>>", "197": "<(IDENTIFIER,j,arr[j][k] = arr[j][k ^ (Integer.lowestOneBit(k))] + cnt[j][count])<SUB>29</SUB>>", "199": "<(&lt;operator&gt;.addition,arr[j][k ^ (Integer.lowestOneBit(k))] + cnt[j][count])<SUB>29</SUB>>", "201": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>29</SUB>>", "203": "<(IDENTIFIER,j,arr[j][k ^ (Integer.lowestOneBit(k))] + cnt[j][count])<SUB>29</SUB>>", "205": "<(IDENTIFIER,k,k ^ (Integer.lowestOneBit(k)))<SUB>29</SUB>>", "207": "<(IDENTIFIER,Integer,Integer.lowestOneBit(k))<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,cnt[j][count])<SUB>29</SUB>>", "211": "<(IDENTIFIER,cnt,arr[j][k ^ (Integer.lowestOneBit(k))] + cnt[j][count])<SUB>29</SUB>>", "213": "<(IDENTIFIER,count,arr[j][k ^ (Integer.lowestOneBit(k))] + cnt[j][count])<SUB>29</SUB>>", "215": "<(&lt;operator&gt;.assignment,int[] dp = new int[1 &lt;&lt; m])<SUB>32</SUB>>", "217": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; m])>", "219": "<(LITERAL,1,1 &lt;&lt; m)<SUB>32</SUB>>", "221": "<(fill,fill(dp, Integer.MAX_VALUE))<SUB>33</SUB>>", "223": "<(IDENTIFIER,dp,fill(dp, Integer.MAX_VALUE))<SUB>33</SUB>>", "225": "<(IDENTIFIER,Integer,fill(dp, Integer.MAX_VALUE))<SUB>33</SUB>>", "227": "<(&lt;operator&gt;.assignment,dp[0] = 0)<SUB>34</SUB>>", "229": "<(IDENTIFIER,dp,dp[0] = 0)<SUB>34</SUB>>", "231": "<(LITERAL,0,dp[0] = 0)<SUB>34</SUB>>", "233": "<(LOCAL,int j: int)<SUB>35</SUB>>", "235": "<(IDENTIFIER,j,int j = 1)<SUB>35</SUB>>", "237": "<(&lt;operator&gt;.lessThan,j &lt; st[m])<SUB>35</SUB>>", "239": "<(&lt;operator&gt;.indexAccess,st[m])<SUB>35</SUB>>", "241": "<(IDENTIFIER,m,j &lt; st[m])<SUB>35</SUB>>", "243": "<(IDENTIFIER,j,j++)<SUB>35</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int k = 0; Some(k &lt; m); k++),for (int k = 0; Some(k &lt; m); k++))<SUB>37</SUB>>", "247": "<(&lt;operator&gt;.assignment,int k = 0)<SUB>37</SUB>>", "249": "<(LITERAL,0,int k = 0)<SUB>37</SUB>>", "251": "<(IDENTIFIER,k,k &lt; m)<SUB>37</SUB>>", "253": "<(&lt;operator&gt;.postIncrement,k++)<SUB>37</SUB>>", "255": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>37</SUB>>", "257": "<(&lt;operator&gt;.assignment,int y = st[k])<SUB>38</SUB>>", "259": "<(&lt;operator&gt;.indexAccess,st[k])<SUB>38</SUB>>", "261": "<(IDENTIFIER,k,int y = st[k])<SUB>38</SUB>>", "263": "<(&lt;operator&gt;.notEquals,(y &amp; j) != 0)<SUB>39</SUB>>", "265": "<(IDENTIFIER,y,y &amp; j)<SUB>39</SUB>>", "267": "<(LITERAL,0,(y &amp; j) != 0)<SUB>39</SUB>>", "269": "<(LOCAL,int sum: int)<SUB>40</SUB>>", "271": "<(IDENTIFIER,sum,int sum = 2 * arr[k][j] - arr[k][(1 &lt;&lt; m) - 1])<SUB>40</SUB>>", "273": "<(&lt;operator&gt;.multiplication,2 * arr[k][j])<SUB>40</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,arr[k][j])<SUB>40</SUB>>", "277": "<(IDENTIFIER,arr,2 * arr[k][j])<SUB>40</SUB>>", "279": "<(IDENTIFIER,j,2 * arr[k][j])<SUB>40</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,arr[k])<SUB>40</SUB>>", "283": "<(IDENTIFIER,k,2 * arr[k][j] - arr[k][(1 &lt;&lt; m) - 1])<SUB>40</SUB>>", "285": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; m)<SUB>40</SUB>>", "287": "<(IDENTIFIER,m,1 &lt;&lt; m)<SUB>40</SUB>>", "289": "<(&lt;operator&gt;.assignment,dp[j] = Math.min(dp[j], dp[y ^ j] + sum * Integer.bitCount(j)))<SUB>49</SUB>>", "291": "<(IDENTIFIER,dp,dp[j] = Math.min(dp[j], dp[y ^ j] + sum * Integer.bitCount(j)))<SUB>49</SUB>>", "293": "<(min,Math.min(dp[j], dp[y ^ j] + sum * Integer.bitCount(j)))<SUB>49</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>49</SUB>>", "297": "<(IDENTIFIER,j,Math.min(dp[j], dp[y ^ j] + sum * Integer.bitCount(j)))<SUB>49</SUB>>", "299": "<(&lt;operator&gt;.indexAccess,dp[y ^ j])<SUB>49</SUB>>", "301": "<(&lt;operator&gt;.xor,y ^ j)<SUB>49</SUB>>", "303": "<(IDENTIFIER,j,y ^ j)<SUB>49</SUB>>", "305": "<(IDENTIFIER,sum,sum * Integer.bitCount(j))<SUB>49</SUB>>", "307": "<(IDENTIFIER,Integer,Integer.bitCount(j))<SUB>49</SUB>>", "309": "<(println,println(dp[(1 &lt;&lt; m) - 1]))<SUB>53</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,dp[(1 &lt;&lt; m) - 1])<SUB>53</SUB>>", "313": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; m) - 1)<SUB>53</SUB>>", "315": "<(LITERAL,1,1 &lt;&lt; m)<SUB>53</SUB>>", "317": "<(LITERAL,1,(1 &lt;&lt; m) - 1)<SUB>53</SUB>>", "319": "<(IDENTIFIER,out,close())<SUB>54</SUB>>", "321": "<(MODIFIER,STATIC)>"}}