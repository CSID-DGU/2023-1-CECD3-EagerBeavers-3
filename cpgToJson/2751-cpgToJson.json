{"edges": [["19", "20"], ["19", "21"], ["19", "106"], ["19", "107"], ["19", "108"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["34", "35"], ["34", "42"], ["34", "48"], ["35", "36"], ["35", "39"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["42", "43"], ["43", "44"], ["43", "47"], ["44", "45"], ["44", "46"], ["48", "49"], ["49", "50"], ["49", "55"], ["49", "91"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["55", "56"], ["56", "57"], ["56", "62"], ["56", "77"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "74"], ["67", "68"], ["67", "71"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "88"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["92", "93"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "103"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["22", "28"], ["25", "32"], ["30", "36"], ["24", "22"], ["26", "25"], ["32", "30"], ["35", "46"], ["35", "51"], ["28", "26"], ["36", "35"], ["36", "39"], ["39", "35"], ["43", "108"], ["44", "43"], ["50", "58"], ["50", "96"], ["46", "44"], ["51", "50"], ["57", "65"], ["57", "81"], ["62", "108"], ["93", "108"], ["58", "57"], ["63", "68"], ["66", "62"], ["78", "108"], ["94", "100"], ["97", "93"], ["65", "63"], ["67", "74"], ["74", "66"], ["79", "85"], ["82", "78"], ["96", "94"], ["98", "103"], ["103", "97"], ["68", "71"], ["71", "67"], ["81", "79"], ["83", "88"], ["88", "82"], ["100", "98"], ["85", "83"], ["19", "24"], ["20", "108"], ["22", "108"], ["25", "108"], ["25", "108"], ["32", "108"], ["30", "108"], ["30", "108"], ["35", "108"], ["35", "108"], ["35", "108"], ["43", "108"], ["43", "108"], ["43", "108"], ["19", "20"], ["19", "22"], ["32", "30"], ["22", "25"], ["19", "25"], ["25", "32"], ["19", "32"], ["36", "35"], ["36", "35"], ["39", "35"], ["39", "35"], ["30", "36"], ["19", "36"], ["36", "39"], ["19", "39"], ["36", "43"], ["39", "43"], ["19", "43"], ["51", "50"], ["51", "50"], ["19", "50"], ["36", "51"], ["39", "51"], ["19", "51"], ["58", "57"], ["58", "57"], ["19", "57"], ["66", "62"], ["66", "62"], ["97", "93"], ["97", "93"], ["51", "58"], ["19", "58"], ["67", "66"], ["67", "66"], ["74", "66"], ["74", "66"], ["82", "78"], ["82", "78"], ["98", "97"], ["98", "97"], ["103", "97"], ["103", "97"], ["68", "67"], ["68", "67"], ["71", "67"], ["71", "67"], ["71", "74"], ["19", "74"], ["83", "82"], ["83", "82"], ["88", "82"], ["88", "82"], ["100", "98"], ["19", "98"], ["100", "98"], ["98", "103"], ["19", "103"], ["58", "68"], ["19", "68"], ["68", "71"], ["19", "71"], ["85", "83"], ["19", "83"], ["85", "83"], ["83", "88"], ["19", "88"], ["51", "100"], ["19", "100"], ["58", "85"], ["19", "85"], ["35", "51"], ["35", "46"], ["35", "50"], ["35", "44"], ["35", "43"], ["36", "39"], ["50", "94"], ["50", "96"], ["50", "57"], ["50", "98"], ["50", "103"], ["50", "97"], ["50", "93"], ["50", "58"], ["50", "100"], ["57", "68"], ["57", "66"], ["57", "81"], ["57", "85"], ["57", "67"], ["57", "74"], ["57", "65"], ["57", "82"], ["57", "79"], ["57", "83"], ["57", "71"], ["57", "88"], ["57", "63"], ["57", "78"], ["57", "62"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,in,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.logicalOr,n == 1 || n == 2)<SUB>4</SUB>>", "37": "<(IDENTIFIER,n,n == 1)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.equals,n == 2)<SUB>4</SUB>>", "41": "<(LITERAL,2,n == 2)<SUB>4</SUB>>", "43": "<(println,System.out.println(n))<SUB>5</SUB>>", "45": "<(IDENTIFIER,System,System.out.println(n))<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,System.out.println(n))<SUB>5</SUB>>", "49": "<(CONTROL_STRUCTURE,if (n % 2 == 0),if (n % 2 == 0))<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.modulo,n % 2)<SUB>6</SUB>>", "53": "<(LITERAL,2,n % 2)<SUB>6</SUB>>", "55": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.equals,n % 3 == 0)<SUB>7</SUB>>", "59": "<(IDENTIFIER,n,n % 3)<SUB>7</SUB>>", "61": "<(LITERAL,0,n % 3 == 0)<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "65": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.multiplication,(n - 1) * (n - 2))<SUB>8</SUB>>", "69": "<(IDENTIFIER,n,n - 1)<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>8</SUB>>", "73": "<(LITERAL,2,n - 2)<SUB>8</SUB>>", "75": "<(IDENTIFIER,n,n - 3)<SUB>8</SUB>>", "77": "<(CONTROL_STRUCTURE,else,else)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>10</SUB>>", "81": "<(FIELD_IDENTIFIER,out,out)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.multiplication,n * (n - 1))<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>10</SUB>>", "87": "<(LITERAL,1,n - 1)<SUB>10</SUB>>", "89": "<(IDENTIFIER,n,n - 3)<SUB>10</SUB>>", "91": "<(CONTROL_STRUCTURE,else,else)<SUB>11</SUB>>", "93": "<(println,System.out.println(n * (n - 1) * (n - 2)))<SUB>12</SUB>>", "95": "<(IDENTIFIER,System,System.out.println(n * (n - 1) * (n - 2)))<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.multiplication,n * (n - 1) * (n - 2))<SUB>12</SUB>>", "99": "<(IDENTIFIER,n,n * (n - 1))<SUB>12</SUB>>", "101": "<(IDENTIFIER,n,n - 1)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.subtraction,n - 2)<SUB>12</SUB>>", "105": "<(LITERAL,2,n - 2)<SUB>12</SUB>>", "107": "<(MODIFIER,STATIC)>"}}