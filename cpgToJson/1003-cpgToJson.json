{"edges": [["19", "20"], ["19", "21"], ["19", "134"], ["19", "135"], ["19", "136"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "38"], ["21", "39"], ["21", "42"], ["21", "43"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "50"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["50", "58"], ["50", "131"], ["51", "52"], ["51", "53"], ["53", "54"], ["53", "57"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["62", "64"], ["62", "75"], ["62", "76"], ["62", "83"], ["62", "84"], ["62", "89"], ["62", "99"], ["62", "104"], ["62", "106"], ["62", "107"], ["62", "110"], ["62", "125"], ["62", "130"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "74"], ["71", "72"], ["71", "73"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "101"], ["101", "102"], ["101", "103"], ["104", "105"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "114"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "120"], ["114", "123"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["123", "124"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["131", "132"], ["131", "133"], ["22", "28"], ["25", "32"], ["30", "35"], ["35", "39"], ["39", "45"], ["24", "22"], ["26", "25"], ["32", "30"], ["45", "48"], ["48", "136"], ["48", "54"], ["28", "26"], ["51", "59"], ["131", "48"], ["53", "51"], ["59", "71"], ["59", "131"], ["54", "53"], ["64", "80"], ["76", "86"], ["84", "90"], ["99", "104"], ["104", "107"], ["107", "111"], ["66", "64"], ["78", "76"], ["86", "84"], ["90", "94"], ["90", "101"], ["101", "99"], ["111", "117"], ["111", "128"], ["126", "125"], ["68", "66"], ["80", "78"], ["94", "97"], ["97", "101"], ["115", "120"], ["120", "123"], ["123", "111"], ["128", "126"], ["70", "68"], ["117", "115"], ["71", "70"], ["19", "24"], ["20", "136"], ["22", "136"], ["25", "136"], ["25", "136"], ["30", "136"], ["32", "136"], ["30", "136"], ["30", "136"], ["35", "136"], ["35", "136"], ["39", "136"], ["39", "136"], ["45", "136"], ["48", "136"], ["48", "136"], ["131", "136"], ["131", "136"], ["19", "20"], ["19", "22"], ["32", "30"], ["19", "35"], ["19", "39"], ["22", "25"], ["19", "25"], ["19", "45"], ["25", "32"], ["19", "32"], ["45", "48"], ["54", "48"], ["19", "48"], ["53", "51"], ["53", "51"], ["19", "131"], ["39", "51"], ["59", "51"], ["19", "51"], ["53", "131"], ["54", "53"], ["54", "53"], ["35", "53"], ["131", "53"], ["19", "53"], ["51", "59"], ["19", "59"], ["30", "59"], ["66", "64"], ["66", "64"], ["70", "76"], ["19", "76"], ["80", "76"], ["80", "76"], ["86", "84"], ["86", "84"], ["101", "99"], ["101", "99"], ["19", "107"], ["19", "54"], ["48", "54"], ["99", "104"], ["19", "104"], ["107", "125"], ["115", "125"], ["19", "125"], ["59", "66"], ["19", "66"], ["68", "66"], ["68", "66"], ["70", "78"], ["19", "78"], ["80", "78"], ["80", "78"], ["80", "86"], ["19", "86"], ["80", "86"], ["84", "90"], ["19", "90"], ["86", "94"], ["19", "94"], ["86", "101"], ["19", "101"], ["90", "101"], ["94", "101"], ["104", "111"], ["123", "111"], ["19", "111"], ["117", "115"], ["117", "115"], ["19", "120"], ["59", "68"], ["19", "68"], ["70", "68"], ["70", "68"], ["64", "80"], ["19", "80"], ["71", "80"], ["76", "97"], ["19", "97"], ["117", "120"], ["111", "123"], ["19", "123"], ["71", "70"], ["71", "70"], ["53", "70"], ["19", "70"], ["76", "117"], ["97", "117"], ["120", "117"], ["19", "117"], ["19", "71"], ["54", "71"], ["48", "48"], ["48", "59"], ["48", "51"], ["48", "53"], ["48", "131"], ["48", "54"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,long n: long)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,long n = nextLong())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextLong())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long x = 1)<SUB>4</SUB>>", "37": "<(LITERAL,1,long x = 1)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,long ar = 0)<SUB>5</SUB>>", "41": "<(LITERAL,0,long ar = 0)<SUB>5</SUB>>", "43": "<(CONTROL_STRUCTURE,for (long i = 1; None; i++),for (long i = 1; None; i++))<SUB>6</SUB>>", "45": "<(&lt;operator&gt;.assignment,long i = 1)<SUB>6</SUB>>", "47": "<(LITERAL,1,long i = 1)<SUB>6</SUB>>", "49": "<(IDENTIFIER,i,i++)<SUB>6</SUB>>", "51": "<(&lt;operator&gt;.assignmentPlus,ar += 9 * i * x)<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.multiplication,9 * i * x)<SUB>8</SUB>>", "55": "<(LITERAL,9,9 * i)<SUB>8</SUB>>", "57": "<(IDENTIFIER,x,9 * i * x)<SUB>8</SUB>>", "59": "<(&lt;operator&gt;.greaterEqualsThan,ar &gt;= n)<SUB>9</SUB>>", "61": "<(IDENTIFIER,n,ar &gt;= n)<SUB>9</SUB>>", "63": "<(LOCAL,long d: long)<SUB>11</SUB>>", "65": "<(IDENTIFIER,d,long d = n - (ar - 9 * i * x))<SUB>11</SUB>>", "67": "<(IDENTIFIER,n,n - (ar - 9 * i * x))<SUB>11</SUB>>", "69": "<(IDENTIFIER,ar,ar - 9 * i * x)<SUB>11</SUB>>", "71": "<(&lt;operator&gt;.multiplication,9 * i)<SUB>11</SUB>>", "73": "<(IDENTIFIER,i,9 * i)<SUB>11</SUB>>", "75": "<(LOCAL,long ans: long)<SUB>12</SUB>>", "77": "<(IDENTIFIER,ans,long ans = x + d / i)<SUB>12</SUB>>", "79": "<(IDENTIFIER,x,x + d / i)<SUB>12</SUB>>", "81": "<(IDENTIFIER,d,d / i)<SUB>12</SUB>>", "83": "<(LOCAL,long p: long)<SUB>13</SUB>>", "85": "<(IDENTIFIER,p,long p = d % i)<SUB>13</SUB>>", "87": "<(IDENTIFIER,d,d % i)<SUB>13</SUB>>", "89": "<(CONTROL_STRUCTURE,if (p == 0),if (p == 0))<SUB>14</SUB>>", "91": "<(IDENTIFIER,p,p == 0)<SUB>14</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "95": "<(IDENTIFIER,p,p = i)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.postDecrement,ans--)<SUB>17</SUB>>", "99": "<(&lt;operator&gt;.assignment,p = i - p)<SUB>19</SUB>>", "101": "<(&lt;operator&gt;.subtraction,i - p)<SUB>19</SUB>>", "103": "<(IDENTIFIER,p,i - p)<SUB>19</SUB>>", "105": "<(IDENTIFIER,p,p++)<SUB>20</SUB>>", "107": "<(&lt;operator&gt;.assignment,long fns = 0)<SUB>21</SUB>>", "109": "<(LITERAL,0,long fns = 0)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.notEquals,p != 0)<SUB>23</SUB>>", "113": "<(LITERAL,0,p != 0)<SUB>23</SUB>>", "115": "<(&lt;operator&gt;.assignment,fns = ans % 10)<SUB>25</SUB>>", "117": "<(&lt;operator&gt;.modulo,ans % 10)<SUB>25</SUB>>", "119": "<(LITERAL,10,ans % 10)<SUB>25</SUB>>", "121": "<(IDENTIFIER,ans,ans /= 10)<SUB>26</SUB>>", "123": "<(&lt;operator&gt;.postDecrement,p--)<SUB>27</SUB>>", "125": "<(println,System.out.println(fns))<SUB>29</SUB>>", "127": "<(IDENTIFIER,System,System.out.println(fns))<SUB>29</SUB>>", "129": "<(IDENTIFIER,fns,System.out.println(fns))<SUB>29</SUB>>", "131": "<(&lt;operator&gt;.assignmentMultiplication,x *= 10)<SUB>33</SUB>>", "133": "<(LITERAL,10,x *= 10)<SUB>33</SUB>>", "135": "<(MODIFIER,STATIC)>"}}