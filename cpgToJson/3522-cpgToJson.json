{"edges": [["17", "18"], ["17", "19"], ["17", "336"], ["17", "337"], ["17", "338"], ["19", "20"], ["19", "23"], ["19", "25"], ["19", "28"], ["19", "33"], ["19", "34"], ["19", "38"], ["19", "42"], ["19", "43"], ["19", "47"], ["19", "48"], ["19", "52"], ["19", "57"], ["19", "62"], ["19", "105"], ["19", "106"], ["19", "111"], ["19", "180"], ["19", "181"], ["19", "190"], ["19", "212"], ["19", "306"], ["19", "307"], ["19", "310"], ["19", "331"], ["19", "334"], ["20", "21"], ["20", "22"], ["23", "24"], ["25", "26"], ["25", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["34", "35"], ["34", "36"], ["36", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "61"], ["58", "59"], ["58", "60"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "84"], ["72", "89"], ["72", "100"], ["73", "74"], ["73", "77"], ["74", "75"], ["74", "76"], ["77", "78"], ["77", "83"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["106", "107"], ["106", "108"], ["108", "109"], ["108", "110"], ["111", "112"], ["111", "113"], ["111", "116"], ["111", "119"], ["111", "121"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "130"], ["122", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["132", "142"], ["132", "153"], ["132", "160"], ["132", "173"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "141"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "150"], ["150", "151"], ["150", "152"], ["153", "154"], ["153", "159"], ["154", "155"], ["154", "158"], ["155", "156"], ["155", "157"], ["160", "161"], ["160", "166"], ["161", "162"], ["161", "165"], ["162", "163"], ["162", "164"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "179"], ["174", "175"], ["174", "178"], ["175", "176"], ["175", "177"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["190", "195"], ["190", "198"], ["190", "200"], ["192", "193"], ["192", "194"], ["195", "196"], ["195", "197"], ["198", "199"], ["200", "201"], ["201", "202"], ["201", "207"], ["202", "203"], ["202", "206"], ["203", "204"], ["203", "205"], ["207", "208"], ["207", "209"], ["209", "210"], ["209", "211"], ["212", "213"], ["212", "214"], ["212", "217"], ["212", "220"], ["212", "222"], ["214", "215"], ["214", "216"], ["217", "218"], ["217", "219"], ["220", "221"], ["222", "223"], ["223", "224"], ["223", "225"], ["223", "228"], ["223", "231"], ["223", "233"], ["225", "226"], ["225", "227"], ["228", "229"], ["228", "230"], ["231", "232"], ["233", "234"], ["233", "239"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "241"], ["239", "244"], ["239", "249"], ["239", "251"], ["241", "242"], ["241", "243"], ["244", "245"], ["244", "248"], ["245", "246"], ["245", "247"], ["249", "250"], ["251", "252"], ["251", "253"], ["251", "274"], ["251", "277"], ["251", "284"], ["251", "295"], ["253", "254"], ["253", "255"], ["255", "256"], ["255", "261"], ["256", "257"], ["256", "260"], ["257", "258"], ["257", "259"], ["261", "262"], ["261", "271"], ["262", "263"], ["262", "264"], ["264", "265"], ["264", "270"], ["265", "266"], ["265", "269"], ["266", "267"], ["266", "268"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "276"], ["277", "278"], ["277", "279"], ["279", "280"], ["279", "281"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "294"], ["285", "286"], ["285", "291"], ["286", "287"], ["286", "288"], ["288", "289"], ["288", "290"], ["291", "292"], ["291", "293"], ["295", "296"], ["295", "305"], ["296", "297"], ["296", "302"], ["297", "298"], ["297", "299"], ["299", "300"], ["299", "301"], ["302", "303"], ["302", "304"], ["307", "308"], ["307", "309"], ["310", "311"], ["310", "312"], ["310", "315"], ["310", "318"], ["310", "320"], ["312", "313"], ["312", "314"], ["315", "316"], ["315", "317"], ["318", "319"], ["320", "321"], ["320", "328"], ["321", "322"], ["321", "323"], ["323", "324"], ["323", "327"], ["324", "325"], ["324", "326"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "333"], ["334", "335"], ["20", "23"], ["23", "27"], ["25", "32"], ["28", "36"], ["34", "40"], ["38", "45"], ["43", "50"], ["48", "53"], ["52", "58"], ["57", "64"], ["106", "113"], ["181", "192"], ["307", "312"], ["331", "334"], ["334", "338"], ["22", "20"], ["27", "25"], ["30", "28"], ["36", "34"], ["40", "38"], ["45", "43"], ["50", "48"], ["53", "52"], ["58", "57"], ["64", "67"], ["67", "74"], ["67", "108"], ["70", "67"], ["108", "106"], ["113", "116"], ["116", "124"], ["116", "184"], ["119", "116"], ["183", "181"], ["192", "195"], ["195", "203"], ["195", "214"], ["198", "195"], ["214", "217"], ["217", "225"], ["217", "307"], ["220", "217"], ["312", "315"], ["315", "324"], ["315", "331"], ["318", "315"], ["32", "30"], ["73", "85"], ["84", "90"], ["89", "101"], ["100", "70"], ["184", "187"], ["187", "183"], ["201", "198"], ["321", "328"], ["328", "318"], ["74", "80"], ["77", "73"], ["85", "84"], ["90", "96"], ["93", "89"], ["101", "100"], ["124", "127"], ["127", "135"], ["127", "119"], ["130", "127"], ["202", "209"], ["207", "201"], ["225", "228"], ["228", "235"], ["228", "220"], ["231", "228"], ["323", "321"], ["78", "77"], ["94", "93"], ["133", "144"], ["142", "155"], ["153", "162"], ["160", "175"], ["173", "130"], ["203", "202"], ["209", "207"], ["324", "323"], ["80", "78"], ["96", "94"], ["134", "139"], ["139", "133"], ["143", "150"], ["148", "142"], ["154", "153"], ["161", "170"], ["166", "160"], ["174", "173"], ["235", "231"], ["235", "241"], ["241", "245"], ["244", "257"], ["244", "231"], ["249", "245"], ["135", "134"], ["144", "143"], ["150", "148"], ["155", "154"], ["162", "161"], ["168", "166"], ["175", "174"], ["245", "244"], ["253", "274"], ["274", "281"], ["277", "288"], ["284", "299"], ["295", "249"], ["170", "168"], ["255", "253"], ["279", "277"], ["285", "284"], ["296", "295"], ["256", "266"], ["261", "255"], ["281", "279"], ["286", "291"], ["291", "285"], ["297", "302"], ["302", "296"], ["257", "256"], ["262", "271"], ["271", "261"], ["288", "286"], ["299", "297"], ["264", "262"], ["265", "264"], ["266", "265"], ["17", "22"], ["18", "338"], ["20", "338"], ["23", "338"], ["25", "338"], ["28", "338"], ["28", "338"], ["34", "338"], ["34", "338"], ["38", "338"], ["40", "338"], ["38", "338"], ["38", "338"], ["43", "338"], ["43", "338"], ["48", "338"], ["48", "338"], ["48", "338"], ["52", "338"], ["52", "338"], ["57", "338"], ["57", "338"], ["106", "338"], ["106", "338"], ["106", "338"], ["113", "338"], ["116", "338"], ["181", "338"], ["183", "338"], ["181", "338"], ["181", "338"], ["192", "338"], ["195", "338"], ["195", "338"], ["214", "338"], ["217", "338"], ["217", "338"], ["307", "338"], ["312", "338"], ["315", "338"], ["315", "338"], ["315", "338"], ["331", "338"], ["331", "338"], ["334", "338"], ["334", "338"], ["321", "338"], ["321", "338"], ["328", "338"], ["318", "338"], ["225", "338"], ["228", "338"], ["228", "338"], ["220", "338"], ["235", "338"], ["241", "338"], ["245", "338"], ["244", "338"], ["244", "338"], ["255", "338"], ["265", "338"], ["264", "338"], ["255", "338"], ["253", "338"], ["253", "338"], ["277", "338"], ["277", "338"], ["284", "338"], ["284", "338"], ["295", "338"], ["295", "338"], ["249", "338"], ["231", "338"], ["201", "338"], ["201", "338"], ["201", "338"], ["198", "338"], ["127", "338"], ["119", "338"], ["133", "338"], ["133", "338"], ["148", "338"], ["142", "338"], ["142", "338"], ["166", "338"], ["166", "338"], ["160", "338"], ["160", "338"], ["173", "338"], ["173", "338"], ["130", "338"], ["77", "338"], ["73", "338"], ["73", "338"], ["84", "338"], ["93", "338"], ["89", "338"], ["89", "338"], ["100", "338"], ["100", "338"], ["70", "338"], ["17", "18"], ["17", "20"], ["17", "25"], ["36", "34"], ["40", "38"], ["45", "43"], ["50", "48"], ["17", "52"], ["17", "57"], ["108", "106"], ["183", "181"], ["17", "307"], ["20", "23"], ["17", "23"], ["25", "28"], ["17", "28"], ["17", "64"], ["17", "113"], ["17", "192"], ["17", "214"], ["17", "312"], ["28", "331"], ["17", "331"], ["307", "331"], ["328", "331"], ["331", "334"], ["17", "334"], ["23", "36"], ["17", "36"], ["36", "40"], ["17", "40"], ["17", "45"], ["17", "50"], ["64", "67"], ["70", "67"], ["17", "67"], ["93", "70"], ["17", "70"], ["77", "73"], ["77", "73"], ["38", "84"], ["17", "84"], ["93", "89"], ["93", "89"], ["17", "100"], ["17", "108"], ["113", "116"], ["119", "116"], ["17", "116"], ["127", "119"], ["17", "119"], ["34", "183"], ["17", "183"], ["192", "195"], ["198", "195"], ["17", "195"], ["34", "195"], ["209", "198"], ["17", "198"], ["48", "201"], ["77", "201"], ["214", "217"], ["220", "217"], ["17", "217"], ["195", "217"], ["228", "217"], ["217", "220"], ["235", "220"], ["17", "220"], ["266", "220"], ["312", "315"], ["318", "315"], ["17", "315"], ["217", "315"], ["315", "318"], ["17", "318"], ["38", "328"], ["17", "328"], ["48", "84"], ["73", "84"], ["43", "100"], ["89", "100"], ["17", "124"], ["34", "184"], ["17", "184"], ["17", "187"], ["34", "187"], ["17", "225"], ["307", "321"], ["328", "321"], ["17", "321"], ["321", "328"], ["48", "77"], ["17", "77"], ["43", "93"], ["96", "93"], ["17", "93"], ["124", "127"], ["130", "127"], ["17", "127"], ["116", "127"], ["170", "127"], ["170", "130"], ["17", "130"], ["43", "133"], ["100", "133"], ["148", "142"], ["148", "142"], ["38", "153"], ["17", "153"], ["166", "160"], ["166", "160"], ["17", "173"], ["38", "173"], ["225", "228"], ["231", "228"], ["17", "228"], ["217", "228"], ["244", "228"], ["235", "231"], ["17", "231"], ["266", "231"], ["133", "142"], ["142", "153"], ["153", "160"], ["160", "173"], ["195", "209"], ["17", "209"], ["17", "241"], ["67", "80"], ["17", "80"], ["80", "96"], ["17", "96"], ["166", "148"], ["17", "148"], ["43", "148"], ["148", "166"], ["17", "166"], ["43", "166"], ["217", "235"], ["17", "235"], ["266", "235"], ["228", "235"], ["235", "244"], ["17", "244"], ["266", "244"], ["241", "244"], ["249", "244"], ["228", "244"], ["17", "249"], ["281", "249"], ["255", "253"], ["255", "253"], ["38", "274"], ["17", "274"], ["48", "277"], ["277", "284"], ["17", "284"], ["17", "295"], ["38", "295"], ["235", "245"], ["17", "245"], ["266", "245"], ["241", "245"], ["249", "245"], ["253", "274"], ["274", "277"], ["17", "277"], ["295", "284"], ["284", "295"], ["127", "170"], ["17", "170"], ["127", "170"], ["271", "281"], ["17", "281"], ["266", "291"], ["17", "291"], ["17", "302"], ["266", "302"], ["17", "271"], ["241", "271"], ["249", "271"], ["266", "288"], ["17", "288"], ["281", "288"], ["17", "299"], ["266", "299"], ["281", "299"], ["266", "264"], ["266", "264"], ["17", "264"], ["241", "264"], ["249", "264"], ["266", "265"], ["266", "265"], ["17", "265"], ["241", "265"], ["249", "265"], ["17", "266"], ["235", "266"], ["235", "266"], ["67", "84"], ["67", "74"], ["67", "93"], ["67", "80"], ["67", "100"], ["67", "70"], ["67", "94"], ["67", "73"], ["67", "96"], ["67", "77"], ["67", "85"], ["67", "67"], ["67", "101"], ["67", "90"], ["67", "89"], ["67", "78"], ["116", "127"], ["116", "116"], ["116", "119"], ["116", "124"], ["195", "209"], ["195", "195"], ["195", "202"], ["195", "201"], ["195", "198"], ["195", "207"], ["195", "203"], ["217", "228"], ["217", "217"], ["217", "225"], ["217", "220"], ["315", "324"], ["315", "315"], ["315", "328"], ["315", "323"], ["315", "321"], ["315", "318"], ["127", "154"], ["127", "161"], ["127", "150"], ["127", "162"], ["127", "168"], ["127", "170"], ["127", "134"], ["127", "148"], ["127", "174"], ["127", "127"], ["127", "160"], ["127", "135"], ["127", "133"], ["127", "153"], ["127", "144"], ["127", "173"], ["127", "130"], ["127", "155"], ["127", "139"], ["127", "166"], ["127", "142"], ["127", "143"], ["127", "175"], ["228", "228"], ["228", "231"], ["228", "235"], ["235", "241"], ["235", "244"], ["235", "245"], ["244", "256"], ["244", "262"], ["244", "264"], ["244", "302"], ["244", "281"], ["244", "288"], ["244", "296"], ["244", "249"], ["244", "274"], ["244", "253"], ["244", "297"], ["244", "257"], ["244", "244"], ["244", "261"], ["244", "279"], ["244", "245"], ["244", "291"], ["244", "284"], ["244", "255"], ["244", "285"], ["244", "265"], ["244", "286"], ["244", "295"], ["244", "299"], ["244", "277"], ["244", "271"], ["244", "266"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,sc,sc = new MyScanner())<SUB>3</SUB>>", "23": "<(&lt;init&gt;,new MyScanner())<SUB>3</SUB>>", "25": "<(&lt;operator&gt;.assignment,out = new PrintWriter(System.out))<SUB>4</SUB>>", "27": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "29": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>4</SUB>>", "31": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(LOCAL,int n: int)<SUB>5</SUB>>", "35": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "37": "<(IDENTIFIER,sc,nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,mod,mod = nextLong())<SUB>6</SUB>>", "41": "<(IDENTIFIER,sc,nextLong())<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,long[] fact = new long[401])<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.alloc,new long[401])>", "47": "<(LOCAL,long[] twopowers: long[])<SUB>8</SUB>>", "49": "<(IDENTIFIER,twopowers,long[] twopowers = new long[401])<SUB>8</SUB>>", "51": "<(LITERAL,401,new long[401])<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,fact[0])<SUB>9</SUB>>", "55": "<(LITERAL,0,fact[0] = 1)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignment,twopowers[0] = 1)<SUB>10</SUB>>", "59": "<(IDENTIFIER,twopowers,twopowers[0] = 1)<SUB>10</SUB>>", "61": "<(LITERAL,1,twopowers[0] = 1)<SUB>10</SUB>>", "63": "<(LOCAL,int j: int)<SUB>11</SUB>>", "65": "<(IDENTIFIER,j,int j = 1)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= 400)<SUB>11</SUB>>", "69": "<(LITERAL,400,j &lt;= 400)<SUB>11</SUB>>", "71": "<(IDENTIFIER,j,j++)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignment,twopowers[j] = twopowers[j - 1] * 2L)<SUB>12</SUB>>", "75": "<(IDENTIFIER,twopowers,twopowers[j] = twopowers[j - 1] * 2L)<SUB>12</SUB>>", "77": "<(&lt;operator&gt;.multiplication,twopowers[j - 1] * 2L)<SUB>12</SUB>>", "79": "<(IDENTIFIER,twopowers,twopowers[j - 1] * 2L)<SUB>12</SUB>>", "81": "<(IDENTIFIER,j,j - 1)<SUB>12</SUB>>", "83": "<(LITERAL,2L,twopowers[j - 1] * 2L)<SUB>12</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,twopowers[j])<SUB>13</SUB>>", "87": "<(IDENTIFIER,j,twopowers[j] %= mod)<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.assignment,fact[j] = fact[j - 1] * j)<SUB>14</SUB>>", "91": "<(IDENTIFIER,fact,fact[j] = fact[j - 1] * j)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.multiplication,fact[j - 1] * j)<SUB>14</SUB>>", "95": "<(IDENTIFIER,fact,fact[j - 1] * j)<SUB>14</SUB>>", "97": "<(IDENTIFIER,j,j - 1)<SUB>14</SUB>>", "99": "<(IDENTIFIER,j,fact[j - 1] * j)<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.indexAccess,fact[j])<SUB>15</SUB>>", "103": "<(IDENTIFIER,j,fact[j] %= mod)<SUB>15</SUB>>", "105": "<(LOCAL,long[][] choose: long[][])<SUB>17</SUB>>", "107": "<(IDENTIFIER,choose,long[][] choose = new long[401][401])<SUB>17</SUB>>", "109": "<(LITERAL,401,new long[401][401])<SUB>17</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt;= 400); j++),for (int j = 0; Some(j &lt;= 400); j++))<SUB>18</SUB>>", "113": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>18</SUB>>", "115": "<(LITERAL,0,int j = 0)<SUB>18</SUB>>", "117": "<(IDENTIFIER,j,j &lt;= 400)<SUB>18</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "123": "<(LOCAL,int k: int)<SUB>19</SUB>>", "125": "<(IDENTIFIER,k,int k = 0)<SUB>19</SUB>>", "127": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= j)<SUB>19</SUB>>", "129": "<(IDENTIFIER,j,k &lt;= j)<SUB>19</SUB>>", "131": "<(IDENTIFIER,k,k++)<SUB>19</SUB>>", "133": "<(&lt;operator&gt;.assignment,choose[j][k] = fact[j])<SUB>20</SUB>>", "135": "<(&lt;operator&gt;.indexAccess,choose[j])<SUB>20</SUB>>", "137": "<(IDENTIFIER,j,choose[j][k] = fact[j])<SUB>20</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,fact[j])<SUB>20</SUB>>", "141": "<(IDENTIFIER,j,choose[j][k] = fact[j])<SUB>20</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,choose[j][k])<SUB>21</SUB>>", "145": "<(IDENTIFIER,choose,choose[j][k] *= inv(fact[k]))<SUB>21</SUB>>", "147": "<(IDENTIFIER,k,choose[j][k] *= inv(fact[k]))<SUB>21</SUB>>", "149": "<(IDENTIFIER,this,inv(fact[k]))<SUB>21</SUB>>", "151": "<(IDENTIFIER,fact,inv(fact[k]))<SUB>21</SUB>>", "153": "<(&lt;operators&gt;.assignmentModulo,choose[j][k] %= mod)<SUB>22</SUB>>", "155": "<(&lt;operator&gt;.indexAccess,choose[j])<SUB>22</SUB>>", "157": "<(IDENTIFIER,j,choose[j][k] %= mod)<SUB>22</SUB>>", "159": "<(IDENTIFIER,mod,choose[j][k] %= mod)<SUB>22</SUB>>", "161": "<(&lt;operator&gt;.indexAccess,choose[j][k])<SUB>23</SUB>>", "163": "<(IDENTIFIER,choose,choose[j][k] *= inv(fact[j - k]))<SUB>23</SUB>>", "165": "<(IDENTIFIER,k,choose[j][k] *= inv(fact[j - k]))<SUB>23</SUB>>", "167": "<(IDENTIFIER,this,inv(fact[j - k]))<SUB>23</SUB>>", "169": "<(IDENTIFIER,fact,inv(fact[j - k]))<SUB>23</SUB>>", "171": "<(IDENTIFIER,j,j - k)<SUB>23</SUB>>", "173": "<(&lt;operators&gt;.assignmentModulo,choose[j][k] %= mod)<SUB>24</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,choose[j])<SUB>24</SUB>>", "177": "<(IDENTIFIER,j,choose[j][k] %= mod)<SUB>24</SUB>>", "179": "<(IDENTIFIER,mod,choose[j][k] %= mod)<SUB>24</SUB>>", "181": "<(&lt;operator&gt;.assignment,long[][] dp = new long[n + 1][n + 1])<SUB>27</SUB>>", "183": "<(&lt;operator&gt;.alloc,new long[n + 1][n + 1])>", "185": "<(IDENTIFIER,n,n + 1)<SUB>27</SUB>>", "187": "<(&lt;operator&gt;.addition,n + 1)<SUB>27</SUB>>", "189": "<(LITERAL,1,n + 1)<SUB>27</SUB>>", "191": "<(LOCAL,int j: int)<SUB>28</SUB>>", "193": "<(IDENTIFIER,j,int j = 1)<SUB>28</SUB>>", "195": "<(&lt;operator&gt;.lessEqualsThan,j &lt;= n)<SUB>28</SUB>>", "197": "<(IDENTIFIER,n,j &lt;= n)<SUB>28</SUB>>", "199": "<(IDENTIFIER,j,j++)<SUB>28</SUB>>", "201": "<(&lt;operator&gt;.assignment,dp[j][0] = twopowers[j - 1])<SUB>29</SUB>>", "203": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>29</SUB>>", "205": "<(IDENTIFIER,j,dp[j][0] = twopowers[j - 1])<SUB>29</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,twopowers[j - 1])<SUB>29</SUB>>", "209": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>29</SUB>>", "211": "<(LITERAL,1,j - 1)<SUB>29</SUB>>", "213": "<(LOCAL,int k: int)<SUB>31</SUB>>", "215": "<(IDENTIFIER,k,int k = 0)<SUB>31</SUB>>", "217": "<(&lt;operator&gt;.lessThan,k &lt; n)<SUB>31</SUB>>", "219": "<(IDENTIFIER,n,k &lt; n)<SUB>31</SUB>>", "221": "<(IDENTIFIER,k,k++)<SUB>31</SUB>>", "223": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt;= n); j++),for (int j = 1; Some(j &lt;= n); j++))<SUB>32</SUB>>", "225": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>32</SUB>>", "227": "<(LITERAL,1,int j = 1)<SUB>32</SUB>>", "229": "<(IDENTIFIER,j,j &lt;= n)<SUB>32</SUB>>", "231": "<(&lt;operator&gt;.postIncrement,j++)<SUB>32</SUB>>", "233": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "235": "<(&lt;operator&gt;.greaterThan,k &gt; j)<SUB>33</SUB>>", "237": "<(IDENTIFIER,j,k &gt; j)<SUB>33</SUB>>", "239": "<(CONTROL_STRUCTURE,for (int add = 2; Some(j + add &lt;= n); add++),for (int add = 2; Some(j + add &lt;= n); add++))<SUB>35</SUB>>", "241": "<(&lt;operator&gt;.assignment,int add = 2)<SUB>35</SUB>>", "243": "<(LITERAL,2,int add = 2)<SUB>35</SUB>>", "245": "<(&lt;operator&gt;.addition,j + add)<SUB>35</SUB>>", "247": "<(IDENTIFIER,add,j + add)<SUB>35</SUB>>", "249": "<(&lt;operator&gt;.postIncrement,add++)<SUB>35</SUB>>", "251": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>35</SUB>>", "253": "<(&lt;operator&gt;.assignment,long prod = dp[j][k] * choose[j - k + add - 1][add - 1])<SUB>36</SUB>>", "255": "<(&lt;operator&gt;.multiplication,dp[j][k] * choose[j - k + add - 1][add - 1])<SUB>36</SUB>>", "257": "<(&lt;operator&gt;.indexAccess,dp[j])<SUB>36</SUB>>", "259": "<(IDENTIFIER,j,dp[j][k] * choose[j - k + add - 1][add - 1])<SUB>36</SUB>>", "261": "<(&lt;operator&gt;.indexAccess,choose[j - k + add - 1][add - 1])<SUB>36</SUB>>", "263": "<(IDENTIFIER,choose,dp[j][k] * choose[j - k + add - 1][add - 1])<SUB>36</SUB>>", "265": "<(&lt;operator&gt;.addition,j - k + add)<SUB>36</SUB>>", "267": "<(IDENTIFIER,j,j - k)<SUB>36</SUB>>", "269": "<(IDENTIFIER,add,j - k + add)<SUB>36</SUB>>", "271": "<(&lt;operator&gt;.subtraction,add - 1)<SUB>36</SUB>>", "273": "<(LITERAL,1,add - 1)<SUB>36</SUB>>", "275": "<(IDENTIFIER,prod,prod %= mod)<SUB>37</SUB>>", "277": "<(&lt;operator&gt;.assignmentMultiplication,prod *= twopowers[add - 2])<SUB>38</SUB>>", "279": "<(&lt;operator&gt;.indexAccess,twopowers[add - 2])<SUB>38</SUB>>", "281": "<(&lt;operator&gt;.subtraction,add - 2)<SUB>38</SUB>>", "283": "<(LITERAL,2,add - 2)<SUB>38</SUB>>", "285": "<(&lt;operator&gt;.indexAccess,dp[j + add][k + 1])<SUB>40</SUB>>", "287": "<(IDENTIFIER,dp,dp[j + add][k + 1] += prod)<SUB>40</SUB>>", "289": "<(IDENTIFIER,j,j + add)<SUB>40</SUB>>", "291": "<(&lt;operator&gt;.addition,k + 1)<SUB>40</SUB>>", "293": "<(LITERAL,1,k + 1)<SUB>40</SUB>>", "295": "<(&lt;operators&gt;.assignmentModulo,dp[j + add][k + 1] %= mod)<SUB>41</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,dp[j + add])<SUB>41</SUB>>", "299": "<(&lt;operator&gt;.addition,j + add)<SUB>41</SUB>>", "301": "<(IDENTIFIER,add,j + add)<SUB>41</SUB>>", "303": "<(IDENTIFIER,k,k + 1)<SUB>41</SUB>>", "305": "<(IDENTIFIER,mod,dp[j + add][k + 1] %= mod)<SUB>41</SUB>>", "307": "<(&lt;operator&gt;.assignment,long ans = 0)<SUB>45</SUB>>", "309": "<(LITERAL,0,long ans = 0)<SUB>45</SUB>>", "311": "<(LOCAL,int s: int)<SUB>46</SUB>>", "313": "<(IDENTIFIER,s,int s = 0)<SUB>46</SUB>>", "315": "<(&lt;operator&gt;.lessEqualsThan,s &lt;= n)<SUB>46</SUB>>", "317": "<(IDENTIFIER,n,s &lt;= n)<SUB>46</SUB>>", "319": "<(IDENTIFIER,s,s++)<SUB>46</SUB>>", "321": "<(&lt;operator&gt;.assignmentPlus,ans += dp[n][s])<SUB>47</SUB>>", "323": "<(&lt;operator&gt;.indexAccess,dp[n][s])<SUB>47</SUB>>", "325": "<(IDENTIFIER,dp,ans += dp[n][s])<SUB>47</SUB>>", "327": "<(IDENTIFIER,s,ans += dp[n][s])<SUB>47</SUB>>", "329": "<(IDENTIFIER,ans,ans %= mod)<SUB>48</SUB>>", "331": "<(println,println(ans))<SUB>50</SUB>>", "333": "<(IDENTIFIER,ans,println(ans))<SUB>50</SUB>>", "335": "<(IDENTIFIER,out,close())<SUB>51</SUB>>", "337": "<(MODIFIER,STATIC)>"}}