{"edges": [["19", "21"], ["19", "125"], ["19", "126"], ["19", "127"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "58"], ["21", "59"], ["21", "63"], ["21", "64"], ["21", "69"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "49"], ["39", "51"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["49", "50"], ["51", "52"], ["52", "53"], ["52", "56"], ["53", "54"], ["53", "55"], ["56", "57"], ["59", "60"], ["59", "61"], ["61", "62"], ["64", "65"], ["64", "66"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["69", "74"], ["69", "77"], ["69", "79"], ["71", "72"], ["71", "73"], ["74", "75"], ["74", "76"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "85"], ["79", "86"], ["79", "90"], ["79", "103"], ["79", "108"], ["81", "82"], ["81", "83"], ["83", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["90", "91"], ["90", "92"], ["92", "93"], ["92", "102"], ["93", "94"], ["93", "97"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "114"], ["108", "119"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["120", "121"], ["120", "124"], ["121", "122"], ["121", "123"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["59", "66"], ["64", "71"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "46"], ["44", "53"], ["44", "61"], ["49", "46"], ["61", "59"], ["66", "64"], ["71", "74"], ["74", "127"], ["74", "83"], ["77", "74"], ["28", "26"], ["46", "44"], ["52", "49"], ["81", "88"], ["86", "94"], ["90", "105"], ["103", "110"], ["53", "56"], ["56", "52"], ["83", "81"], ["88", "86"], ["92", "90"], ["105", "103"], ["109", "117"], ["109", "123"], ["114", "77"], ["93", "92"], ["110", "109"], ["115", "114"], ["120", "77"], ["94", "98"], ["97", "93"], ["117", "115"], ["121", "120"], ["98", "97"], ["123", "121"], ["19", "24"], ["20", "127"], ["22", "127"], ["25", "127"], ["25", "127"], ["30", "127"], ["35", "127"], ["35", "127"], ["41", "127"], ["46", "127"], ["44", "127"], ["44", "127"], ["61", "127"], ["59", "127"], ["59", "127"], ["64", "127"], ["66", "127"], ["64", "127"], ["64", "127"], ["71", "127"], ["74", "127"], ["74", "127"], ["74", "127"], ["77", "127"], ["49", "127"], ["66", "127"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["61", "59"], ["66", "64"], ["66", "64"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "71"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["49", "44"], ["19", "44"], ["46", "44"], ["46", "44"], ["44", "49"], ["19", "49"], ["56", "52"], ["32", "61"], ["56", "61"], ["19", "61"], ["19", "66"], ["35", "66"], ["52", "66"], ["71", "74"], ["77", "74"], ["19", "74"], ["59", "74"], ["74", "77"], ["19", "77"], ["83", "81"], ["88", "86"], ["92", "90"], ["92", "90"], ["105", "103"], ["105", "103"], ["37", "46"], ["19", "46"], ["64", "90"], ["110", "90"], ["19", "90"], ["32", "56"], ["19", "56"], ["61", "83"], ["88", "83"], ["19", "83"], ["83", "88"], ["19", "88"], ["93", "92"], ["93", "92"], ["19", "92"], ["90", "105"], ["19", "105"], ["110", "109"], ["110", "109"], ["19", "109"], ["120", "114"], ["19", "114"], ["94", "93"], ["94", "93"], ["98", "93"], ["98", "93"], ["19", "93"], ["103", "110"], ["19", "110"], ["114", "120"], ["19", "120"], ["86", "94"], ["19", "94"], ["81", "94"], ["98", "97"], ["98", "97"], ["19", "97"], ["94", "98"], ["19", "98"], ["94", "98"], ["44", "49"], ["44", "52"], ["44", "46"], ["44", "56"], ["44", "44"], ["44", "53"], ["74", "94"], ["74", "77"], ["74", "98"], ["74", "81"], ["74", "103"], ["74", "74"], ["74", "92"], ["74", "97"], ["74", "93"], ["74", "90"], ["74", "83"], ["74", "105"], ["74", "88"], ["74", "110"], ["74", "109"], ["74", "86"], ["109", "115"], ["109", "120"], ["109", "114"], ["109", "121"], ["109", "123"], ["109", "117"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] array = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt;= n - 1); i++),for (int i = 0; Some(i &lt;= n - 1); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt;= n - 1)<SUB>5</SUB>>", "47": "<(IDENTIFIER,n,n - 1)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "51": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.indexAccess,array[i])<SUB>6</SUB>>", "55": "<(IDENTIFIER,i,array[i] = nextInt())<SUB>6</SUB>>", "57": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "59": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>8</SUB>>", "61": "<(nextInt,nextInt())<SUB>8</SUB>>", "63": "<(LOCAL,int result: int)<SUB>9</SUB>>", "65": "<(IDENTIFIER,result,int result = count(array))<SUB>9</SUB>>", "67": "<(IDENTIFIER,this,count(array))<SUB>9</SUB>>", "69": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= m); i++),for (int i = 1; Some(i &lt;= m); i++))<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>10</SUB>>", "73": "<(LITERAL,1,int i = 1)<SUB>10</SUB>>", "75": "<(IDENTIFIER,i,i &lt;= m)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "79": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "81": "<(&lt;operator&gt;.assignment,int a = nextInt())<SUB>11</SUB>>", "83": "<(nextInt,nextInt())<SUB>11</SUB>>", "85": "<(LOCAL,int b: int)<SUB>12</SUB>>", "87": "<(IDENTIFIER,b,int b = nextInt())<SUB>12</SUB>>", "89": "<(IDENTIFIER,sc,nextInt())<SUB>12</SUB>>", "91": "<(IDENTIFIER,result,result += (b - a) * (b - a + 1) / 2)<SUB>13</SUB>>", "93": "<(&lt;operator&gt;.multiplication,(b - a) * (b - a + 1))<SUB>13</SUB>>", "95": "<(IDENTIFIER,b,b - a)<SUB>13</SUB>>", "97": "<(&lt;operator&gt;.addition,b - a + 1)<SUB>13</SUB>>", "99": "<(IDENTIFIER,b,b - a)<SUB>13</SUB>>", "101": "<(LITERAL,1,b - a + 1)<SUB>13</SUB>>", "103": "<(&lt;operator&gt;.assignment,result = result % 2)<SUB>14</SUB>>", "105": "<(&lt;operator&gt;.modulo,result % 2)<SUB>14</SUB>>", "107": "<(LITERAL,2,result % 2)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.equals,result % 2 == 1)<SUB>15</SUB>>", "111": "<(IDENTIFIER,result,result % 2)<SUB>15</SUB>>", "113": "<(LITERAL,1,result % 2 == 1)<SUB>15</SUB>>", "115": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>16</SUB>>", "117": "<(FIELD_IDENTIFIER,out,out)<SUB>16</SUB>>", "119": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "121": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>18</SUB>>", "123": "<(FIELD_IDENTIFIER,out,out)<SUB>18</SUB>>", "125": "<(MODIFIER,PUBLIC)>", "127": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}