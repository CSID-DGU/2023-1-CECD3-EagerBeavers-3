{"edges": [["23", "25"], ["23", "283"], ["23", "284"], ["23", "285"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "61"], ["25", "281"], ["26", "27"], ["26", "28"], ["29", "3"], ["29", "30"], ["30", "31"], ["30", "34"], ["30", "39"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["43", "5"], ["43", "44"], ["44", "45"], ["44", "48"], ["44", "60"], ["45", "46"], ["45", "47"], ["48", "49"], ["48", "50"], ["50", "51"], ["50", "54"], ["50", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["56", "57"], ["56", "58"], ["61", "62"], ["61", "64"], ["62", "63"], ["64", "65"], ["64", "66"], ["64", "67"], ["64", "68"], ["64", "69"], ["64", "73"], ["64", "77"], ["64", "81"], ["64", "84"], ["64", "85"], ["64", "8"], ["64", "89"], ["64", "92"], ["64", "93"], ["64", "116"], ["64", "134"], ["64", "135"], ["64", "138"], ["64", "139"], ["64", "143"], ["64", "229"], ["64", "279"], ["69", "70"], ["69", "71"], ["71", "72"], ["73", "74"], ["73", "75"], ["75", "76"], ["77", "78"], ["77", "79"], ["79", "80"], ["81", "82"], ["81", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "91"], ["92", "7"], ["93", "94"], ["93", "95"], ["93", "98"], ["93", "101"], ["93", "103"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["101", "102"], ["103", "104"], ["103", "110"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "112"], ["110", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "131"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["135", "136"], ["135", "137"], ["139", "140"], ["139", "141"], ["141", "142"], ["143", "144"], ["143", "150"], ["144", "145"], ["144", "146"], ["146", "147"], ["146", "149"], ["147", "148"], ["150", "151"], ["150", "152"], ["150", "156"], ["150", "157"], ["150", "161"], ["150", "162"], ["150", "166"], ["152", "153"], ["152", "154"], ["154", "155"], ["157", "158"], ["157", "159"], ["159", "160"], ["162", "163"], ["162", "164"], ["164", "165"], ["166", "167"], ["166", "172"], ["166", "195"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "171"], ["172", "173"], ["172", "178"], ["172", "187"], ["172", "190"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "186"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["187", "188"], ["187", "189"], ["190", "191"], ["190", "192"], ["192", "193"], ["192", "194"], ["195", "196"], ["196", "197"], ["196", "202"], ["196", "225"], ["197", "198"], ["197", "199"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "208"], ["202", "217"], ["202", "220"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["208", "209"], ["208", "216"], ["209", "210"], ["209", "211"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "215"], ["217", "218"], ["217", "219"], ["220", "221"], ["220", "222"], ["222", "223"], ["222", "224"], ["225", "226"], ["226", "227"], ["226", "228"], ["229", "230"], ["229", "232"], ["229", "237"], ["230", "231"], ["232", "233"], ["232", "236"], ["233", "234"], ["233", "235"], ["237", "238"], ["238", "239"], ["238", "244"], ["238", "275"], ["239", "240"], ["239", "243"], ["240", "241"], ["240", "242"], ["244", "245"], ["244", "246"], ["244", "249"], ["244", "254"], ["244", "256"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["254", "255"], ["256", "257"], ["256", "266"], ["257", "258"], ["257", "261"], ["258", "259"], ["258", "260"], ["261", "262"], ["261", "265"], ["262", "263"], ["262", "264"], ["266", "267"], ["266", "270"], ["267", "268"], ["267", "269"], ["270", "271"], ["270", "272"], ["272", "273"], ["272", "274"], ["275", "276"], ["276", "277"], ["276", "278"], ["279", "280"], ["281", "282"], ["26", "33"], ["29", "42"], ["40", "47"], ["43", "62"], ["281", "285"], ["28", "26"], ["42", "40"], ["62", "71"], ["62", "281"], ["31", "38"], ["34", "29"], ["45", "53"], ["48", "43"], ["69", "75"], ["73", "79"], ["77", "81"], ["81", "87"], ["85", "91"], ["89", "92"], ["92", "95"], ["135", "141"], ["139", "144"], ["139", "147"], ["279", "62"], ["33", "31"], ["36", "34"], ["47", "45"], ["71", "69"], ["75", "73"], ["79", "77"], ["87", "85"], ["91", "89"], ["95", "98"], ["98", "105"], ["98", "117"], ["101", "98"], ["117", "122"], ["117", "135"], ["141", "139"], ["144", "154"], ["144", "230"], ["230", "235"], ["230", "242"], ["232", "279"], ["38", "36"], ["51", "58"], ["54", "48"], ["104", "112"], ["110", "101"], ["122", "125"], ["125", "128"], ["128", "131"], ["131", "135"], ["146", "144"], ["152", "159"], ["157", "164"], ["162", "169"], ["233", "232"], ["53", "51"], ["56", "54"], ["105", "108"], ["108", "104"], ["112", "110"], ["147", "146"], ["154", "152"], ["159", "157"], ["164", "162"], ["167", "174"], ["167", "199"], ["235", "233"], ["239", "246"], ["275", "279"], ["58", "56"], ["169", "167"], ["173", "183"], ["178", "187"], ["187", "192"], ["190", "144"], ["190", "147"], ["240", "239"], ["246", "253"], ["249", "258"], ["249", "278"], ["254", "253"], ["276", "275"], ["174", "173"], ["179", "178"], ["192", "190"], ["197", "204"], ["197", "226"], ["242", "240"], ["251", "249"], ["266", "254"], ["278", "276"], ["181", "179"], ["199", "197"], ["203", "213"], ["208", "217"], ["217", "222"], ["220", "144"], ["220", "147"], ["226", "144"], ["226", "147"], ["253", "251"], ["258", "264"], ["258", "269"], ["261", "269"], ["267", "272"], ["270", "266"], ["183", "181"], ["204", "203"], ["209", "208"], ["222", "220"], ["262", "261"], ["269", "267"], ["272", "270"], ["211", "209"], ["264", "262"], ["213", "211"], ["23", "28"], ["24", "285"], ["26", "285"], ["34", "285"], ["34", "285"], ["34", "285"], ["29", "285"], ["40", "285"], ["43", "285"], ["48", "285"], ["51", "285"], ["54", "285"], ["54", "285"], ["54", "285"], ["48", "285"], ["43", "285"], ["62", "285"], ["281", "285"], ["281", "285"], ["69", "285"], ["73", "285"], ["77", "285"], ["77", "285"], ["81", "285"], ["81", "285"], ["85", "285"], ["85", "285"], ["89", "285"], ["92", "285"], ["92", "285"], ["95", "285"], ["98", "285"], ["98", "285"], ["117", "285"], ["117", "285"], ["117", "285"], ["122", "285"], ["125", "285"], ["125", "285"], ["128", "285"], ["128", "285"], ["128", "285"], ["131", "285"], ["131", "285"], ["135", "285"], ["139", "285"], ["141", "285"], ["139", "285"], ["139", "285"], ["147", "285"], ["146", "285"], ["144", "285"], ["144", "285"], ["230", "285"], ["230", "285"], ["246", "285"], ["249", "285"], ["249", "285"], ["249", "285"], ["275", "285"], ["275", "285"], ["258", "285"], ["261", "285"], ["270", "285"], ["270", "285"], ["266", "285"], ["266", "285"], ["254", "285"], ["232", "285"], ["279", "285"], ["279", "285"], ["152", "285"], ["152", "285"], ["157", "285"], ["157", "285"], ["162", "285"], ["164", "285"], ["162", "285"], ["162", "285"], ["169", "285"], ["167", "285"], ["167", "285"], ["197", "285"], ["199", "285"], ["199", "285"], ["197", "285"], ["197", "285"], ["226", "285"], ["203", "285"], ["203", "285"], ["208", "285"], ["208", "285"], ["217", "285"], ["220", "285"], ["222", "285"], ["222", "285"], ["220", "285"], ["220", "285"], ["173", "285"], ["173", "285"], ["178", "285"], ["178", "285"], ["187", "285"], ["190", "285"], ["192", "285"], ["192", "285"], ["190", "285"], ["190", "285"], ["104", "285"], ["104", "285"], ["110", "285"], ["110", "285"], ["110", "285"], ["101", "285"], ["23", "24"], ["23", "26"], ["23", "40"], ["26", "29"], ["23", "29"], ["31", "29"], ["34", "29"], ["40", "43"], ["23", "43"], ["51", "43"], ["48", "43"], ["62", "281"], ["23", "281"], ["23", "31"], ["23", "39"], ["23", "45"], ["23", "60"], ["29", "62"], ["79", "62"], ["108", "62"], ["23", "62"], ["71", "69"], ["75", "73"], ["79", "77"], ["23", "81"], ["87", "85"], ["23", "89"], ["23", "135"], ["141", "139"], ["31", "34"], ["23", "34"], ["45", "48"], ["23", "48"], ["51", "48"], ["54", "48"], ["89", "92"], ["23", "92"], ["23", "95"], ["43", "279"], ["23", "279"], ["23", "51"], ["23", "59"], ["62", "71"], ["23", "71"], ["71", "75"], ["23", "75"], ["75", "79"], ["23", "79"], ["69", "87"], ["23", "87"], ["95", "98"], ["101", "98"], ["23", "98"], ["87", "98"], ["110", "101"], ["23", "101"], ["108", "104"], ["73", "117"], ["23", "117"], ["77", "117"], ["117", "122"], ["23", "122"], ["117", "125"], ["23", "125"], ["122", "128"], ["23", "128"], ["23", "131"], ["98", "141"], ["23", "141"], ["135", "144"], ["226", "144"], ["23", "144"], ["146", "144"], ["146", "144"], ["154", "152"], ["159", "157"], ["164", "162"], ["144", "230"], ["23", "230"], ["54", "232"], ["275", "232"], ["23", "232"], ["51", "54"], ["23", "54"], ["92", "110"], ["23", "110"], ["85", "110"], ["104", "110"], ["98", "110"], ["147", "146"], ["23", "146"], ["79", "108"], ["23", "108"], ["92", "147"], ["197", "147"], ["220", "147"], ["190", "147"], ["110", "147"], ["23", "147"], ["92", "154"], ["147", "154"], ["197", "154"], ["220", "154"], ["190", "154"], ["110", "154"], ["23", "154"], ["152", "159"], ["23", "159"], ["159", "164"], ["23", "164"], ["154", "167"], ["23", "167"], ["169", "167"], ["169", "167"], ["23", "173"], ["23", "178"], ["54", "239"], ["275", "239"], ["232", "239"], ["23", "239"], ["23", "246"], ["239", "275"], ["266", "275"], ["117", "169"], ["128", "169"], ["192", "169"], ["23", "169"], ["157", "169"], ["181", "187"], ["23", "187"], ["183", "187"], ["187", "190"], ["23", "190"], ["192", "190"], ["192", "190"], ["246", "249"], ["254", "249"], ["23", "249"], ["139", "249"], ["258", "254"], ["23", "254"], ["183", "192"], ["23", "192"], ["187", "192"], ["167", "197"], ["23", "197"], ["199", "197"], ["199", "197"], ["23", "203"], ["23", "208"], ["23", "226"], ["239", "266"], ["261", "266"], ["270", "266"], ["270", "266"], ["167", "181"], ["23", "181"], ["183", "181"], ["183", "181"], ["117", "199"], ["125", "199"], ["222", "199"], ["23", "199"], ["169", "199"], ["211", "217"], ["23", "217"], ["213", "217"], ["217", "220"], ["23", "220"], ["222", "220"], ["222", "220"], ["249", "258"], ["23", "258"], ["239", "261"], ["266", "261"], ["23", "261"], ["81", "270"], ["131", "270"], ["23", "270"], ["139", "270"], ["169", "183"], ["23", "183"], ["169", "183"], ["213", "222"], ["23", "222"], ["217", "222"], ["197", "211"], ["23", "211"], ["213", "211"], ["213", "211"], ["199", "213"], ["23", "213"], ["199", "213"], ["62", "73"], ["62", "77"], ["62", "230"], ["62", "98"], ["62", "75"], ["62", "81"], ["62", "85"], ["62", "69"], ["62", "279"], ["62", "95"], ["62", "92"], ["62", "87"], ["62", "144"], ["62", "91"], ["62", "79"], ["62", "139"], ["62", "141"], ["62", "89"], ["62", "71"], ["62", "135"], ["62", "117"], ["62", "62"], ["62", "146"], ["62", "147"], ["98", "98"], ["98", "104"], ["98", "112"], ["98", "101"], ["98", "108"], ["98", "105"], ["98", "110"], ["117", "128"], ["117", "131"], ["117", "122"], ["117", "125"], ["144", "167"], ["144", "154"], ["144", "169"], ["144", "162"], ["144", "144"], ["144", "152"], ["144", "164"], ["144", "157"], ["144", "159"], ["144", "146"], ["144", "147"], ["230", "240"], ["230", "232"], ["230", "275"], ["230", "242"], ["230", "246"], ["230", "276"], ["230", "233"], ["230", "249"], ["230", "239"], ["230", "235"], ["230", "251"], ["230", "253"], ["230", "278"], ["167", "192"], ["167", "179"], ["167", "178"], ["167", "197"], ["167", "181"], ["167", "187"], ["167", "190"], ["167", "173"], ["167", "174"], ["167", "183"], ["167", "199"], ["249", "272"], ["249", "267"], ["249", "258"], ["249", "249"], ["249", "270"], ["249", "251"], ["249", "253"], ["249", "254"], ["249", "269"], ["249", "266"], ["197", "209"], ["197", "226"], ["197", "213"], ["197", "204"], ["197", "208"], ["197", "217"], ["197", "220"], ["197", "211"], ["197", "203"], ["197", "222"], ["258", "261"], ["258", "262"], ["258", "264"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY in = new Scanner(new BufferedInputStream(System.in)))<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.alloc,new Scanner(new BufferedInputStream(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new Scanner(new BufferedInputStream(System.in)))<SUB>3</SUB>>", "31": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "33": "<(&lt;operator&gt;.alloc,new BufferedInputStream(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,new BufferedInputStream(System.in))>", "37": "<(IDENTIFIER,System,new BufferedInputStream(System.in))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "40": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "42": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedWriter(new OutputStreamWriter(System.out))))<SUB>4</SUB>>", "45": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "47": "<(&lt;operator&gt;.alloc,new BufferedWriter(new OutputStreamWriter(System.out)))<SUB>4</SUB>>", "49": "<(IDENTIFIER,$obj3,new BufferedWriter(new OutputStreamWriter(System.out)))>", "51": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "53": "<(&lt;operator&gt;.alloc,new OutputStreamWriter(System.out))<SUB>5</SUB>>", "55": "<(IDENTIFIER,$obj2,new OutputStreamWriter(System.out))>", "57": "<(IDENTIFIER,System,new OutputStreamWriter(System.out))<SUB>5</SUB>>", "59": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "61": "<(CONTROL_STRUCTURE,while (in.hasNext()),while (in.hasNext()))<SUB>7</SUB>>", "63": "<(IDENTIFIER,in,hasNext())<SUB>7</SUB>>", "65": "<(LOCAL,int n: int)<SUB>8</SUB>>", "67": "<(LOCAL,int b: int)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>8</SUB>>", "71": "<(nextInt,nextInt())<SUB>8</SUB>>", "73": "<(&lt;operator&gt;.assignment,int a = nextInt())<SUB>8</SUB>>", "75": "<(nextInt,nextInt())<SUB>8</SUB>>", "77": "<(&lt;operator&gt;.assignment,int b = nextInt())<SUB>8</SUB>>", "79": "<(nextInt,nextInt())<SUB>8</SUB>>", "81": "<(&lt;operator&gt;.assignment,int c = 0)<SUB>8</SUB>>", "83": "<(LITERAL,0,int c = 0)<SUB>8</SUB>>", "85": "<(&lt;operator&gt;.assignment,int[] p = new int[n])<SUB>9</SUB>>", "87": "<(&lt;operator&gt;.alloc,new int[n])>", "8": "<(LOCAL,TreeMap&lt;Integer, Integer&gt; map: ANY)<SUB>11</SUB>>", "90": "<(IDENTIFIER,map,ANY map = new TreeMap&lt;Integer, Integer&gt;())<SUB>11</SUB>>", "92": "<(&lt;init&gt;,new TreeMap&lt;Integer, Integer&gt;())<SUB>11</SUB>>", "93": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>12</SUB>>", "97": "<(LITERAL,0,int i = 0)<SUB>12</SUB>>", "99": "<(IDENTIFIER,i,i &lt; n)<SUB>12</SUB>>", "101": "<(&lt;operator&gt;.postIncrement,i++)<SUB>12</SUB>>", "103": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,p[i])<SUB>13</SUB>>", "107": "<(IDENTIFIER,i,p[i] = nextInt())<SUB>13</SUB>>", "109": "<(IDENTIFIER,in,nextInt())<SUB>13</SUB>>", "111": "<(IDENTIFIER,map,put(p[i], i))<SUB>14</SUB>>", "113": "<(IDENTIFIER,p,put(p[i], i))<SUB>14</SUB>>", "115": "<(IDENTIFIER,i,put(p[i], i))<SUB>14</SUB>>", "117": "<(&lt;operator&gt;.greaterThan,a &gt; b)<SUB>17</SUB>>", "119": "<(IDENTIFIER,b,a &gt; b)<SUB>17</SUB>>", "121": "<(LOCAL,int t: int)<SUB>18</SUB>>", "123": "<(IDENTIFIER,t,int t = b)<SUB>18</SUB>>", "125": "<(&lt;operator&gt;.assignment,b = a)<SUB>19</SUB>>", "127": "<(IDENTIFIER,a,b = a)<SUB>19</SUB>>", "129": "<(IDENTIFIER,a,a = t)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.assignment,c = 1)<SUB>21</SUB>>", "133": "<(LITERAL,1,c = 1)<SUB>21</SUB>>", "135": "<(&lt;operator&gt;.assignment,boolean ok = true)<SUB>24</SUB>>", "137": "<(LITERAL,true,boolean ok = true)<SUB>24</SUB>>", "139": "<(&lt;operator&gt;.assignment,int[] cls = new int[n])<SUB>25</SUB>>", "141": "<(&lt;operator&gt;.alloc,new int[n])>", "143": "<(CONTROL_STRUCTURE,while (ok &amp;&amp; map.size() &gt; 0),while (ok &amp;&amp; map.size() &gt; 0))<SUB>26</SUB>>", "145": "<(IDENTIFIER,ok,ok &amp;&amp; map.size() &gt; 0)<SUB>26</SUB>>", "147": "<(size,size())<SUB>26</SUB>>", "149": "<(LITERAL,0,map.size() &gt; 0)<SUB>26</SUB>>", "151": "<(LOCAL,Entry&lt;Integer, Integer&gt; last: ANY)<SUB>27</SUB>>", "153": "<(IDENTIFIER,last,ANY last = lastEntry())<SUB>27</SUB>>", "155": "<(IDENTIFIER,map,lastEntry())<SUB>27</SUB>>", "157": "<(&lt;operator&gt;.assignment,int v = getKey())<SUB>28</SUB>>", "159": "<(getKey,getKey())<SUB>28</SUB>>", "161": "<(LOCAL,int idx: int)<SUB>29</SUB>>", "163": "<(IDENTIFIER,idx,int idx = getValue())<SUB>29</SUB>>", "165": "<(IDENTIFIER,last,getValue())<SUB>29</SUB>>", "167": "<(containsKey,containsKey(a - v))<SUB>30</SUB>>", "169": "<(&lt;operator&gt;.subtraction,a - v)<SUB>30</SUB>>", "171": "<(IDENTIFIER,v,a - v)<SUB>30</SUB>>", "173": "<(&lt;operator&gt;.assignment,cls[idx] = 0)<SUB>31</SUB>>", "175": "<(IDENTIFIER,cls,cls[idx] = 0)<SUB>31</SUB>>", "177": "<(LITERAL,0,cls[idx] = 0)<SUB>31</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,cls[map.get(a - v)])<SUB>32</SUB>>", "181": "<(get,get(a - v))<SUB>32</SUB>>", "183": "<(&lt;operator&gt;.subtraction,a - v)<SUB>32</SUB>>", "185": "<(IDENTIFIER,v,a - v)<SUB>32</SUB>>", "187": "<(remove,remove(v))<SUB>33</SUB>>", "189": "<(IDENTIFIER,v,remove(v))<SUB>33</SUB>>", "191": "<(IDENTIFIER,map,remove(a - v))<SUB>34</SUB>>", "193": "<(IDENTIFIER,a,a - v)<SUB>34</SUB>>", "195": "<(CONTROL_STRUCTURE,else,else)<SUB>35</SUB>>", "197": "<(containsKey,containsKey(b - v))<SUB>35</SUB>>", "199": "<(&lt;operator&gt;.subtraction,b - v)<SUB>35</SUB>>", "201": "<(IDENTIFIER,v,b - v)<SUB>35</SUB>>", "203": "<(&lt;operator&gt;.assignment,cls[idx] = 1)<SUB>36</SUB>>", "205": "<(IDENTIFIER,cls,cls[idx] = 1)<SUB>36</SUB>>", "207": "<(LITERAL,1,cls[idx] = 1)<SUB>36</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,cls[map.get(b - v)])<SUB>37</SUB>>", "211": "<(get,get(b - v))<SUB>37</SUB>>", "213": "<(&lt;operator&gt;.subtraction,b - v)<SUB>37</SUB>>", "215": "<(IDENTIFIER,v,b - v)<SUB>37</SUB>>", "217": "<(remove,remove(v))<SUB>38</SUB>>", "219": "<(IDENTIFIER,v,remove(v))<SUB>38</SUB>>", "221": "<(IDENTIFIER,map,remove(b - v))<SUB>39</SUB>>", "223": "<(IDENTIFIER,b,b - v)<SUB>39</SUB>>", "225": "<(CONTROL_STRUCTURE,else,else)<SUB>41</SUB>>", "227": "<(IDENTIFIER,ok,ok = false)<SUB>41</SUB>>", "229": "<(CONTROL_STRUCTURE,if (!ok),if (!ok))<SUB>44</SUB>>", "231": "<(IDENTIFIER,ok,!ok)<SUB>44</SUB>>", "233": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>45</SUB>>", "235": "<(FIELD_IDENTIFIER,out,out)<SUB>45</SUB>>", "237": "<(CONTROL_STRUCTURE,else,else)<SUB>46</SUB>>", "239": "<(println,System.out.println(&quot;YES&quot;))<SUB>47</SUB>>", "241": "<(IDENTIFIER,System,System.out.println(&quot;YES&quot;))<SUB>47</SUB>>", "243": "<(LITERAL,&quot;YES&quot;,System.out.println(&quot;YES&quot;))<SUB>47</SUB>>", "245": "<(LOCAL,int j: int)<SUB>48</SUB>>", "247": "<(IDENTIFIER,j,int j = 0)<SUB>48</SUB>>", "249": "<(&lt;operator&gt;.lessThan,j &lt; cls.length)<SUB>48</SUB>>", "251": "<(&lt;operator&gt;.fieldAccess,cls.length)<SUB>48</SUB>>", "253": "<(FIELD_IDENTIFIER,length,length)<SUB>48</SUB>>", "255": "<(IDENTIFIER,j,j++)<SUB>48</SUB>>", "257": "<(CONTROL_STRUCTURE,if (j != 0),if (j != 0))<SUB>49</SUB>>", "259": "<(IDENTIFIER,j,j != 0)<SUB>49</SUB>>", "261": "<(print,System.out.print(&quot; &quot;))<SUB>50</SUB>>", "263": "<(IDENTIFIER,System,System.out.print(&quot; &quot;))<SUB>50</SUB>>", "265": "<(LITERAL,&quot; &quot;,System.out.print(&quot; &quot;))<SUB>50</SUB>>", "267": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>51</SUB>>", "269": "<(FIELD_IDENTIFIER,out,out)<SUB>51</SUB>>", "271": "<(IDENTIFIER,c,c ^ cls[j])<SUB>51</SUB>>", "273": "<(IDENTIFIER,cls,c ^ cls[j])<SUB>51</SUB>>", "275": "<(println,System.out.println())<SUB>53</SUB>>", "277": "<(IDENTIFIER,System,System.out.println())<SUB>53</SUB>>", "279": "<(flush,flush())<SUB>55</SUB>>", "281": "<(close,close())<SUB>57</SUB>>", "283": "<(MODIFIER,PUBLIC)>", "285": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}