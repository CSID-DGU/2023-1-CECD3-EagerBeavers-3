{"edges": [["23", "24"], ["23", "25"], ["23", "576"], ["23", "577"], ["23", "578"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "30"], ["25", "31"], ["25", "35"], ["25", "36"], ["25", "6"], ["25", "40"], ["25", "43"], ["25", "44"], ["25", "45"], ["25", "49"], ["25", "50"], ["25", "53"], ["25", "118"], ["25", "131"], ["25", "132"], ["25", "137"], ["25", "138"], ["25", "142"], ["25", "143"], ["25", "147"], ["25", "310"], ["25", "311"], ["25", "317"], ["25", "318"], ["25", "324"], ["25", "325"], ["25", "331"], ["25", "336"], ["25", "411"], ["25", "427"], ["25", "8"], ["25", "432"], ["25", "435"], ["25", "436"], ["25", "437"], ["25", "444"], ["25", "471"], ["25", "472"], ["25", "476"], ["25", "477"], ["25", "481"], ["25", "482"], ["25", "486"], ["25", "550"], ["26", "27"], ["26", "28"], ["29", "3"], ["31", "32"], ["31", "33"], ["33", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["40", "41"], ["40", "42"], ["43", "5"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["53", "58"], ["53", "61"], ["53", "63"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["63", "64"], ["63", "65"], ["63", "69"], ["63", "75"], ["63", "113"], ["65", "66"], ["65", "67"], ["67", "68"], ["69", "70"], ["69", "73"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "94"], ["85", "104"], ["86", "87"], ["86", "92"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "103"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["104", "105"], ["104", "108"], ["105", "106"], ["105", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "124"], ["119", "120"], ["119", "123"], ["120", "121"], ["120", "122"], ["124", "125"], ["124", "130"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["140", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["147", "148"], ["147", "149"], ["147", "152"], ["147", "155"], ["147", "157"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["155", "156"], ["157", "158"], ["157", "168"], ["157", "178"], ["157", "205"], ["157", "206"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["162", "163"], ["163", "164"], ["163", "167"], ["164", "165"], ["164", "166"], ["168", "169"], ["168", "172"], ["169", "170"], ["169", "171"], ["172", "173"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["178", "179"], ["178", "180"], ["178", "183"], ["178", "190"], ["178", "192"], ["180", "181"], ["180", "182"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "189"], ["186", "187"], ["186", "188"], ["190", "191"], ["192", "193"], ["192", "198"], ["193", "194"], ["193", "197"], ["194", "195"], ["194", "196"], ["198", "199"], ["198", "202"], ["198", "204"], ["199", "200"], ["199", "201"], ["202", "203"], ["206", "207"], ["206", "208"], ["206", "211"], ["206", "218"], ["206", "220"], ["208", "209"], ["208", "210"], ["211", "212"], ["211", "213"], ["213", "214"], ["213", "217"], ["214", "215"], ["214", "216"], ["218", "219"], ["220", "221"], ["220", "222"], ["220", "223"], ["220", "230"], ["220", "239"], ["220", "248"], ["220", "249"], ["220", "254"], ["220", "303"], ["223", "224"], ["223", "225"], ["225", "226"], ["225", "229"], ["226", "227"], ["226", "228"], ["230", "231"], ["230", "232"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "238"], ["235", "236"], ["235", "237"], ["239", "240"], ["239", "245"], ["240", "241"], ["240", "244"], ["241", "242"], ["241", "243"], ["245", "246"], ["245", "247"], ["249", "250"], ["249", "251"], ["251", "252"], ["251", "253"], ["254", "255"], ["254", "258"], ["255", "256"], ["255", "257"], ["258", "259"], ["258", "265"], ["258", "266"], ["258", "271"], ["258", "280"], ["258", "285"], ["258", "294"], ["259", "260"], ["259", "264"], ["260", "261"], ["261", "262"], ["261", "263"], ["266", "267"], ["266", "268"], ["268", "269"], ["268", "270"], ["271", "272"], ["271", "279"], ["272", "273"], ["272", "278"], ["273", "274"], ["273", "275"], ["275", "276"], ["275", "277"], ["280", "281"], ["280", "282"], ["282", "283"], ["282", "284"], ["285", "286"], ["285", "287"], ["287", "288"], ["287", "289"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["294", "295"], ["294", "300"], ["295", "296"], ["295", "299"], ["296", "297"], ["296", "298"], ["300", "301"], ["300", "302"], ["303", "304"], ["303", "309"], ["304", "305"], ["304", "308"], ["305", "306"], ["305", "307"], ["311", "312"], ["311", "313"], ["313", "314"], ["314", "315"], ["314", "316"], ["318", "319"], ["318", "320"], ["320", "321"], ["321", "322"], ["321", "323"], ["325", "326"], ["325", "327"], ["327", "328"], ["328", "329"], ["328", "330"], ["331", "332"], ["331", "335"], ["332", "333"], ["332", "334"], ["336", "337"], ["336", "338"], ["336", "341"], ["336", "346"], ["336", "348"], ["338", "339"], ["338", "340"], ["341", "342"], ["341", "343"], ["343", "344"], ["343", "345"], ["346", "347"], ["348", "349"], ["348", "350"], ["348", "357"], ["350", "351"], ["350", "352"], ["352", "353"], ["352", "354"], ["354", "355"], ["354", "356"], ["357", "358"], ["357", "359"], ["357", "362"], ["357", "369"], ["357", "371"], ["359", "360"], ["359", "361"], ["362", "363"], ["362", "364"], ["364", "365"], ["364", "368"], ["365", "366"], ["365", "367"], ["369", "370"], ["371", "372"], ["371", "373"], ["371", "380"], ["373", "374"], ["373", "375"], ["375", "376"], ["375", "379"], ["376", "377"], ["376", "378"], ["380", "381"], ["380", "392"], ["381", "382"], ["381", "387"], ["382", "383"], ["382", "386"], ["383", "384"], ["383", "385"], ["387", "388"], ["387", "389"], ["389", "390"], ["389", "391"], ["392", "393"], ["392", "398"], ["392", "405"], ["392", "410"], ["393", "394"], ["393", "397"], ["394", "395"], ["394", "396"], ["398", "399"], ["398", "402"], ["399", "400"], ["399", "401"], ["402", "403"], ["402", "404"], ["405", "406"], ["405", "409"], ["406", "407"], ["406", "408"], ["411", "412"], ["411", "420"], ["412", "413"], ["413", "414"], ["413", "415"], ["415", "416"], ["415", "419"], ["416", "417"], ["416", "418"], ["420", "421"], ["420", "426"], ["421", "422"], ["421", "425"], ["422", "423"], ["422", "424"], ["427", "428"], ["427", "431"], ["428", "429"], ["428", "430"], ["432", "433"], ["432", "434"], ["435", "7"], ["437", "438"], ["437", "439"], ["439", "440"], ["439", "443"], ["440", "441"], ["440", "442"], ["444", "445"], ["444", "448"], ["445", "446"], ["445", "447"], ["448", "449"], ["448", "450"], ["448", "457"], ["448", "466"], ["450", "451"], ["450", "452"], ["452", "453"], ["452", "454"], ["454", "455"], ["454", "456"], ["457", "458"], ["457", "459"], ["459", "460"], ["459", "463"], ["460", "461"], ["460", "462"], ["463", "464"], ["463", "465"], ["466", "467"], ["466", "468"], ["468", "469"], ["468", "470"], ["472", "473"], ["472", "474"], ["474", "475"], ["477", "478"], ["477", "479"], ["479", "480"], ["482", "483"], ["482", "484"], ["484", "485"], ["486", "487"], ["486", "489"], ["487", "488"], ["489", "490"], ["489", "491"], ["489", "495"], ["491", "492"], ["491", "493"], ["493", "494"], ["495", "496"], ["495", "497"], ["495", "500"], ["495", "504"], ["495", "506"], ["497", "498"], ["497", "499"], ["500", "501"], ["500", "502"], ["502", "503"], ["504", "505"], ["506", "507"], ["506", "508"], ["506", "509"], ["506", "514"], ["506", "524"], ["506", "525"], ["506", "526"], ["506", "533"], ["506", "540"], ["506", "545"], ["509", "510"], ["509", "511"], ["511", "512"], ["511", "513"], ["514", "515"], ["514", "516"], ["516", "517"], ["516", "518"], ["518", "519"], ["518", "522"], ["519", "520"], ["519", "521"], ["522", "523"], ["526", "527"], ["526", "528"], ["528", "529"], ["528", "530"], ["530", "531"], ["530", "532"], ["533", "534"], ["533", "535"], ["535", "536"], ["535", "537"], ["537", "538"], ["537", "539"], ["540", "541"], ["540", "544"], ["541", "542"], ["541", "543"], ["545", "546"], ["545", "549"], ["546", "547"], ["546", "548"], ["550", "551"], ["550", "552"], ["550", "555"], ["550", "558"], ["550", "560"], ["552", "553"], ["552", "554"], ["555", "556"], ["555", "557"], ["558", "559"], ["560", "561"], ["561", "562"], ["561", "565"], ["562", "563"], ["562", "564"], ["565", "566"], ["565", "571"], ["566", "567"], ["566", "570"], ["567", "568"], ["567", "569"], ["571", "572"], ["571", "575"], ["572", "573"], ["572", "574"], ["26", "29"], ["29", "33"], ["31", "38"], ["36", "42"], ["40", "43"], ["43", "47"], ["45", "50"], ["50", "55"], ["132", "140"], ["138", "145"], ["143", "149"], ["311", "321"], ["318", "328"], ["325", "332"], ["331", "338"], ["427", "434"], ["432", "435"], ["435", "440"], ["437", "445"], ["472", "479"], ["477", "484"], ["482", "487"], ["28", "26"], ["33", "31"], ["38", "36"], ["42", "40"], ["47", "45"], ["55", "58"], ["58", "67"], ["58", "120"], ["61", "58"], ["119", "128"], ["119", "134"], ["134", "132"], ["140", "138"], ["145", "143"], ["149", "152"], ["152", "159"], ["152", "314"], ["155", "152"], ["313", "311"], ["320", "318"], ["327", "325"], ["332", "331"], ["338", "343"], ["341", "354"], ["341", "416"], ["346", "343"], ["412", "424"], ["412", "430"], ["428", "427"], ["434", "432"], ["439", "437"], ["445", "454"], ["445", "474"], ["474", "472"], ["479", "477"], ["484", "482"], ["487", "493"], ["487", "552"], ["552", "555"], ["555", "578"], ["555", "564"], ["558", "555"], ["65", "70"], ["69", "77"], ["113", "61"], ["120", "119"], ["125", "130"], ["130", "578"], ["158", "169"], ["168", "180"], ["314", "313"], ["321", "320"], ["328", "327"], ["343", "341"], ["350", "359"], ["413", "412"], ["421", "426"], ["426", "578"], ["430", "428"], ["440", "439"], ["450", "460"], ["457", "468"], ["466", "445"], ["491", "497"], ["561", "558"], ["67", "65"], ["70", "73"], ["73", "69"], ["77", "80"], ["80", "88"], ["80", "115"], ["83", "80"], ["115", "113"], ["126", "125"], ["159", "164"], ["162", "158"], ["169", "174"], ["172", "168"], ["180", "186"], ["183", "194"], ["183", "208"], ["190", "186"], ["192", "190"], ["208", "214"], ["211", "226"], ["211", "155"], ["218", "214"], ["352", "350"], ["359", "365"], ["362", "376"], ["362", "346"], ["369", "365"], ["415", "413"], ["422", "421"], ["452", "450"], ["459", "457"], ["468", "466"], ["493", "491"], ["497", "502"], ["500", "487"], ["500", "511"], ["504", "502"], ["562", "567"], ["565", "561"], ["86", "97"], ["94", "105"], ["104", "83"], ["128", "126"], ["163", "162"], ["173", "172"], ["185", "183"], ["193", "201"], ["213", "211"], ["223", "235"], ["230", "241"], ["239", "251"], ["249", "255"], ["303", "218"], ["354", "352"], ["364", "362"], ["373", "383"], ["416", "415"], ["424", "422"], ["454", "452"], ["460", "463"], ["463", "459"], ["502", "500"], ["509", "519"], ["514", "531"], ["526", "538"], ["533", "541"], ["540", "546"], ["545", "504"], ["564", "562"], ["566", "572"], ["571", "565"], ["87", "92"], ["92", "86"], ["96", "94"], ["105", "109"], ["108", "104"], ["164", "167"], ["167", "163"], ["174", "177"], ["177", "173"], ["186", "189"], ["189", "185"], ["194", "193"], ["199", "202"], ["202", "192"], ["214", "217"], ["217", "213"], ["225", "223"], ["232", "230"], ["240", "246"], ["245", "239"], ["251", "249"], ["255", "261"], ["255", "305"], ["304", "303"], ["365", "368"], ["368", "364"], ["375", "373"], ["381", "394"], ["381", "369"], ["511", "509"], ["516", "514"], ["528", "526"], ["535", "533"], ["541", "540"], ["546", "545"], ["567", "566"], ["572", "571"], ["88", "87"], ["97", "99"], ["98", "96"], ["109", "108"], ["201", "199"], ["226", "225"], ["234", "232"], ["241", "240"], ["246", "245"], ["266", "275"], ["280", "290"], ["285", "296"], ["294", "255"], ["305", "304"], ["376", "375"], ["382", "381"], ["382", "389"], ["387", "381"], ["393", "399"], ["398", "406"], ["405", "346"], ["518", "516"], ["530", "528"], ["537", "535"], ["99", "98"], ["235", "234"], ["260", "255"], ["260", "268"], ["268", "266"], ["272", "255"], ["272", "282"], ["282", "280"], ["287", "285"], ["295", "301"], ["300", "294"], ["383", "382"], ["389", "387"], ["394", "393"], ["399", "402"], ["402", "398"], ["406", "405"], ["519", "522"], ["522", "518"], ["531", "530"], ["538", "537"], ["261", "260"], ["273", "272"], ["289", "287"], ["296", "295"], ["301", "300"], ["275", "273"], ["290", "289"], ["23", "28"], ["130", "578"], ["426", "578"], ["24", "578"], ["26", "578"], ["29", "578"], ["33", "578"], ["31", "578"], ["31", "578"], ["36", "578"], ["36", "578"], ["36", "578"], ["40", "578"], ["43", "578"], ["43", "578"], ["45", "578"], ["45", "578"], ["45", "578"], ["50", "578"], ["55", "578"], ["58", "578"], ["58", "578"], ["120", "578"], ["120", "578"], ["119", "578"], ["119", "578"], ["125", "578"], ["67", "578"], ["65", "578"], ["65", "578"], ["69", "578"], ["69", "578"], ["69", "578"], ["77", "578"], ["80", "578"], ["80", "578"], ["80", "578"], ["113", "578"], ["113", "578"], ["61", "578"], ["92", "578"], ["86", "578"], ["86", "578"], ["94", "578"], ["94", "578"], ["94", "578"], ["104", "578"], ["104", "578"], ["83", "578"], ["23", "24"], ["23", "26"], ["33", "31"], ["38", "36"], ["23", "40"], ["47", "45"], ["23", "50"], ["134", "132"], ["134", "132"], ["140", "138"], ["145", "143"], ["313", "311"], ["320", "318"], ["327", "325"], ["23", "331"], ["23", "432"], ["439", "437"], ["439", "437"], ["474", "472"], ["479", "477"], ["484", "482"], ["26", "29"], ["23", "29"], ["40", "43"], ["23", "43"], ["23", "55"], ["23", "149"], ["23", "338"], ["23", "427"], ["432", "435"], ["23", "435"], ["23", "552"], ["29", "33"], ["23", "33"], ["31", "38"], ["23", "38"], ["38", "47"], ["23", "47"], ["55", "58"], ["61", "58"], ["23", "58"], ["47", "58"], ["58", "61"], ["94", "61"], ["23", "61"], ["67", "65"], ["73", "69"], ["36", "113"], ["104", "113"], ["120", "119"], ["120", "119"], ["23", "119"], ["23", "130"], ["120", "134"], ["23", "134"], ["120", "134"], ["134", "140"], ["23", "140"], ["140", "145"], ["23", "145"], ["149", "152"], ["155", "152"], ["23", "152"], ["145", "152"], ["152", "155"], ["251", "155"], ["23", "155"], ["162", "158"], ["172", "168"], ["314", "313"], ["314", "313"], ["321", "320"], ["321", "320"], ["328", "327"], ["328", "327"], ["338", "341"], ["346", "341"], ["23", "341"], ["343", "341"], ["343", "341"], ["354", "346"], ["383", "346"], ["389", "346"], ["402", "346"], ["23", "346"], ["352", "350"], ["352", "350"], ["311", "412"], ["23", "426"], ["440", "439"], ["440", "439"], ["23", "439"], ["437", "445"], ["466", "445"], ["23", "445"], ["452", "450"], ["452", "450"], ["318", "466"], ["398", "466"], ["440", "474"], ["23", "474"], ["474", "479"], ["23", "479"], ["435", "484"], ["457", "484"], ["23", "484"], ["482", "487"], ["493", "487"], ["23", "487"], ["493", "491"], ["552", "555"], ["558", "555"], ["23", "555"], ["479", "555"], ["555", "558"], ["23", "558"], ["23", "77"], ["50", "113"], ["23", "113"], ["50", "120"], ["113", "120"], ["23", "120"], ["58", "120"], ["23", "125"], ["23", "180"], ["199", "192"], ["202", "192"], ["23", "192"], ["23", "208"], ["23", "314"], ["152", "314"], ["23", "321"], ["314", "321"], ["23", "328"], ["321", "328"], ["23", "343"], ["328", "343"], ["23", "359"], ["23", "421"], ["23", "440"], ["416", "440"], ["435", "457"], ["23", "457"], ["23", "497"], ["427", "561"], ["472", "561"], ["23", "561"], ["477", "561"], ["33", "67"], ["92", "67"], ["23", "67"], ["65", "73"], ["23", "73"], ["77", "80"], ["83", "80"], ["23", "80"], ["73", "80"], ["80", "83"], ["23", "83"], ["92", "86"], ["86", "104"], ["162", "172"], ["180", "183"], ["190", "183"], ["23", "183"], ["183", "190"], ["23", "190"], ["208", "211"], ["218", "211"], ["23", "211"], ["172", "211"], ["211", "218"], ["23", "218"], ["86", "223"], ["232", "230"], ["232", "230"], ["251", "249"], ["251", "249"], ["249", "303"], ["273", "303"], ["280", "303"], ["23", "303"], ["354", "352"], ["23", "352"], ["354", "352"], ["359", "362"], ["369", "362"], ["23", "362"], ["362", "369"], ["23", "369"], ["416", "415"], ["416", "415"], ["23", "415"], ["454", "452"], ["23", "452"], ["454", "452"], ["487", "493"], ["23", "493"], ["497", "500"], ["504", "500"], ["23", "500"], ["502", "500"], ["23", "504"], ["511", "504"], ["511", "509"], ["511", "509"], ["516", "514"], ["516", "514"], ["528", "526"], ["528", "526"], ["535", "533"], ["535", "533"], ["23", "540"], ["514", "540"], ["526", "545"], ["23", "545"], ["472", "565"], ["23", "565"], ["477", "565"], ["43", "94"], ["23", "94"], ["86", "94"], ["58", "94"], ["36", "104"], ["23", "199"], ["23", "204"], ["294", "239"], ["192", "239"], ["23", "239"], ["230", "239"], ["352", "354"], ["23", "354"], ["341", "354"], ["23", "416"], ["343", "416"], ["452", "454"], ["352", "454"], ["23", "454"], ["445", "454"], ["491", "502"], ["516", "502"], ["23", "502"], ["472", "566"], ["23", "566"], ["477", "571"], ["23", "571"], ["67", "92"], ["23", "92"], ["23", "96"], ["86", "96"], ["199", "202"], ["23", "202"], ["132", "232"], ["287", "232"], ["23", "232"], ["234", "232"], ["234", "232"], ["23", "245"], ["230", "245"], ["23", "251"], ["152", "251"], ["261", "255"], ["268", "255"], ["23", "255"], ["230", "255"], ["285", "255"], ["234", "255"], ["268", "266"], ["268", "266"], ["282", "280"], ["282", "280"], ["287", "285"], ["287", "285"], ["382", "381"], ["382", "381"], ["311", "381"], ["23", "393"], ["402", "398"], ["402", "398"], ["362", "405"], ["23", "405"], ["502", "511"], ["23", "511"], ["500", "511"], ["522", "516"], ["23", "516"], ["518", "516"], ["518", "516"], ["43", "528"], ["535", "528"], ["261", "528"], ["268", "528"], ["94", "528"], ["23", "528"], ["509", "528"], ["528", "535"], ["23", "535"], ["514", "535"], ["36", "234"], ["104", "234"], ["223", "234"], ["23", "234"], ["273", "280"], ["23", "280"], ["239", "294"], ["23", "294"], ["285", "294"], ["383", "382"], ["383", "382"], ["23", "382"], ["511", "518"], ["23", "518"], ["522", "518"], ["23", "530"], ["509", "530"], ["23", "537"], ["514", "537"], ["261", "260"], ["261", "260"], ["261", "268"], ["23", "268"], ["261", "268"], ["273", "272"], ["273", "272"], ["23", "272"], ["23", "282"], ["275", "282"], ["232", "287"], ["23", "287"], ["289", "287"], ["289", "287"], ["23", "300"], ["285", "300"], ["354", "383"], ["389", "383"], ["23", "383"], ["373", "383"], ["383", "389"], ["23", "389"], ["382", "389"], ["383", "402"], ["389", "402"], ["23", "402"], ["382", "402"], ["389", "402"], ["511", "519"], ["23", "519"], ["511", "522"], ["23", "522"], ["43", "261"], ["268", "261"], ["94", "261"], ["23", "261"], ["255", "261"], ["249", "273"], ["280", "273"], ["23", "273"], ["275", "273"], ["275", "273"], ["36", "289"], ["268", "289"], ["23", "289"], ["23", "275"], ["266", "275"], ["58", "80"], ["58", "61"], ["58", "65"], ["58", "115"], ["58", "73"], ["58", "77"], ["58", "113"], ["58", "58"], ["58", "70"], ["58", "69"], ["58", "67"], ["119", "152"], ["119", "412"], ["119", "416"], ["119", "311"], ["119", "140"], ["119", "320"], ["119", "149"], ["119", "132"], ["119", "325"], ["119", "130"], ["119", "318"], ["119", "343"], ["119", "327"], ["119", "313"], ["119", "125"], ["119", "128"], ["119", "338"], ["119", "134"], ["119", "138"], ["119", "328"], ["119", "415"], ["119", "321"], ["119", "413"], ["119", "145"], ["119", "341"], ["119", "332"], ["119", "314"], ["119", "331"], ["119", "143"], ["119", "126"], ["152", "167"], ["152", "168"], ["152", "208"], ["152", "152"], ["152", "186"], ["152", "172"], ["152", "169"], ["152", "189"], ["152", "211"], ["152", "214"], ["152", "163"], ["152", "213"], ["152", "162"], ["152", "174"], ["152", "180"], ["152", "158"], ["152", "217"], ["152", "159"], ["152", "177"], ["152", "185"], ["152", "173"], ["152", "164"], ["152", "155"], ["152", "183"], ["341", "362"], ["341", "368"], ["341", "364"], ["341", "365"], ["341", "352"], ["341", "343"], ["341", "354"], ["341", "346"], ["341", "341"], ["341", "359"], ["341", "350"], ["412", "428"], ["412", "430"], ["412", "426"], ["412", "437"], ["412", "484"], ["412", "479"], ["412", "552"], ["412", "472"], ["412", "555"], ["412", "434"], ["412", "474"], ["412", "427"], ["412", "439"], ["412", "482"], ["412", "432"], ["412", "435"], ["412", "424"], ["412", "477"], ["412", "440"], ["412", "487"], ["412", "421"], ["412", "422"], ["412", "445"], ["445", "460"], ["445", "452"], ["445", "463"], ["445", "454"], ["445", "450"], ["445", "466"], ["445", "457"], ["445", "468"], ["445", "459"], ["445", "445"], ["487", "493"], ["487", "491"], ["487", "497"], ["487", "502"], ["487", "487"], ["487", "500"], ["555", "566"], ["555", "562"], ["555", "555"], ["555", "565"], ["555", "564"], ["555", "558"], ["555", "571"], ["555", "572"], ["555", "561"], ["555", "567"], ["80", "104"], ["80", "80"], ["80", "108"], ["80", "96"], ["80", "98"], ["80", "87"], ["80", "105"], ["80", "88"], ["80", "86"], ["80", "109"], ["80", "94"], ["80", "92"], ["80", "97"], ["80", "99"], ["80", "83"], ["183", "190"], ["183", "186"], ["183", "201"], ["183", "189"], ["183", "192"], ["183", "194"], ["183", "202"], ["183", "199"], ["183", "185"], ["183", "183"], ["183", "193"], ["211", "240"], ["211", "304"], ["211", "305"], ["211", "225"], ["211", "232"], ["211", "223"], ["211", "246"], ["211", "239"], ["211", "251"], ["211", "234"], ["211", "211"], ["211", "303"], ["211", "218"], ["211", "214"], ["211", "230"], ["211", "226"], ["211", "213"], ["211", "249"], ["211", "217"], ["211", "241"], ["211", "245"], ["211", "255"], ["211", "235"], ["362", "376"], ["362", "383"], ["362", "373"], ["362", "375"], ["362", "382"], ["362", "381"], ["500", "528"], ["500", "509"], ["500", "516"], ["500", "545"], ["500", "541"], ["500", "538"], ["500", "514"], ["500", "546"], ["500", "522"], ["500", "511"], ["500", "537"], ["500", "518"], ["500", "535"], ["500", "530"], ["500", "504"], ["500", "540"], ["500", "502"], ["500", "531"], ["500", "526"], ["500", "519"], ["500", "533"], ["500", "500"], ["255", "261"], ["255", "260"], ["255", "255"], ["381", "362"], ["381", "368"], ["381", "364"], ["381", "365"], ["381", "402"], ["381", "398"], ["381", "399"], ["381", "394"], ["381", "405"], ["381", "393"], ["381", "369"], ["381", "406"], ["382", "387"], ["382", "389"], ["260", "272"], ["260", "268"], ["260", "273"], ["260", "266"], ["260", "275"], ["272", "300"], ["272", "296"], ["272", "282"], ["272", "301"], ["272", "289"], ["272", "280"], ["272", "287"], ["272", "294"], ["272", "290"], ["272", "285"], ["272", "295"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY fs = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,fs,new FastScanner())<SUB>2</SUB>>", "31": "<(&lt;operator&gt;.assignment,int nBoxes = nextInt())<SUB>3</SUB>>", "33": "<(nextInt,nextInt())<SUB>3</SUB>>", "35": "<(LOCAL,long[] sums: long[])<SUB>4</SUB>>", "37": "<(IDENTIFIER,sums,long[] sums = new long[nBoxes])<SUB>4</SUB>>", "39": "<(IDENTIFIER,nBoxes,new long[nBoxes])<SUB>4</SUB>>", "40": "<(&lt;operator&gt;.assignment,ANY boxOf = new HashMap&lt;&gt;())<SUB>5</SUB>>", "42": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>5</SUB>>", "5": "<(IDENTIFIER,boxOf,new HashMap&lt;&gt;())<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int[][] boxes = new int[nBoxes][])<SUB>6</SUB>>", "47": "<(&lt;operator&gt;.alloc,new int[nBoxes][])>", "49": "<(LOCAL,long total: long)<SUB>7</SUB>>", "51": "<(IDENTIFIER,total,long total = 0)<SUB>7</SUB>>", "53": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; nBoxes); i++),for (int i = 0; Some(i &lt; nBoxes); i++))<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>8</SUB>>", "57": "<(LITERAL,0,int i = 0)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,i &lt; nBoxes)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.postIncrement,i++)<SUB>8</SUB>>", "63": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.assignment,int size = nextInt())<SUB>9</SUB>>", "67": "<(nextInt,nextInt())<SUB>9</SUB>>", "69": "<(&lt;operator&gt;.assignment,boxes[i] = new int[size])<SUB>10</SUB>>", "71": "<(IDENTIFIER,boxes,boxes[i] = new int[size])<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.alloc,new int[size])>", "75": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; size); j++),for (int j = 0; Some(j &lt; size); j++))<SUB>11</SUB>>", "77": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>11</SUB>>", "79": "<(LITERAL,0,int j = 0)<SUB>11</SUB>>", "81": "<(IDENTIFIER,j,j &lt; size)<SUB>11</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,boxes[i][j])<SUB>12</SUB>>", "89": "<(IDENTIFIER,boxes,boxes[i][j] = nextInt())<SUB>12</SUB>>", "91": "<(IDENTIFIER,j,boxes[i][j] = nextInt())<SUB>12</SUB>>", "93": "<(IDENTIFIER,fs,nextInt())<SUB>12</SUB>>", "95": "<(IDENTIFIER,boxOf,put((long) boxes[i][j], i))<SUB>13</SUB>>", "97": "<(TYPE_REF,long,long)<SUB>13</SUB>>", "99": "<(&lt;operator&gt;.indexAccess,boxes[i])<SUB>13</SUB>>", "101": "<(IDENTIFIER,i,(long) boxes[i][j])<SUB>13</SUB>>", "103": "<(IDENTIFIER,i,put((long) boxes[i][j], i))<SUB>13</SUB>>", "105": "<(&lt;operator&gt;.indexAccess,sums[i])<SUB>14</SUB>>", "107": "<(IDENTIFIER,i,sums[i] += boxes[i][j])<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,boxes[i])<SUB>14</SUB>>", "111": "<(IDENTIFIER,i,sums[i] += boxes[i][j])<SUB>14</SUB>>", "113": "<(&lt;operator&gt;.assignmentPlus,total += sums[i])<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,sums[i])<SUB>16</SUB>>", "117": "<(IDENTIFIER,i,total += sums[i])<SUB>16</SUB>>", "119": "<(&lt;operator&gt;.notEquals,total % nBoxes != 0)<SUB>18</SUB>>", "121": "<(IDENTIFIER,total,total % nBoxes)<SUB>18</SUB>>", "123": "<(LITERAL,0,total % nBoxes != 0)<SUB>18</SUB>>", "125": "<(println,System.out.println(&quot;No&quot;))<SUB>19</SUB>>", "127": "<(IDENTIFIER,System,System.out.println(&quot;No&quot;))<SUB>19</SUB>>", "129": "<(LITERAL,&quot;No&quot;,System.out.println(&quot;No&quot;))<SUB>19</SUB>>", "131": "<(LOCAL,long target: long)<SUB>23</SUB>>", "133": "<(IDENTIFIER,target,long target = total / nBoxes)<SUB>23</SUB>>", "135": "<(IDENTIFIER,total,total / nBoxes)<SUB>23</SUB>>", "137": "<(LOCAL,int[][] masks: int[][])<SUB>24</SUB>>", "139": "<(IDENTIFIER,masks,int[][] masks = new int[nBoxes][])<SUB>24</SUB>>", "141": "<(IDENTIFIER,nBoxes,new int[nBoxes][])<SUB>24</SUB>>", "143": "<(&lt;operator&gt;.assignment,ANY maskLoops = new ArrayList[nBoxes][])<SUB>25</SUB>>", "145": "<(&lt;operator&gt;.alloc,new ArrayList[nBoxes][])>", "147": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; nBoxes); i++),for (int i = 0; Some(i &lt; nBoxes); i++))<SUB>26</SUB>>", "149": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "151": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "153": "<(IDENTIFIER,i,i &lt; nBoxes)<SUB>26</SUB>>", "155": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "157": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "159": "<(&lt;operator&gt;.indexAccess,masks[i])<SUB>27</SUB>>", "161": "<(IDENTIFIER,i,masks[i] = new int[boxes[i].length])<SUB>27</SUB>>", "163": "<(&lt;operator&gt;.fieldAccess,boxes[i].length)<SUB>27</SUB>>", "165": "<(IDENTIFIER,boxes,new int[boxes[i].length])<SUB>27</SUB>>", "167": "<(FIELD_IDENTIFIER,length,length)<SUB>27</SUB>>", "169": "<(&lt;operator&gt;.indexAccess,maskLoops[i])<SUB>28</SUB>>", "171": "<(IDENTIFIER,i,maskLoops[i] = new ArrayList[boxes[i].length])<SUB>28</SUB>>", "173": "<(&lt;operator&gt;.fieldAccess,boxes[i].length)<SUB>28</SUB>>", "175": "<(IDENTIFIER,boxes,new ArrayList[boxes[i].length])<SUB>28</SUB>>", "177": "<(FIELD_IDENTIFIER,length,length)<SUB>28</SUB>>", "179": "<(LOCAL,int j: int)<SUB>29</SUB>>", "181": "<(IDENTIFIER,j,int j = 0)<SUB>29</SUB>>", "183": "<(&lt;operator&gt;.lessThan,j &lt; maskLoops[i].length)<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.fieldAccess,maskLoops[i].length)<SUB>29</SUB>>", "187": "<(IDENTIFIER,maskLoops,j &lt; maskLoops[i].length)<SUB>29</SUB>>", "189": "<(FIELD_IDENTIFIER,length,length)<SUB>29</SUB>>", "191": "<(IDENTIFIER,j,j++)<SUB>29</SUB>>", "193": "<(&lt;operator&gt;.indexAccess,maskLoops[i][j])<SUB>29</SUB>>", "195": "<(IDENTIFIER,maskLoops,maskLoops[i][j] = new ArrayList&lt;&gt;())<SUB>29</SUB>>", "197": "<(IDENTIFIER,j,maskLoops[i][j] = new ArrayList&lt;&gt;())<SUB>29</SUB>>", "199": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "201": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>29</SUB>>", "203": "<(IDENTIFIER,$obj2,new ArrayList&lt;&gt;())>", "205": "<(JUMP_TARGET,inner)>", "207": "<(LOCAL,int j: int)<SUB>31</SUB>>", "209": "<(IDENTIFIER,j,int j = 0)<SUB>31</SUB>>", "211": "<(&lt;operator&gt;.lessThan,j &lt; boxes[i].length)<SUB>31</SUB>>", "213": "<(&lt;operator&gt;.fieldAccess,boxes[i].length)<SUB>31</SUB>>", "215": "<(IDENTIFIER,boxes,j &lt; boxes[i].length)<SUB>31</SUB>>", "217": "<(FIELD_IDENTIFIER,length,length)<SUB>31</SUB>>", "219": "<(IDENTIFIER,j,j++)<SUB>31</SUB>>", "221": "<(LOCAL,long startVal: long)<SUB>32</SUB>>", "223": "<(&lt;operator&gt;.assignment,long startVal = boxes[i][j])<SUB>32</SUB>>", "225": "<(&lt;operator&gt;.indexAccess,boxes[i][j])<SUB>32</SUB>>", "227": "<(IDENTIFIER,boxes,long startVal = boxes[i][j])<SUB>32</SUB>>", "229": "<(IDENTIFIER,j,long startVal = boxes[i][j])<SUB>32</SUB>>", "231": "<(IDENTIFIER,lookingFor,long lookingFor = target - (sums[i] - startVal))<SUB>32</SUB>>", "233": "<(IDENTIFIER,target,target - (sums[i] - startVal))<SUB>32</SUB>>", "235": "<(&lt;operator&gt;.indexAccess,sums[i])<SUB>32</SUB>>", "237": "<(IDENTIFIER,i,sums[i] - startVal)<SUB>32</SUB>>", "239": "<(add,add((int) lookingFor))<SUB>33</SUB>>", "241": "<(&lt;operator&gt;.indexAccess,maskLoops[i])<SUB>33</SUB>>", "243": "<(IDENTIFIER,i,add((int) lookingFor))<SUB>33</SUB>>", "245": "<(&lt;operator&gt;.cast,(int) lookingFor)<SUB>33</SUB>>", "247": "<(IDENTIFIER,lookingFor,(int) lookingFor)<SUB>33</SUB>>", "249": "<(&lt;operator&gt;.assignment,int mask = 1 &lt;&lt; i)<SUB>34</SUB>>", "251": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>34</SUB>>", "253": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>34</SUB>>", "255": "<(&lt;operator&gt;.notEquals,lookingFor != startVal)<SUB>35</SUB>>", "257": "<(IDENTIFIER,startVal,lookingFor != startVal)<SUB>35</SUB>>", "259": "<(CONTROL_STRUCTURE,if (!boxOf.containsKey(lookingFor)),if (!boxOf.containsKey(lookingFor)))<SUB>36</SUB>>", "261": "<(containsKey,containsKey(lookingFor))<SUB>36</SUB>>", "263": "<(IDENTIFIER,lookingFor,containsKey(lookingFor))<SUB>36</SUB>>", "265": "<(LOCAL,int nextBox: int)<SUB>37</SUB>>", "267": "<(IDENTIFIER,nextBox,int nextBox = get(lookingFor))<SUB>37</SUB>>", "269": "<(IDENTIFIER,boxOf,get(lookingFor))<SUB>37</SUB>>", "271": "<(CONTROL_STRUCTURE,if ((mask &amp; (1 &lt;&lt; nextBox)) != 0),if ((mask &amp; (1 &lt;&lt; nextBox)) != 0))<SUB>40</SUB>>", "273": "<(&lt;operator&gt;.and,mask &amp; (1 &lt;&lt; nextBox))<SUB>40</SUB>>", "275": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; nextBox)<SUB>40</SUB>>", "277": "<(IDENTIFIER,nextBox,1 &lt;&lt; nextBox)<SUB>40</SUB>>", "279": "<(CONTROL_STRUCTURE,continue inner;,continue inner;)<SUB>40</SUB>>", "281": "<(IDENTIFIER,mask,mask |= 1 &lt;&lt; nextBox)<SUB>42</SUB>>", "283": "<(LITERAL,1,1 &lt;&lt; nextBox)<SUB>42</SUB>>", "285": "<(&lt;operator&gt;.assignment,lookingFor = target - (sums[nextBox] - lookingFor))<SUB>43</SUB>>", "287": "<(&lt;operator&gt;.subtraction,target - (sums[nextBox] - lookingFor))<SUB>43</SUB>>", "289": "<(&lt;operator&gt;.subtraction,sums[nextBox] - lookingFor)<SUB>43</SUB>>", "291": "<(IDENTIFIER,sums,sums[nextBox] - lookingFor)<SUB>43</SUB>>", "293": "<(IDENTIFIER,lookingFor,sums[nextBox] - lookingFor)<SUB>43</SUB>>", "295": "<(&lt;operator&gt;.indexAccess,maskLoops[i][j])<SUB>44</SUB>>", "297": "<(IDENTIFIER,maskLoops,add((int) lookingFor))<SUB>44</SUB>>", "299": "<(IDENTIFIER,j,add((int) lookingFor))<SUB>44</SUB>>", "301": "<(TYPE_REF,int,int)<SUB>44</SUB>>", "303": "<(&lt;operator&gt;.assignment,masks[i][j] = mask)<SUB>49</SUB>>", "305": "<(&lt;operator&gt;.indexAccess,masks[i])<SUB>49</SUB>>", "307": "<(IDENTIFIER,i,masks[i][j] = mask)<SUB>49</SUB>>", "309": "<(IDENTIFIER,mask,masks[i][j] = mask)<SUB>49</SUB>>", "311": "<(&lt;operator&gt;.assignment,boolean[] possible = new boolean[1 &lt;&lt; nBoxes])<SUB>53</SUB>>", "313": "<(&lt;operator&gt;.alloc,new boolean[1 &lt;&lt; nBoxes])>", "315": "<(LITERAL,1,1 &lt;&lt; nBoxes)<SUB>53</SUB>>", "317": "<(LOCAL,int[] maskFrom: int[])<SUB>54</SUB>>", "319": "<(IDENTIFIER,maskFrom,int[] maskFrom = new int[1 &lt;&lt; nBoxes])<SUB>54</SUB>>", "321": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; nBoxes)<SUB>54</SUB>>", "323": "<(IDENTIFIER,nBoxes,1 &lt;&lt; nBoxes)<SUB>54</SUB>>", "325": "<(&lt;operator&gt;.assignment,int[] indexToUse = new int[1 &lt;&lt; nBoxes])<SUB>55</SUB>>", "327": "<(&lt;operator&gt;.alloc,new int[1 &lt;&lt; nBoxes])>", "329": "<(LITERAL,1,1 &lt;&lt; nBoxes)<SUB>55</SUB>>", "331": "<(&lt;operator&gt;.assignment,possible[0] = true)<SUB>56</SUB>>", "333": "<(IDENTIFIER,possible,possible[0] = true)<SUB>56</SUB>>", "335": "<(LITERAL,true,possible[0] = true)<SUB>56</SUB>>", "337": "<(LOCAL,int mask: int)<SUB>57</SUB>>", "339": "<(IDENTIFIER,mask,int mask = 1)<SUB>57</SUB>>", "341": "<(&lt;operator&gt;.lessThan,mask &lt; 1 &lt;&lt; nBoxes)<SUB>57</SUB>>", "343": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; nBoxes)<SUB>57</SUB>>", "345": "<(IDENTIFIER,nBoxes,1 &lt;&lt; nBoxes)<SUB>57</SUB>>", "347": "<(IDENTIFIER,mask,mask++)<SUB>57</SUB>>", "349": "<(LOCAL,int lowestBit: int)<SUB>58</SUB>>", "351": "<(IDENTIFIER,lowestBit,int lowestBit = Integer.numberOfTrailingZeros(Integer.lowestOneBit(mask)))<SUB>58</SUB>>", "353": "<(IDENTIFIER,Integer,Integer.numberOfTrailingZeros(Integer.lowestOneBit(mask)))<SUB>58</SUB>>", "355": "<(IDENTIFIER,Integer,Integer.lowestOneBit(mask))<SUB>58</SUB>>", "357": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; masks[lowestBit].length); i++),for (int i = 0; Some(i &lt; masks[lowestBit].length); i++))<SUB>68</SUB>>", "359": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>68</SUB>>", "361": "<(LITERAL,0,int i = 0)<SUB>68</SUB>>", "363": "<(IDENTIFIER,i,i &lt; masks[lowestBit].length)<SUB>68</SUB>>", "365": "<(&lt;operator&gt;.indexAccess,masks[lowestBit])<SUB>68</SUB>>", "367": "<(IDENTIFIER,lowestBit,i &lt; masks[lowestBit].length)<SUB>68</SUB>>", "369": "<(&lt;operator&gt;.postIncrement,i++)<SUB>68</SUB>>", "371": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>>", "373": "<(&lt;operator&gt;.assignment,int m = masks[lowestBit][i])<SUB>69</SUB>>", "375": "<(&lt;operator&gt;.indexAccess,masks[lowestBit][i])<SUB>69</SUB>>", "377": "<(IDENTIFIER,masks,int m = masks[lowestBit][i])<SUB>69</SUB>>", "379": "<(IDENTIFIER,i,int m = masks[lowestBit][i])<SUB>69</SUB>>", "381": "<(&lt;operator&gt;.logicalAnd,(mask &amp; m) == m &amp;&amp; possible[mask ^ m])<SUB>70</SUB>>", "383": "<(&lt;operator&gt;.and,mask &amp; m)<SUB>70</SUB>>", "385": "<(IDENTIFIER,m,mask &amp; m)<SUB>70</SUB>>", "387": "<(&lt;operator&gt;.indexAccess,possible[mask ^ m])<SUB>70</SUB>>", "389": "<(&lt;operator&gt;.xor,mask ^ m)<SUB>70</SUB>>", "391": "<(IDENTIFIER,m,mask ^ m)<SUB>70</SUB>>", "393": "<(&lt;operator&gt;.assignment,possible[mask] = true)<SUB>71</SUB>>", "395": "<(IDENTIFIER,possible,possible[mask] = true)<SUB>71</SUB>>", "397": "<(LITERAL,true,possible[mask] = true)<SUB>71</SUB>>", "399": "<(&lt;operator&gt;.indexAccess,maskFrom[mask])<SUB>72</SUB>>", "401": "<(IDENTIFIER,mask,maskFrom[mask] = mask ^ m)<SUB>72</SUB>>", "403": "<(IDENTIFIER,mask,mask ^ m)<SUB>72</SUB>>", "405": "<(&lt;operator&gt;.assignment,indexToUse[mask] = i)<SUB>73</SUB>>", "407": "<(IDENTIFIER,indexToUse,indexToUse[mask] = i)<SUB>73</SUB>>", "409": "<(IDENTIFIER,i,indexToUse[mask] = i)<SUB>73</SUB>>", "411": "<(CONTROL_STRUCTURE,if (!possible[(1 &lt;&lt; nBoxes) - 1]),if (!possible[(1 &lt;&lt; nBoxes) - 1]))<SUB>78</SUB>>", "413": "<(&lt;operator&gt;.indexAccess,possible[(1 &lt;&lt; nBoxes) - 1])<SUB>78</SUB>>", "415": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; nBoxes) - 1)<SUB>78</SUB>>", "417": "<(LITERAL,1,1 &lt;&lt; nBoxes)<SUB>78</SUB>>", "419": "<(LITERAL,1,(1 &lt;&lt; nBoxes) - 1)<SUB>78</SUB>>", "421": "<(println,System.out.println(&quot;No&quot;))<SUB>79</SUB>>", "423": "<(IDENTIFIER,System,System.out.println(&quot;No&quot;))<SUB>79</SUB>>", "425": "<(LITERAL,&quot;No&quot;,System.out.println(&quot;No&quot;))<SUB>79</SUB>>", "427": "<(println,System.out.println(&quot;Yes&quot;))<SUB>82</SUB>>", "429": "<(IDENTIFIER,System,System.out.println(&quot;Yes&quot;))<SUB>82</SUB>>", "431": "<(LITERAL,&quot;Yes&quot;,System.out.println(&quot;Yes&quot;))<SUB>82</SUB>>", "432": "<(&lt;operator&gt;.assignment,ANY loops = new ArrayList&lt;&gt;())<SUB>83</SUB>>", "434": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>83</SUB>>", "7": "<(IDENTIFIER,loops,new ArrayList&lt;&gt;())<SUB>83</SUB>>", "437": "<(&lt;operator&gt;.assignment,int mask = (1 &lt;&lt; nBoxes) - 1)<SUB>84</SUB>>", "439": "<(&lt;operator&gt;.subtraction,(1 &lt;&lt; nBoxes) - 1)<SUB>84</SUB>>", "441": "<(LITERAL,1,1 &lt;&lt; nBoxes)<SUB>84</SUB>>", "443": "<(LITERAL,1,(1 &lt;&lt; nBoxes) - 1)<SUB>84</SUB>>", "445": "<(&lt;operator&gt;.notEquals,mask != 0)<SUB>85</SUB>>", "447": "<(LITERAL,0,mask != 0)<SUB>85</SUB>>", "449": "<(LOCAL,int lowestBit: int)<SUB>87</SUB>>", "451": "<(IDENTIFIER,lowestBit,int lowestBit = Integer.numberOfTrailingZeros(Integer.lowestOneBit(mask)))<SUB>87</SUB>>", "453": "<(IDENTIFIER,Integer,Integer.numberOfTrailingZeros(Integer.lowestOneBit(mask)))<SUB>87</SUB>>", "455": "<(IDENTIFIER,Integer,Integer.lowestOneBit(mask))<SUB>87</SUB>>", "457": "<(add,add(maskLoops[lowestBit][indexToUse[mask]]))<SUB>88</SUB>>", "459": "<(&lt;operator&gt;.indexAccess,maskLoops[lowestBit][indexToUse[mask]])<SUB>88</SUB>>", "461": "<(IDENTIFIER,maskLoops,add(maskLoops[lowestBit][indexToUse[mask]]))<SUB>88</SUB>>", "463": "<(&lt;operator&gt;.indexAccess,indexToUse[mask])<SUB>88</SUB>>", "465": "<(IDENTIFIER,mask,add(maskLoops[lowestBit][indexToUse[mask]]))<SUB>88</SUB>>", "467": "<(IDENTIFIER,mask,mask = maskFrom[mask])<SUB>89</SUB>>", "469": "<(IDENTIFIER,maskFrom,mask = maskFrom[mask])<SUB>89</SUB>>", "471": "<(LOCAL,int[] takeFrom: int[])<SUB>94</SUB>>", "473": "<(IDENTIFIER,takeFrom,int[] takeFrom = new int[nBoxes])<SUB>94</SUB>>", "475": "<(IDENTIFIER,nBoxes,new int[nBoxes])<SUB>94</SUB>>", "477": "<(&lt;operator&gt;.assignment,int[] boxGiveTo = new int[nBoxes])<SUB>95</SUB>>", "479": "<(&lt;operator&gt;.alloc,new int[nBoxes])>", "481": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>96</SUB>>", "483": "<(IDENTIFIER,$iterLocal0,)<SUB>96</SUB>>", "485": "<(IDENTIFIER,loops,&lt;empty&gt;)<SUB>96</SUB>>", "487": "<(hasNext,&lt;empty&gt;)<SUB>96</SUB>>", "489": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>96</SUB>>", "491": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>96</SUB>>", "493": "<(next,&lt;empty&gt;)<SUB>96</SUB>>", "495": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; loop.size()); i++),for (int i = 0; Some(i &lt; loop.size()); i++))<SUB>97</SUB>>", "497": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>97</SUB>>", "499": "<(LITERAL,0,int i = 0)<SUB>97</SUB>>", "501": "<(IDENTIFIER,i,i &lt; loop.size())<SUB>97</SUB>>", "503": "<(IDENTIFIER,loop,size())<SUB>97</SUB>>", "505": "<(IDENTIFIER,i,i++)<SUB>97</SUB>>", "507": "<(LOCAL,int cur: int)<SUB>98</SUB>>", "509": "<(&lt;operator&gt;.assignment,int cur = get(i))<SUB>98</SUB>>", "511": "<(get,get(i))<SUB>98</SUB>>", "513": "<(IDENTIFIER,i,get(i))<SUB>98</SUB>>", "515": "<(IDENTIFIER,next,int next = get((i + 1) % loop.size()))<SUB>98</SUB>>", "517": "<(IDENTIFIER,loop,get((i + 1) % loop.size()))<SUB>98</SUB>>", "519": "<(&lt;operator&gt;.addition,i + 1)<SUB>98</SUB>>", "521": "<(LITERAL,1,i + 1)<SUB>98</SUB>>", "523": "<(IDENTIFIER,loop,size())<SUB>98</SUB>>", "525": "<(LOCAL,int nextBox: int)<SUB>99</SUB>>", "527": "<(IDENTIFIER,curBox,int curBox = get((long) cur))<SUB>99</SUB>>", "529": "<(IDENTIFIER,boxOf,get((long) cur))<SUB>99</SUB>>", "531": "<(TYPE_REF,long,long)<SUB>99</SUB>>", "533": "<(&lt;operator&gt;.assignment,int nextBox = get((long) next))<SUB>99</SUB>>", "535": "<(get,get((long) next))<SUB>99</SUB>>", "537": "<(&lt;operator&gt;.cast,(long) next)<SUB>99</SUB>>", "539": "<(IDENTIFIER,next,(long) next)<SUB>99</SUB>>", "541": "<(&lt;operator&gt;.indexAccess,takeFrom[nextBox])<SUB>100</SUB>>", "543": "<(IDENTIFIER,nextBox,takeFrom[nextBox] = next)<SUB>100</SUB>>", "545": "<(&lt;operator&gt;.assignment,boxGiveTo[nextBox] = curBox)<SUB>101</SUB>>", "547": "<(IDENTIFIER,boxGiveTo,boxGiveTo[nextBox] = curBox)<SUB>101</SUB>>", "549": "<(IDENTIFIER,curBox,boxGiveTo[nextBox] = curBox)<SUB>101</SUB>>", "551": "<(LOCAL,int i: int)<SUB>104</SUB>>", "553": "<(IDENTIFIER,i,int i = 0)<SUB>104</SUB>>", "555": "<(&lt;operator&gt;.lessThan,i &lt; nBoxes)<SUB>104</SUB>>", "557": "<(IDENTIFIER,nBoxes,i &lt; nBoxes)<SUB>104</SUB>>", "559": "<(IDENTIFIER,i,i++)<SUB>104</SUB>>", "561": "<(println,System.out.println(takeFrom[i] + &quot; &quot; + (boxGiveTo[i] + 1)))<SUB>105</SUB>>", "563": "<(IDENTIFIER,System,System.out.println(takeFrom[i] + &quot; &quot; + (boxGiveTo[i] + 1)))<SUB>105</SUB>>", "565": "<(&lt;operator&gt;.addition,takeFrom[i] + &quot; &quot; + (boxGiveTo[i] + 1))<SUB>105</SUB>>", "567": "<(&lt;operator&gt;.indexAccess,takeFrom[i])<SUB>105</SUB>>", "569": "<(IDENTIFIER,i,takeFrom[i] + &quot; &quot;)<SUB>105</SUB>>", "571": "<(&lt;operator&gt;.addition,boxGiveTo[i] + 1)<SUB>105</SUB>>", "573": "<(IDENTIFIER,boxGiveTo,boxGiveTo[i] + 1)<SUB>105</SUB>>", "575": "<(LITERAL,1,boxGiveTo[i] + 1)<SUB>105</SUB>>", "577": "<(MODIFIER,STATIC)>"}}