{"edges": [["17", "19"], ["17", "199"], ["17", "200"], ["17", "201"], ["19", "20"], ["19", "24"], ["19", "28"], ["19", "32"], ["19", "72"], ["19", "79"], ["19", "86"], ["19", "118"], ["19", "150"], ["19", "158"], ["19", "195"], ["19", "197"], ["20", "21"], ["20", "22"], ["22", "23"], ["24", "25"], ["24", "26"], ["26", "27"], ["28", "29"], ["28", "30"], ["30", "31"], ["32", "33"], ["32", "38"], ["33", "34"], ["33", "37"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "69"], ["38", "71"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["49", "67"], ["50", "51"], ["50", "52"], ["50", "55"], ["50", "58"], ["50", "60"], ["52", "53"], ["52", "54"], ["55", "56"], ["55", "57"], ["58", "59"], ["60", "61"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "66"], ["64", "65"], ["67", "68"], ["69", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["74", "76"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "107"], ["97", "109"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["118", "119"], ["118", "120"], ["118", "123"], ["118", "128"], ["118", "130"], ["120", "121"], ["120", "122"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["131", "132"], ["131", "133"], ["131", "136"], ["131", "139"], ["131", "141"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["139", "140"], ["141", "142"], ["142", "143"], ["142", "148"], ["143", "144"], ["143", "147"], ["144", "145"], ["144", "146"], ["148", "149"], ["150", "151"], ["150", "152"], ["152", "153"], ["152", "154"], ["152", "155"], ["155", "156"], ["155", "157"], ["158", "159"], ["158", "160"], ["158", "163"], ["158", "166"], ["158", "168"], ["160", "161"], ["160", "162"], ["163", "164"], ["163", "165"], ["166", "167"], ["168", "169"], ["168", "193"], ["169", "170"], ["169", "171"], ["169", "174"], ["169", "177"], ["169", "179"], ["171", "172"], ["171", "173"], ["174", "175"], ["174", "176"], ["177", "178"], ["179", "180"], ["180", "181"], ["180", "182"], ["182", "183"], ["182", "192"], ["183", "184"], ["183", "185"], ["185", "186"], ["185", "187"], ["185", "188"], ["185", "189"], ["189", "190"], ["189", "191"], ["193", "194"], ["195", "196"], ["197", "198"], ["20", "26"], ["24", "30"], ["28", "34"], ["72", "82"], ["79", "88"], ["150", "160"], ["195", "197"], ["197", "201"], ["22", "20"], ["26", "24"], ["30", "28"], ["33", "41"], ["33", "76"], ["74", "72"], ["81", "79"], ["88", "91"], ["91", "99"], ["91", "120"], ["94", "91"], ["120", "125"], ["123", "133"], ["123", "155"], ["128", "125"], ["152", "150"], ["160", "163"], ["163", "171"], ["163", "195"], ["166", "163"], ["34", "33"], ["69", "71"], ["71", "201"], ["76", "74"], ["82", "81"], ["125", "123"], ["155", "152"], ["193", "166"], ["41", "44"], ["44", "52"], ["44", "69"], ["47", "44"], ["99", "104"], ["102", "112"], ["102", "94"], ["107", "104"], ["133", "136"], ["136", "144"], ["136", "128"], ["139", "136"], ["171", "174"], ["174", "189"], ["174", "193"], ["177", "174"], ["67", "47"], ["104", "102"], ["110", "107"], ["142", "139"], ["180", "177"], ["52", "55"], ["55", "64"], ["55", "67"], ["58", "55"], ["111", "116"], ["116", "110"], ["143", "148"], ["148", "142"], ["182", "180"], ["61", "58"], ["112", "111"], ["144", "143"], ["183", "182"], ["63", "61"], ["185", "183"], ["64", "63"], ["189", "185"], ["17", "22"], ["71", "201"], ["18", "201"], ["20", "201"], ["24", "201"], ["24", "201"], ["30", "201"], ["28", "201"], ["28", "201"], ["34", "201"], ["33", "201"], ["33", "201"], ["41", "201"], ["44", "201"], ["44", "201"], ["44", "201"], ["69", "201"], ["69", "201"], ["52", "201"], ["55", "201"], ["55", "201"], ["55", "201"], ["67", "201"], ["67", "201"], ["47", "201"], ["63", "201"], ["61", "201"], ["61", "201"], ["58", "201"], ["150", "201"], ["17", "18"], ["22", "20"], ["26", "24"], ["30", "28"], ["74", "72"], ["74", "72"], ["81", "79"], ["81", "79"], ["152", "150"], ["152", "150"], ["152", "150"], ["17", "88"], ["17", "120"], ["17", "160"], ["17", "195"], ["195", "197"], ["17", "197"], ["17", "22"], ["22", "26"], ["17", "26"], ["26", "30"], ["17", "30"], ["34", "33"], ["34", "33"], ["17", "33"], ["17", "71"], ["20", "74"], ["17", "74"], ["76", "74"], ["76", "74"], ["82", "81"], ["82", "81"], ["76", "81"], ["17", "81"], ["88", "91"], ["94", "91"], ["17", "91"], ["82", "91"], ["91", "94"], ["17", "94"], ["120", "123"], ["128", "123"], ["17", "123"], ["125", "123"], ["125", "123"], ["123", "128"], ["17", "128"], ["125", "152"], ["17", "152"], ["81", "152"], ["136", "152"], ["104", "152"], ["34", "152"], ["160", "163"], ["166", "163"], ["17", "163"], ["152", "163"], ["163", "166"], ["185", "166"], ["17", "166"], ["28", "34"], ["17", "34"], ["17", "41"], ["17", "69"], ["24", "76"], ["17", "76"], ["74", "82"], ["17", "82"], ["17", "99"], ["91", "125"], ["17", "125"], ["17", "133"], ["34", "155"], ["17", "155"], ["17", "171"], ["30", "193"], ["180", "193"], ["148", "193"], ["116", "193"], ["17", "193"], ["41", "44"], ["47", "44"], ["17", "44"], ["20", "44"], ["44", "47"], ["17", "47"], ["99", "102"], ["107", "102"], ["17", "102"], ["104", "102"], ["104", "102"], ["102", "107"], ["17", "107"], ["116", "110"], ["133", "136"], ["139", "136"], ["17", "136"], ["81", "136"], ["104", "136"], ["136", "139"], ["17", "139"], ["148", "142"], ["171", "174"], ["177", "174"], ["17", "174"], ["152", "174"], ["185", "177"], ["17", "177"], ["17", "52"], ["30", "67"], ["61", "67"], ["17", "67"], ["81", "104"], ["17", "104"], ["185", "180"], ["17", "180"], ["183", "180"], ["183", "180"], ["52", "55"], ["58", "55"], ["17", "55"], ["24", "55"], ["55", "58"], ["17", "58"], ["30", "116"], ["17", "116"], ["30", "148"], ["116", "148"], ["17", "148"], ["183", "182"], ["183", "182"], ["17", "182"], ["30", "61"], ["67", "61"], ["17", "61"], ["64", "61"], ["17", "183"], ["185", "183"], ["185", "183"], ["185", "183"], ["185", "183"], ["64", "63"], ["17", "63"], ["30", "185"], ["193", "185"], ["180", "185"], ["148", "185"], ["116", "185"], ["17", "185"], ["163", "185"], ["174", "185"], ["189", "185"], ["189", "185"], ["17", "64"], ["17", "189"], ["34", "189"], ["33", "120"], ["33", "81"], ["33", "163"], ["33", "69"], ["33", "150"], ["33", "197"], ["33", "74"], ["33", "76"], ["33", "91"], ["33", "44"], ["33", "195"], ["33", "79"], ["33", "152"], ["33", "88"], ["33", "155"], ["33", "160"], ["33", "72"], ["33", "123"], ["33", "82"], ["33", "71"], ["33", "41"], ["33", "125"], ["91", "94"], ["91", "102"], ["91", "104"], ["91", "91"], ["91", "99"], ["123", "136"], ["123", "128"], ["123", "123"], ["123", "125"], ["123", "133"], ["163", "163"], ["163", "174"], ["163", "171"], ["163", "193"], ["163", "166"], ["44", "52"], ["44", "67"], ["44", "44"], ["44", "47"], ["44", "55"], ["102", "107"], ["102", "102"], ["102", "104"], ["102", "112"], ["102", "111"], ["102", "116"], ["102", "110"], ["136", "136"], ["136", "144"], ["136", "148"], ["136", "139"], ["136", "142"], ["136", "143"], ["174", "185"], ["174", "189"], ["174", "174"], ["174", "182"], ["174", "180"], ["174", "183"], ["174", "177"], ["55", "64"], ["55", "58"], ["55", "61"], ["55", "63"], ["55", "55"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(IDENTIFIER,n,n = ini())<SUB>2</SUB>>", "23": "<(IDENTIFIER,this,ini())<SUB>2</SUB>>", "25": "<(IDENTIFIER,m,m = ini())<SUB>3</SUB>>", "27": "<(IDENTIFIER,this,ini())<SUB>3</SUB>>", "29": "<(IDENTIFIER,k,k = ini())<SUB>4</SUB>>", "31": "<(IDENTIFIER,this,ini())<SUB>4</SUB>>", "33": "<(&lt;operator&gt;.notEquals,k % 2 != 0)<SUB>6</SUB>>", "35": "<(IDENTIFIER,k,k % 2)<SUB>6</SUB>>", "37": "<(LITERAL,0,k % 2 != 0)<SUB>6</SUB>>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "51": "<(LOCAL,int j: int)<SUB>8</SUB>>", "53": "<(IDENTIFIER,j,int j = 0)<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>8</SUB>>", "57": "<(IDENTIFIER,m,j &lt; m)<SUB>8</SUB>>", "59": "<(IDENTIFIER,j,j++)<SUB>8</SUB>>", "61": "<(print,print(-1 + &quot; &quot;))<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.addition,-1 + &quot; &quot;)<SUB>9</SUB>>", "65": "<(LITERAL,1,-1)<SUB>9</SUB>>", "67": "<(println,println())<SUB>11</SUB>>", "69": "<(flush,flush())<SUB>13</SUB>>", "71": "<(RETURN,return;,return;)<SUB>14</SUB>>", "73": "<(IDENTIFIER,hor,hor = new int[n][m - 1])<SUB>17</SUB>>", "75": "<(IDENTIFIER,n,new int[n][m - 1])<SUB>17</SUB>>", "77": "<(IDENTIFIER,m,m - 1)<SUB>17</SUB>>", "79": "<(&lt;operator&gt;.assignment,ver = new int[n - 1][m])<SUB>18</SUB>>", "81": "<(&lt;operator&gt;.alloc,new int[n - 1][m])>", "83": "<(IDENTIFIER,n,n - 1)<SUB>18</SUB>>", "85": "<(IDENTIFIER,m,new int[n - 1][m])<SUB>18</SUB>>", "87": "<(LOCAL,int i: int)<SUB>20</SUB>>", "89": "<(IDENTIFIER,i,int i = 0)<SUB>20</SUB>>", "91": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>20</SUB>>", "93": "<(IDENTIFIER,n,i &lt; n)<SUB>20</SUB>>", "95": "<(IDENTIFIER,i,i++)<SUB>20</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m - 1); j++),for (int j = 0; Some(j &lt; m - 1); j++))<SUB>21</SUB>>", "99": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>21</SUB>>", "101": "<(LITERAL,0,int j = 0)<SUB>21</SUB>>", "103": "<(IDENTIFIER,j,j &lt; m - 1)<SUB>21</SUB>>", "105": "<(IDENTIFIER,m,m - 1)<SUB>21</SUB>>", "107": "<(&lt;operator&gt;.postIncrement,j++)<SUB>21</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.indexAccess,hor[i][j])<SUB>22</SUB>>", "113": "<(IDENTIFIER,hor,hor[i][j] = ini())<SUB>22</SUB>>", "115": "<(IDENTIFIER,j,hor[i][j] = ini())<SUB>22</SUB>>", "117": "<(IDENTIFIER,this,ini())<SUB>22</SUB>>", "119": "<(LOCAL,int i: int)<SUB>25</SUB>>", "121": "<(IDENTIFIER,i,int i = 0)<SUB>25</SUB>>", "123": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>25</SUB>>", "125": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>25</SUB>>", "127": "<(LITERAL,1,n - 1)<SUB>25</SUB>>", "129": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "131": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>26</SUB>>", "133": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>26</SUB>>", "135": "<(LITERAL,0,int j = 0)<SUB>26</SUB>>", "137": "<(IDENTIFIER,j,j &lt; m)<SUB>26</SUB>>", "139": "<(&lt;operator&gt;.postIncrement,j++)<SUB>26</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "143": "<(&lt;operator&gt;.indexAccess,ver[i][j])<SUB>27</SUB>>", "145": "<(IDENTIFIER,ver,ver[i][j] = ini())<SUB>27</SUB>>", "147": "<(IDENTIFIER,j,ver[i][j] = ini())<SUB>27</SUB>>", "149": "<(IDENTIFIER,this,ini())<SUB>27</SUB>>", "151": "<(IDENTIFIER,dp,dp = new Integer[n][m][k + 1])<SUB>31</SUB>>", "153": "<(IDENTIFIER,n,new Integer[n][m][k + 1])<SUB>31</SUB>>", "155": "<(&lt;operator&gt;.addition,k + 1)<SUB>31</SUB>>", "157": "<(LITERAL,1,k + 1)<SUB>31</SUB>>", "159": "<(LOCAL,int i: int)<SUB>33</SUB>>", "161": "<(IDENTIFIER,i,int i = 0)<SUB>33</SUB>>", "163": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>33</SUB>>", "165": "<(IDENTIFIER,n,i &lt; n)<SUB>33</SUB>>", "167": "<(IDENTIFIER,i,i++)<SUB>33</SUB>>", "169": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; m); j++),for (int j = 0; Some(j &lt; m); j++))<SUB>34</SUB>>", "171": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>34</SUB>>", "173": "<(LITERAL,0,int j = 0)<SUB>34</SUB>>", "175": "<(IDENTIFIER,j,j &lt; m)<SUB>34</SUB>>", "177": "<(&lt;operator&gt;.postIncrement,j++)<SUB>34</SUB>>", "179": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>34</SUB>>", "181": "<(IDENTIFIER,this,print(2 * solve(i, j, k / 2) + &quot; &quot;))<SUB>35</SUB>>", "183": "<(&lt;operator&gt;.multiplication,2 * solve(i, j, k / 2))<SUB>35</SUB>>", "185": "<(solve,solve(i, j, k / 2))<SUB>35</SUB>>", "187": "<(IDENTIFIER,i,solve(i, j, k / 2))<SUB>35</SUB>>", "189": "<(&lt;operator&gt;.division,k / 2)<SUB>35</SUB>>", "191": "<(LITERAL,2,k / 2)<SUB>35</SUB>>", "193": "<(println,println())<SUB>37</SUB>>", "195": "<(flush,flush())<SUB>40</SUB>>", "197": "<(close,close())<SUB>41</SUB>>", "199": "<(MODIFIER,PUBLIC)>", "201": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}