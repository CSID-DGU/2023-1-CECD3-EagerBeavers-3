{"edges": [["19", "21"], ["19", "125"], ["19", "126"], ["19", "127"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "35"], ["21", "37"], ["21", "42"], ["21", "43"], ["21", "47"], ["21", "48"], ["21", "52"], ["21", "53"], ["21", "60"], ["21", "61"], ["21", "72"], ["21", "73"], ["21", "90"], ["21", "91"], ["21", "108"], ["21", "123"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["29", "30"], ["29", "31"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["37", "38"], ["37", "41"], ["38", "39"], ["38", "40"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["61", "62"], ["61", "63"], ["63", "64"], ["63", "71"], ["64", "65"], ["64", "68"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "89"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "86"], ["83", "84"], ["83", "85"], ["86", "87"], ["86", "88"], ["91", "92"], ["91", "93"], ["93", "94"], ["93", "107"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "100"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["108", "109"], ["108", "116"], ["108", "119"], ["109", "110"], ["109", "113"], ["110", "111"], ["110", "112"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["119", "120"], ["120", "121"], ["120", "122"], ["123", "124"], ["22", "28"], ["25", "32"], ["29", "35"], ["35", "38"], ["37", "45"], ["43", "50"], ["48", "56"], ["53", "65"], ["61", "79"], ["73", "97"], ["91", "110"], ["123", "127"], ["24", "22"], ["26", "25"], ["31", "29"], ["38", "37"], ["45", "43"], ["50", "48"], ["55", "53"], ["63", "61"], ["75", "73"], ["93", "91"], ["109", "116"], ["109", "120"], ["116", "123"], ["28", "26"], ["32", "31"], ["56", "55"], ["64", "63"], ["76", "75"], ["94", "93"], ["110", "109"], ["110", "113"], ["113", "109"], ["120", "123"], ["65", "68"], ["68", "64"], ["78", "76"], ["96", "94"], ["79", "83"], ["80", "78"], ["97", "101"], ["98", "96"], ["82", "80"], ["100", "98"], ["83", "86"], ["86", "82"], ["101", "104"], ["104", "100"], ["19", "24"], ["20", "127"], ["22", "127"], ["25", "127"], ["25", "127"], ["29", "127"], ["31", "127"], ["29", "127"], ["29", "127"], ["35", "127"], ["37", "127"], ["37", "127"], ["43", "127"], ["50", "127"], ["48", "127"], ["48", "127"], ["55", "127"], ["53", "127"], ["53", "127"], ["64", "127"], ["68", "127"], ["64", "127"], ["63", "127"], ["63", "127"], ["61", "127"], ["61", "127"], ["75", "127"], ["73", "127"], ["73", "127"], ["94", "127"], ["98", "127"], ["100", "127"], ["104", "127"], ["100", "127"], ["98", "127"], ["96", "127"], ["94", "127"], ["93", "127"], ["91", "127"], ["91", "127"], ["110", "127"], ["110", "127"], ["109", "127"], ["113", "127"], ["113", "127"], ["109", "127"], ["109", "127"], ["120", "127"], ["120", "127"], ["116", "127"], ["116", "127"], ["123", "127"], ["123", "127"], ["35", "127"], ["19", "20"], ["19", "22"], ["31", "29"], ["19", "37"], ["45", "43"], ["50", "48"], ["56", "53"], ["56", "53"], ["19", "53"], ["64", "61"], ["64", "61"], ["65", "61"], ["19", "61"], ["75", "73"], ["75", "73"], ["93", "91"], ["93", "91"], ["22", "25"], ["19", "25"], ["19", "35"], ["120", "123"], ["116", "123"], ["19", "123"], ["19", "31"], ["25", "45"], ["19", "45"], ["45", "50"], ["19", "50"], ["56", "55"], ["56", "55"], ["19", "55"], ["64", "63"], ["64", "63"], ["65", "63"], ["19", "63"], ["83", "75"], ["19", "75"], ["80", "75"], ["80", "75"], ["94", "93"], ["94", "93"], ["19", "93"], ["110", "109"], ["110", "109"], ["113", "109"], ["113", "109"], ["19", "116"], ["110", "116"], ["113", "116"], ["19", "32"], ["19", "56"], ["43", "56"], ["65", "64"], ["68", "64"], ["68", "64"], ["83", "76"], ["19", "76"], ["80", "76"], ["80", "76"], ["101", "94"], ["19", "94"], ["98", "94"], ["98", "94"], ["73", "110"], ["19", "110"], ["91", "110"], ["110", "113"], ["19", "113"], ["65", "113"], ["19", "120"], ["110", "120"], ["56", "65"], ["19", "65"], ["19", "68"], ["48", "68"], ["19", "78"], ["80", "78"], ["80", "78"], ["19", "96"], ["98", "96"], ["98", "96"], ["19", "80"], ["82", "80"], ["82", "80"], ["80", "98"], ["19", "98"], ["100", "98"], ["100", "98"], ["83", "82"], ["86", "82"], ["86", "82"], ["101", "100"], ["104", "100"], ["104", "100"], ["53", "83"], ["19", "83"], ["19", "86"], ["61", "86"], ["19", "101"], ["83", "101"], ["19", "104"], ["86", "104"], ["109", "120"], ["109", "116"], ["110", "113"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new InputReader(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new InputReader(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.assignment,prime = new boolean[n + 1])<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.alloc,new boolean[n + 1])>", "33": "<(IDENTIFIER,n,n + 1)<SUB>4</SUB>>", "35": "<(sieve,sieve())<SUB>5</SUB>>", "37": "<(&lt;operator&gt;.assignment,prime[1] = false)<SUB>6</SUB>>", "39": "<(IDENTIFIER,prime,prime[1] = false)<SUB>6</SUB>>", "41": "<(LITERAL,false,prime[1] = false)<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.assignment,long n = nl())<SUB>9</SUB>>", "45": "<(nl,nl())<SUB>9</SUB>>", "47": "<(LOCAL,long k: long)<SUB>10</SUB>>", "49": "<(IDENTIFIER,k,long k = nl())<SUB>10</SUB>>", "51": "<(IDENTIFIER,sc,nl())<SUB>10</SUB>>", "53": "<(&lt;operator&gt;.assignment,long b = 2 * n + 3)<SUB>11</SUB>>", "55": "<(&lt;operator&gt;.addition,2 * n + 3)<SUB>11</SUB>>", "57": "<(LITERAL,2,2 * n)<SUB>11</SUB>>", "59": "<(LITERAL,3,2 * n + 3)<SUB>11</SUB>>", "61": "<(&lt;operator&gt;.assignment,long c = n * n - 2 * k + n)<SUB>12</SUB>>", "63": "<(&lt;operator&gt;.addition,n * n - 2 * k + n)<SUB>12</SUB>>", "65": "<(&lt;operator&gt;.multiplication,n * n)<SUB>12</SUB>>", "67": "<(IDENTIFIER,n,n * n)<SUB>12</SUB>>", "69": "<(LITERAL,2,2 * k)<SUB>12</SUB>>", "71": "<(IDENTIFIER,n,n * n - 2 * k + n)<SUB>12</SUB>>", "73": "<(&lt;operator&gt;.assignment,long q1 = (b + (long) Math.sqrt(b * b - 4 * c)) / 2)<SUB>13</SUB>>", "75": "<(&lt;operator&gt;.division,(b + (long) Math.sqrt(b * b - 4 * c)) / 2)<SUB>13</SUB>>", "77": "<(IDENTIFIER,b,b + (long) Math.sqrt(b * b - 4 * c))<SUB>13</SUB>>", "79": "<(TYPE_REF,long,long)<SUB>13</SUB>>", "81": "<(IDENTIFIER,Math,Math.sqrt(b * b - 4 * c))<SUB>13</SUB>>", "83": "<(&lt;operator&gt;.multiplication,b * b)<SUB>13</SUB>>", "85": "<(IDENTIFIER,b,b * b)<SUB>13</SUB>>", "87": "<(LITERAL,4,4 * c)<SUB>13</SUB>>", "89": "<(LITERAL,2,(b + (long) Math.sqrt(b * b - 4 * c)) / 2)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.assignment,long q2 = (b - (long) Math.sqrt(b * b - 4 * c)) / 2)<SUB>14</SUB>>", "93": "<(&lt;operator&gt;.division,(b - (long) Math.sqrt(b * b - 4 * c)) / 2)<SUB>14</SUB>>", "95": "<(IDENTIFIER,b,b - (long) Math.sqrt(b * b - 4 * c))<SUB>14</SUB>>", "97": "<(TYPE_REF,long,long)<SUB>14</SUB>>", "99": "<(IDENTIFIER,Math,Math.sqrt(b * b - 4 * c))<SUB>14</SUB>>", "101": "<(&lt;operator&gt;.multiplication,b * b)<SUB>14</SUB>>", "103": "<(IDENTIFIER,b,b * b)<SUB>14</SUB>>", "105": "<(LITERAL,4,4 * c)<SUB>14</SUB>>", "107": "<(LITERAL,2,(b - (long) Math.sqrt(b * b - 4 * c)) / 2)<SUB>14</SUB>>", "109": "<(&lt;operator&gt;.logicalAnd,q1 &gt;= q2 &amp;&amp; q1 &lt;= n)<SUB>15</SUB>>", "111": "<(IDENTIFIER,q1,q1 &gt;= q2)<SUB>15</SUB>>", "113": "<(&lt;operator&gt;.lessEqualsThan,q1 &lt;= n)<SUB>15</SUB>>", "115": "<(IDENTIFIER,n,q1 &lt;= n)<SUB>15</SUB>>", "117": "<(IDENTIFIER,w,println(q1))<SUB>16</SUB>>", "119": "<(CONTROL_STRUCTURE,else,else)<SUB>18</SUB>>", "121": "<(IDENTIFIER,w,println(q2))<SUB>18</SUB>>", "123": "<(close,close())<SUB>23</SUB>>", "125": "<(MODIFIER,PUBLIC)>", "127": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}