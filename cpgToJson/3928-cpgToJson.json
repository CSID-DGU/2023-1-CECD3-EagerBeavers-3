{"edges": [["23", "24"], ["23", "25"], ["23", "508"], ["23", "509"], ["23", "510"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "44"], ["25", "45"], ["25", "49"], ["25", "50"], ["25", "53"], ["25", "57"], ["25", "58"], ["25", "61"], ["25", "65"], ["25", "68"], ["25", "70"], ["25", "71"], ["25", "75"], ["25", "137"], ["25", "138"], ["25", "145"], ["25", "146"], ["25", "151"], ["25", "152"], ["25", "155"], ["25", "161"], ["25", "182"], ["25", "237"], ["25", "243"], ["25", "249"], ["25", "254"], ["25", "260"], ["25", "328"], ["25", "334"], ["25", "339"], ["25", "340"], ["25", "349"], ["25", "506"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["33", "34"], ["34", "35"], ["34", "38"], ["34", "43"], ["35", "36"], ["35", "37"], ["38", "39"], ["38", "40"], ["40", "41"], ["40", "42"], ["45", "46"], ["45", "47"], ["47", "48"], ["50", "51"], ["50", "52"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["63", "64"], ["65", "66"], ["65", "67"], ["68", "69"], ["71", "72"], ["71", "73"], ["73", "74"], ["75", "76"], ["75", "77"], ["75", "80"], ["75", "83"], ["75", "85"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["83", "84"], ["85", "86"], ["85", "87"], ["85", "91"], ["85", "92"], ["85", "95"], ["85", "130"], ["87", "88"], ["87", "89"], ["89", "90"], ["92", "93"], ["92", "94"], ["95", "96"], ["95", "97"], ["95", "100"], ["95", "103"], ["95", "105"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["103", "104"], ["105", "106"], ["105", "108"], ["105", "114"], ["105", "119"], ["105", "125"], ["106", "107"], ["108", "109"], ["108", "112"], ["109", "110"], ["109", "111"], ["112", "113"], ["114", "115"], ["114", "118"], ["115", "116"], ["115", "117"], ["119", "120"], ["119", "121"], ["119", "124"], ["121", "122"], ["121", "123"], ["125", "126"], ["125", "127"], ["127", "128"], ["127", "129"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["138", "139"], ["138", "140"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "150"], ["152", "153"], ["152", "154"], ["155", "156"], ["155", "157"], ["157", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["161", "166"], ["161", "169"], ["161", "171"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["171", "175"], ["172", "173"], ["172", "174"], ["175", "176"], ["175", "179"], ["175", "181"], ["176", "177"], ["176", "178"], ["179", "180"], ["182", "183"], ["182", "184"], ["182", "187"], ["182", "190"], ["182", "192"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "189"], ["190", "191"], ["192", "193"], ["192", "194"], ["192", "203"], ["192", "204"], ["192", "211"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "198"], ["198", "199"], ["198", "200"], ["200", "201"], ["200", "202"], ["204", "205"], ["204", "206"], ["206", "207"], ["206", "210"], ["207", "208"], ["207", "209"], ["211", "212"], ["211", "215"], ["212", "213"], ["212", "214"], ["215", "216"], ["216", "217"], ["216", "230"], ["217", "218"], ["217", "227"], ["218", "219"], ["218", "224"], ["219", "220"], ["219", "221"], ["221", "222"], ["221", "223"], ["224", "225"], ["224", "226"], ["227", "228"], ["227", "229"], ["230", "231"], ["230", "234"], ["231", "232"], ["231", "233"], ["234", "235"], ["234", "236"], ["237", "238"], ["237", "239"], ["239", "240"], ["240", "241"], ["240", "242"], ["243", "244"], ["243", "245"], ["245", "246"], ["246", "247"], ["246", "248"], ["249", "250"], ["249", "253"], ["250", "251"], ["250", "252"], ["254", "255"], ["254", "256"], ["256", "257"], ["257", "258"], ["257", "259"], ["260", "261"], ["260", "262"], ["260", "265"], ["260", "268"], ["260", "270"], ["262", "263"], ["262", "264"], ["265", "266"], ["265", "267"], ["268", "269"], ["270", "271"], ["271", "272"], ["271", "277"], ["272", "273"], ["272", "276"], ["273", "274"], ["273", "275"], ["277", "278"], ["277", "281"], ["277", "283"], ["277", "284"], ["277", "289"], ["277", "290"], ["277", "293"], ["277", "294"], ["277", "298"], ["277", "314"], ["277", "323"], ["278", "279"], ["278", "280"], ["281", "282"], ["284", "285"], ["284", "286"], ["286", "287"], ["286", "288"], ["290", "291"], ["290", "292"], ["294", "295"], ["294", "296"], ["296", "297"], ["298", "299"], ["298", "301"], ["299", "300"], ["301", "302"], ["301", "303"], ["301", "307"], ["303", "304"], ["303", "305"], ["305", "306"], ["307", "308"], ["307", "309"], ["309", "310"], ["309", "311"], ["311", "312"], ["311", "313"], ["314", "315"], ["314", "318"], ["315", "316"], ["315", "317"], ["318", "319"], ["318", "322"], ["319", "320"], ["319", "321"], ["323", "324"], ["323", "327"], ["324", "325"], ["324", "326"], ["328", "329"], ["328", "330"], ["330", "331"], ["331", "332"], ["331", "333"], ["334", "335"], ["334", "336"], ["334", "337"], ["337", "338"], ["340", "341"], ["340", "342"], ["342", "343"], ["342", "344"], ["344", "345"], ["344", "348"], ["345", "346"], ["345", "347"], ["349", "350"], ["349", "356"], ["349", "501"], ["350", "351"], ["350", "354"], ["351", "352"], ["351", "353"], ["354", "355"], ["356", "357"], ["356", "358"], ["356", "367"], ["356", "368"], ["356", "372"], ["356", "373"], ["356", "377"], ["356", "378"], ["356", "382"], ["356", "431"], ["356", "432"], ["356", "8"], ["356", "435"], ["356", "438"], ["356", "439"], ["356", "466"], ["356", "476"], ["356", "479"], ["358", "359"], ["358", "360"], ["360", "361"], ["360", "362"], ["362", "363"], ["362", "366"], ["363", "364"], ["363", "365"], ["368", "369"], ["368", "370"], ["370", "371"], ["373", "374"], ["373", "375"], ["375", "376"], ["378", "379"], ["378", "380"], ["380", "381"], ["382", "383"], ["382", "385"], ["383", "384"], ["385", "386"], ["385", "387"], ["385", "391"], ["385", "392"], ["385", "398"], ["387", "388"], ["387", "389"], ["389", "390"], ["392", "393"], ["392", "394"], ["394", "395"], ["395", "396"], ["395", "397"], ["398", "399"], ["398", "401"], ["399", "400"], ["401", "402"], ["401", "403"], ["401", "407"], ["401", "416"], ["403", "404"], ["403", "405"], ["405", "406"], ["407", "408"], ["407", "413"], ["408", "409"], ["408", "410"], ["410", "411"], ["410", "412"], ["413", "414"], ["413", "415"], ["416", "417"], ["416", "426"], ["417", "418"], ["417", "419"], ["419", "420"], ["419", "421"], ["421", "422"], ["421", "425"], ["422", "423"], ["422", "424"], ["426", "427"], ["426", "430"], ["427", "428"], ["427", "429"], ["432", "433"], ["432", "434"], ["435", "436"], ["435", "437"], ["438", "7"], ["439", "440"], ["439", "441"], ["439", "444"], ["439", "449"], ["439", "451"], ["441", "442"], ["441", "443"], ["444", "445"], ["444", "446"], ["446", "447"], ["446", "448"], ["449", "450"], ["451", "452"], ["451", "461"], ["452", "453"], ["452", "458"], ["453", "454"], ["453", "455"], ["455", "456"], ["455", "457"], ["458", "459"], ["458", "460"], ["461", "462"], ["461", "463"], ["463", "464"], ["463", "465"], ["466", "467"], ["466", "469"], ["467", "468"], ["469", "470"], ["469", "473"], ["469", "475"], ["470", "471"], ["470", "472"], ["473", "474"], ["476", "477"], ["476", "478"], ["479", "480"], ["479", "481"], ["479", "484"], ["479", "487"], ["479", "489"], ["481", "482"], ["481", "483"], ["484", "485"], ["484", "486"], ["487", "488"], ["489", "490"], ["490", "491"], ["490", "492"], ["492", "493"], ["492", "498"], ["493", "494"], ["493", "497"], ["494", "495"], ["494", "496"], ["498", "499"], ["498", "500"], ["501", "502"], ["502", "503"], ["503", "504"], ["503", "505"], ["506", "507"], ["26", "29"], ["29", "32"], ["30", "37"], ["33", "47"], ["45", "50"], ["50", "55"], ["53", "58"], ["58", "63"], ["61", "67"], ["65", "68"], ["68", "73"], ["71", "77"], ["138", "148"], ["146", "152"], ["152", "158"], ["155", "163"], ["237", "246"], ["243", "250"], ["249", "257"], ["254", "262"], ["328", "337"], ["334", "345"], ["340", "351"], ["506", "510"], ["28", "26"], ["32", "30"], ["47", "45"], ["55", "53"], ["63", "61"], ["67", "65"], ["73", "71"], ["77", "80"], ["80", "89"], ["80", "141"], ["83", "80"], ["140", "138"], ["148", "146"], ["157", "155"], ["163", "166"], ["166", "172"], ["166", "184"], ["169", "166"], ["171", "169"], ["184", "187"], ["187", "200"], ["187", "240"], ["190", "187"], ["239", "237"], ["245", "243"], ["250", "249"], ["256", "254"], ["262", "265"], ["265", "273"], ["265", "331"], ["268", "265"], ["330", "328"], ["337", "334"], ["342", "340"], ["350", "363"], ["350", "503"], ["35", "42"], ["38", "33"], ["87", "92"], ["92", "97"], ["130", "83"], ["141", "140"], ["158", "157"], ["172", "178"], ["194", "207"], ["204", "212"], ["240", "239"], ["246", "245"], ["257", "256"], ["331", "330"], ["344", "342"], ["351", "350"], ["351", "354"], ["354", "350"], ["358", "370"], ["368", "375"], ["373", "380"], ["378", "383"], ["432", "437"], ["435", "438"], ["438", "441"], ["476", "481"], ["37", "35"], ["40", "38"], ["89", "87"], ["97", "100"], ["100", "106"], ["100", "131"], ["103", "100"], ["131", "134"], ["134", "130"], ["176", "179"], ["179", "171"], ["196", "194"], ["206", "204"], ["212", "221"], ["212", "190"], ["272", "280"], ["272", "268"], ["345", "344"], ["360", "358"], ["370", "368"], ["375", "373"], ["380", "378"], ["383", "389"], ["383", "432"], ["437", "435"], ["441", "448"], ["444", "455"], ["444", "467"], ["449", "448"], ["467", "470"], ["467", "476"], ["481", "484"], ["484", "494"], ["484", "506"], ["487", "484"], ["503", "506"], ["42", "40"], ["106", "109"], ["108", "115"], ["114", "121"], ["119", "127"], ["125", "103"], ["178", "176"], ["198", "196"], ["207", "206"], ["273", "272"], ["278", "281"], ["281", "286"], ["284", "290"], ["290", "296"], ["294", "299"], ["323", "268"], ["362", "360"], ["387", "395"], ["392", "399"], ["446", "444"], ["461", "449"], ["470", "473"], ["473", "475"], ["475", "510"], ["490", "487"], ["109", "112"], ["112", "108"], ["115", "114"], ["121", "119"], ["127", "125"], ["200", "198"], ["217", "231"], ["217", "190"], ["230", "190"], ["280", "278"], ["286", "284"], ["296", "294"], ["299", "305"], ["299", "315"], ["315", "319"], ["315", "324"], ["318", "324"], ["324", "323"], ["363", "362"], ["389", "387"], ["394", "392"], ["399", "383"], ["399", "405"], ["448", "446"], ["453", "458"], ["453", "463"], ["458", "463"], ["463", "461"], ["492", "490"], ["218", "217"], ["218", "227"], ["227", "217"], ["231", "234"], ["234", "230"], ["303", "311"], ["307", "299"], ["319", "318"], ["395", "394"], ["403", "410"], ["407", "422"], ["416", "399"], ["455", "453"], ["493", "498"], ["498", "492"], ["219", "224"], ["224", "218"], ["305", "303"], ["309", "307"], ["405", "403"], ["408", "413"], ["413", "407"], ["417", "427"], ["426", "416"], ["494", "493"], ["221", "219"], ["311", "309"], ["410", "408"], ["419", "417"], ["427", "426"], ["421", "419"], ["422", "421"], ["23", "28"], ["475", "510"], ["24", "510"], ["26", "510"], ["29", "510"], ["30", "510"], ["38", "510"], ["38", "510"], ["38", "510"], ["33", "510"], ["47", "510"], ["45", "510"], ["45", "510"], ["50", "510"], ["53", "510"], ["53", "510"], ["53", "510"], ["58", "510"], ["61", "510"], ["61", "510"], ["61", "510"], ["65", "510"], ["68", "510"], ["68", "510"], ["71", "510"], ["71", "510"], ["80", "510"], ["138", "510"], ["140", "510"], ["138", "510"], ["138", "510"], ["146", "510"], ["148", "510"], ["146", "510"], ["146", "510"], ["152", "510"], ["152", "510"], ["155", "510"], ["155", "510"], ["155", "510"], ["237", "510"], ["239", "510"], ["237", "510"], ["237", "510"], ["243", "510"], ["243", "510"], ["249", "510"], ["249", "510"], ["254", "510"], ["254", "510"], ["254", "510"], ["262", "510"], ["265", "510"], ["265", "510"], ["328", "510"], ["328", "510"], ["334", "510"], ["334", "510"], ["334", "510"], ["340", "510"], ["340", "510"], ["351", "510"], ["350", "510"], ["354", "510"], ["350", "510"], ["350", "510"], ["360", "510"], ["362", "510"], ["360", "510"], ["358", "510"], ["358", "510"], ["368", "510"], ["368", "510"], ["368", "510"], ["373", "510"], ["375", "510"], ["373", "510"], ["373", "510"], ["380", "510"], ["378", "510"], ["383", "510"], ["383", "510"], ["432", "510"], ["435", "510"], ["438", "510"], ["438", "510"], ["441", "510"], ["444", "510"], ["444", "510"], ["444", "510"], ["467", "510"], ["467", "510"], ["470", "510"], ["473", "510"], ["473", "510"], ["453", "510"], ["458", "510"], ["461", "510"], ["461", "510"], ["461", "510"], ["449", "510"], ["387", "510"], ["394", "510"], ["392", "510"], ["399", "510"], ["403", "510"], ["407", "510"], ["407", "510"], ["407", "510"], ["421", "510"], ["416", "510"], ["426", "510"], ["416", "510"], ["416", "510"], ["272", "510"], ["272", "510"], ["278", "510"], ["284", "510"], ["284", "510"], ["284", "510"], ["290", "510"], ["296", "510"], ["299", "510"], ["315", "510"], ["315", "510"], ["318", "510"], ["318", "510"], ["318", "510"], ["323", "510"], ["323", "510"], ["268", "510"], ["303", "510"], ["309", "510"], ["307", "510"], ["196", "510"], ["196", "510"], ["194", "510"], ["194", "510"], ["206", "510"], ["206", "510"], ["204", "510"], ["204", "510"], ["212", "510"], ["212", "510"], ["212", "510"], ["221", "510"], ["221", "510"], ["218", "510"], ["218", "510"], ["217", "510"], ["227", "510"], ["217", "510"], ["217", "510"], ["230", "510"], ["234", "510"], ["234", "510"], ["230", "510"], ["230", "510"], ["190", "510"], ["171", "510"], ["179", "510"], ["179", "510"], ["171", "510"], ["169", "510"], ["89", "510"], ["87", "510"], ["87", "510"], ["92", "510"], ["97", "510"], ["100", "510"], ["100", "510"], ["130", "510"], ["134", "510"], ["130", "510"], ["130", "510"], ["83", "510"], ["106", "510"], ["112", "510"], ["108", "510"], ["108", "510"], ["114", "510"], ["114", "510"], ["119", "510"], ["119", "510"], ["125", "510"], ["125", "510"], ["103", "510"], ["334", "510"], ["23", "24"], ["23", "26"], ["23", "30"], ["47", "45"], ["23", "50"], ["55", "53"], ["23", "58"], ["63", "61"], ["23", "65"], ["73", "71"], ["140", "138"], ["140", "138"], ["148", "146"], ["148", "146"], ["50", "152"], ["119", "152"], ["23", "152"], ["157", "155"], ["239", "237"], ["245", "243"], ["23", "249"], ["256", "254"], ["330", "328"], ["342", "340"], ["342", "340"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["35", "33"], ["38", "33"], ["65", "68"], ["23", "68"], ["23", "77"], ["23", "163"], ["176", "171"], ["179", "171"], ["23", "171"], ["23", "184"], ["23", "262"], ["23", "334"], ["328", "334"], ["337", "334"], ["503", "506"], ["476", "506"], ["490", "506"], ["23", "506"], ["23", "35"], ["23", "43"], ["29", "47"], ["23", "47"], ["23", "55"], ["23", "63"], ["45", "73"], ["23", "73"], ["77", "80"], ["83", "80"], ["23", "80"], ["73", "80"], ["80", "83"], ["23", "83"], ["89", "87"], ["58", "92"], ["134", "92"], ["23", "92"], ["134", "130"], ["134", "130"], ["141", "140"], ["141", "140"], ["23", "140"], ["141", "148"], ["23", "148"], ["141", "148"], ["152", "157"], ["23", "157"], ["163", "166"], ["169", "166"], ["23", "166"], ["152", "166"], ["166", "169"], ["23", "169"], ["184", "187"], ["190", "187"], ["23", "187"], ["166", "187"], ["187", "190"], ["23", "190"], ["196", "194"], ["196", "194"], ["53", "204"], ["194", "204"], ["23", "204"], ["187", "239"], ["23", "239"], ["246", "245"], ["246", "245"], ["257", "256"], ["257", "256"], ["262", "265"], ["268", "265"], ["23", "265"], ["187", "265"], ["265", "268"], ["286", "268"], ["23", "268"], ["331", "330"], ["331", "330"], ["23", "337"], ["286", "342"], ["23", "342"], ["344", "342"], ["344", "342"], ["351", "350"], ["351", "350"], ["354", "350"], ["360", "358"], ["360", "358"], ["370", "368"], ["375", "373"], ["380", "378"], ["23", "432"], ["23", "435"], ["35", "38"], ["23", "38"], ["23", "97"], ["58", "141"], ["134", "141"], ["23", "141"], ["80", "141"], ["152", "158"], ["23", "158"], ["23", "176"], ["23", "181"], ["187", "240"], ["23", "240"], ["23", "246"], ["148", "246"], ["23", "257"], ["246", "257"], ["23", "331"], ["257", "331"], ["345", "344"], ["345", "344"], ["23", "344"], ["340", "351"], ["23", "351"], ["138", "354"], ["23", "354"], ["435", "438"], ["23", "438"], ["23", "441"], ["33", "476"], ["23", "476"], ["23", "481"], ["47", "89"], ["112", "89"], ["23", "89"], ["97", "100"], ["103", "100"], ["23", "100"], ["87", "100"], ["100", "103"], ["23", "103"], ["112", "108"], ["80", "114"], ["23", "114"], ["53", "125"], ["119", "125"], ["125", "134"], ["23", "134"], ["58", "134"], ["92", "134"], ["176", "179"], ["23", "179"], ["146", "196"], ["23", "196"], ["71", "196"], ["53", "206"], ["194", "206"], ["23", "206"], ["68", "212"], ["221", "212"], ["234", "212"], ["119", "212"], ["23", "212"], ["204", "212"], ["237", "272"], ["23", "272"], ["23", "278"], ["286", "284"], ["286", "284"], ["23", "290"], ["296", "294"], ["23", "323"], ["23", "345"], ["331", "345"], ["342", "360"], ["23", "360"], ["362", "360"], ["362", "360"], ["363", "370"], ["23", "370"], ["370", "375"], ["23", "375"], ["358", "380"], ["23", "380"], ["378", "383"], ["389", "383"], ["23", "383"], ["389", "387"], ["394", "392"], ["441", "444"], ["449", "444"], ["23", "444"], ["373", "444"], ["444", "449"], ["23", "449"], ["249", "467"], ["432", "467"], ["458", "467"], ["323", "467"], ["23", "467"], ["23", "475"], ["481", "484"], ["487", "484"], ["23", "484"], ["375", "484"], ["484", "487"], ["23", "487"], ["33", "503"], ["23", "503"], ["50", "106"], ["119", "106"], ["23", "106"], ["68", "119"], ["23", "119"], ["53", "119"], ["108", "119"], ["106", "119"], ["23", "125"], ["58", "125"], ["134", "125"], ["278", "281"], ["23", "281"], ["296", "318"], ["23", "318"], ["363", "362"], ["363", "362"], ["23", "362"], ["23", "458"], ["453", "461"], ["23", "461"], ["373", "461"], ["453", "461"], ["33", "470"], ["23", "470"], ["470", "473"], ["23", "473"], ["476", "490"], ["23", "490"], ["368", "490"], ["373", "490"], ["461", "490"], ["89", "112"], ["23", "112"], ["218", "217"], ["218", "217"], ["227", "217"], ["227", "217"], ["155", "230"], ["171", "230"], ["234", "230"], ["234", "230"], ["23", "286"], ["265", "286"], ["281", "296"], ["23", "296"], ["294", "299"], ["305", "299"], ["23", "299"], ["305", "303"], ["309", "307"], ["309", "307"], ["290", "315"], ["307", "315"], ["23", "315"], ["23", "363"], ["345", "363"], ["383", "389"], ["23", "389"], ["254", "394"], ["318", "394"], ["392", "399"], ["405", "399"], ["23", "399"], ["405", "403"], ["53", "407"], ["61", "416"], ["309", "416"], ["23", "416"], ["438", "453"], ["461", "453"], ["23", "453"], ["373", "453"], ["461", "453"], ["368", "492"], ["23", "492"], ["373", "492"], ["461", "492"], ["61", "218"], ["23", "227"], ["194", "227"], ["221", "234"], ["23", "234"], ["221", "234"], ["290", "307"], ["23", "307"], ["368", "493"], ["23", "493"], ["299", "305"], ["23", "305"], ["23", "309"], ["61", "309"], ["399", "405"], ["23", "405"], ["61", "426"], ["309", "426"], ["23", "426"], ["212", "221"], ["23", "221"], ["212", "221"], ["155", "421"], ["23", "421"], ["80", "134"], ["80", "80"], ["80", "100"], ["80", "131"], ["80", "92"], ["80", "87"], ["80", "97"], ["80", "130"], ["80", "89"], ["80", "83"], ["166", "176"], ["166", "172"], ["166", "169"], ["166", "179"], ["166", "178"], ["166", "171"], ["166", "166"], ["187", "196"], ["187", "204"], ["187", "206"], ["187", "190"], ["187", "194"], ["187", "200"], ["187", "198"], ["187", "187"], ["187", "207"], ["187", "212"], ["265", "272"], ["265", "268"], ["265", "273"], ["265", "265"], ["350", "383"], ["350", "435"], ["350", "358"], ["350", "370"], ["350", "503"], ["350", "378"], ["350", "362"], ["350", "437"], ["350", "446"], ["350", "380"], ["350", "368"], ["350", "448"], ["350", "441"], ["350", "360"], ["350", "373"], ["350", "467"], ["350", "375"], ["350", "506"], ["350", "432"], ["350", "444"], ["350", "363"], ["350", "438"], ["351", "354"], ["100", "114"], ["100", "112"], ["100", "100"], ["100", "127"], ["100", "108"], ["100", "109"], ["100", "115"], ["100", "103"], ["100", "119"], ["100", "121"], ["100", "106"], ["100", "125"], ["212", "224"], ["212", "217"], ["212", "221"], ["212", "218"], ["212", "219"], ["272", "290"], ["272", "281"], ["272", "324"], ["272", "315"], ["272", "296"], ["272", "278"], ["272", "323"], ["272", "284"], ["272", "280"], ["272", "286"], ["272", "299"], ["272", "294"], ["383", "383"], ["383", "392"], ["383", "394"], ["383", "389"], ["383", "395"], ["383", "387"], ["383", "399"], ["444", "446"], ["444", "448"], ["444", "455"], ["444", "449"], ["444", "453"], ["444", "461"], ["444", "463"], ["444", "444"], ["467", "484"], ["467", "476"], ["467", "470"], ["467", "473"], ["467", "481"], ["467", "506"], ["467", "475"], ["484", "490"], ["484", "494"], ["484", "484"], ["484", "492"], ["484", "498"], ["484", "493"], ["484", "487"], ["217", "230"], ["217", "231"], ["217", "234"], ["299", "311"], ["299", "305"], ["299", "307"], ["299", "309"], ["299", "299"], ["299", "303"], ["315", "319"], ["315", "318"], ["399", "403"], ["399", "426"], ["399", "408"], ["399", "416"], ["399", "405"], ["399", "410"], ["399", "413"], ["399", "417"], ["399", "419"], ["399", "427"], ["399", "421"], ["399", "422"], ["399", "399"], ["399", "407"], ["453", "458"], ["218", "227"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY sc = new MyScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new MyScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new MyScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "39": "<(IDENTIFIER,$obj1,new BufferedOutputStream(System.out))>", "41": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "43": "<(IDENTIFIER,$obj1,&lt;empty&gt;)>", "45": "<(&lt;operator&gt;.assignment,int k = nextInt())<SUB>4</SUB>>", "47": "<(nextInt,nextInt())<SUB>4</SUB>>", "49": "<(LOCAL,int cur: int)<SUB>5</SUB>>", "51": "<(IDENTIFIER,cur,int cur = 0)<SUB>5</SUB>>", "53": "<(&lt;operator&gt;.assignment,a = new long[75007])<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.alloc,new long[75007])>", "57": "<(LOCAL,long sum: long)<SUB>6</SUB>>", "59": "<(IDENTIFIER,sum,long sum = 0)<SUB>6</SUB>>", "61": "<(&lt;operator&gt;.assignment,type = new int[75007])<SUB>7</SUB>>", "63": "<(&lt;operator&gt;.alloc,new int[75007])>", "65": "<(&lt;operator&gt;.assignment,map = new HashMap&lt;&gt;())<SUB>8</SUB>>", "67": "<(&lt;operator&gt;.alloc,new HashMap&lt;&gt;())<SUB>8</SUB>>", "69": "<(IDENTIFIER,map,new HashMap&lt;&gt;())<SUB>8</SUB>>", "71": "<(&lt;operator&gt;.assignment,long[] typeSum = new long[k])<SUB>9</SUB>>", "73": "<(&lt;operator&gt;.alloc,new long[k])>", "75": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); i++),for (int i = 0; Some(i &lt; k); i++))<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "79": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "81": "<(IDENTIFIER,i,i &lt; k)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "85": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "87": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>11</SUB>>", "89": "<(nextInt,nextInt())<SUB>11</SUB>>", "91": "<(LOCAL,long temp: long)<SUB>11</SUB>>", "93": "<(IDENTIFIER,temp,long temp = sum)<SUB>11</SUB>>", "95": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>12</SUB>>", "97": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>12</SUB>>", "99": "<(LITERAL,0,int j = 0)<SUB>12</SUB>>", "101": "<(IDENTIFIER,j,j &lt; n)<SUB>12</SUB>>", "103": "<(&lt;operator&gt;.postIncrement,j++)<SUB>12</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>12</SUB>>", "107": "<(IDENTIFIER,cur,cur++)<SUB>13</SUB>>", "109": "<(&lt;operator&gt;.indexAccess,a[cur])<SUB>14</SUB>>", "111": "<(IDENTIFIER,cur,a[cur] = nextLong())<SUB>14</SUB>>", "113": "<(IDENTIFIER,sc,nextLong())<SUB>14</SUB>>", "115": "<(&lt;operator&gt;.indexAccess,type[cur])<SUB>15</SUB>>", "117": "<(IDENTIFIER,cur,type[cur] = i)<SUB>15</SUB>>", "119": "<(put,put(a[cur], cur))<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.indexAccess,a[cur])<SUB>16</SUB>>", "123": "<(IDENTIFIER,cur,put(a[cur], cur))<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.assignmentPlus,sum += a[cur])<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,a[cur])<SUB>17</SUB>>", "129": "<(IDENTIFIER,cur,sum += a[cur])<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.indexAccess,typeSum[i])<SUB>19</SUB>>", "133": "<(IDENTIFIER,i,typeSum[i] = sum - temp)<SUB>19</SUB>>", "135": "<(IDENTIFIER,sum,sum - temp)<SUB>19</SUB>>", "137": "<(LOCAL,boolean notDiv: boolean)<SUB>21</SUB>>", "139": "<(IDENTIFIER,notDiv,boolean notDiv = sum % k != 0)<SUB>21</SUB>>", "141": "<(&lt;operator&gt;.modulo,sum % k)<SUB>21</SUB>>", "143": "<(IDENTIFIER,k,sum % k)<SUB>21</SUB>>", "145": "<(LOCAL,long need: long)<SUB>22</SUB>>", "147": "<(IDENTIFIER,need,long need = sum / k)<SUB>22</SUB>>", "149": "<(IDENTIFIER,sum,sum / k)<SUB>22</SUB>>", "151": "<(LOCAL,int n: int)<SUB>23</SUB>>", "153": "<(IDENTIFIER,n,int n = cur)<SUB>23</SUB>>", "155": "<(&lt;operator&gt;.assignment,adj = new ArrayList[n + 1])<SUB>24</SUB>>", "157": "<(&lt;operator&gt;.alloc,new ArrayList[n + 1])>", "159": "<(IDENTIFIER,n,n + 1)<SUB>24</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= n); i++),for (int i = 1; Some(i &lt;= n); i++))<SUB>25</SUB>>", "163": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>25</SUB>>", "165": "<(LITERAL,1,int i = 1)<SUB>25</SUB>>", "167": "<(IDENTIFIER,i,i &lt;= n)<SUB>25</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,i++)<SUB>25</SUB>>", "171": "<(&lt;operator&gt;.assignment,adj[i] = new ArrayList&lt;&gt;())<SUB>25</SUB>>", "173": "<(IDENTIFIER,adj,adj[i] = new ArrayList&lt;&gt;())<SUB>25</SUB>>", "175": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "177": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "179": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>25</SUB>>", "181": "<(IDENTIFIER,$obj4,&lt;empty&gt;)>", "183": "<(LOCAL,int i: int)<SUB>26</SUB>>", "185": "<(IDENTIFIER,i,int i = 1)<SUB>26</SUB>>", "187": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>26</SUB>>", "189": "<(IDENTIFIER,n,i &lt;= n)<SUB>26</SUB>>", "191": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "193": "<(LOCAL,long delta: long)<SUB>27</SUB>>", "195": "<(IDENTIFIER,delta,long delta = need - typeSum[type[i]])<SUB>27</SUB>>", "197": "<(IDENTIFIER,need,need - typeSum[type[i]])<SUB>27</SUB>>", "199": "<(IDENTIFIER,typeSum,need - typeSum[type[i]])<SUB>27</SUB>>", "201": "<(IDENTIFIER,type,need - typeSum[type[i]])<SUB>27</SUB>>", "203": "<(LOCAL,long find: long)<SUB>28</SUB>>", "205": "<(IDENTIFIER,find,long find = a[i] + delta)<SUB>28</SUB>>", "207": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>28</SUB>>", "209": "<(IDENTIFIER,i,a[i] + delta)<SUB>28</SUB>>", "211": "<(CONTROL_STRUCTURE,if (map.containsKey(find)),if (map.containsKey(find)))<SUB>29</SUB>>", "213": "<(IDENTIFIER,map,containsKey(find))<SUB>29</SUB>>", "215": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>29</SUB>>", "217": "<(&lt;operator&gt;.logicalOr,type[map.get(find)] != type[i] || delta == 0)<SUB>30</SUB>>", "219": "<(&lt;operator&gt;.indexAccess,type[map.get(find)])<SUB>30</SUB>>", "221": "<(get,get(find))<SUB>30</SUB>>", "223": "<(IDENTIFIER,find,get(find))<SUB>30</SUB>>", "225": "<(IDENTIFIER,type,type[map.get(find)] != type[i])<SUB>30</SUB>>", "227": "<(&lt;operator&gt;.equals,delta == 0)<SUB>30</SUB>>", "229": "<(LITERAL,0,delta == 0)<SUB>30</SUB>>", "231": "<(&lt;operator&gt;.indexAccess,adj[i])<SUB>30</SUB>>", "233": "<(IDENTIFIER,i,add(map.get(find)))<SUB>30</SUB>>", "235": "<(IDENTIFIER,map,get(find))<SUB>30</SUB>>", "237": "<(&lt;operator&gt;.assignment,vis = new int[n + 1])<SUB>33</SUB>>", "239": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "241": "<(IDENTIFIER,n,n + 1)<SUB>33</SUB>>", "243": "<(&lt;operator&gt;.assignment,good = new boolean[1 &lt;&lt; k])<SUB>34</SUB>>", "245": "<(&lt;operator&gt;.alloc,new boolean[1 &lt;&lt; k])>", "247": "<(LITERAL,1,1 &lt;&lt; k)<SUB>34</SUB>>", "249": "<(&lt;operator&gt;.assignment,good[0] = true)<SUB>35</SUB>>", "251": "<(IDENTIFIER,good,good[0] = true)<SUB>35</SUB>>", "253": "<(LITERAL,true,good[0] = true)<SUB>35</SUB>>", "255": "<(IDENTIFIER,nodes,nodes = new HashSet[1 &lt;&lt; k])<SUB>36</SUB>>", "257": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>36</SUB>>", "259": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>36</SUB>>", "261": "<(LOCAL,int i: int)<SUB>37</SUB>>", "263": "<(IDENTIFIER,i,int i = 1)<SUB>37</SUB>>", "265": "<(&lt;operator&gt;.lessEqualsThan,i &lt;= n)<SUB>37</SUB>>", "267": "<(IDENTIFIER,n,i &lt;= n)<SUB>37</SUB>>", "269": "<(IDENTIFIER,i,i++)<SUB>37</SUB>>", "271": "<(CONTROL_STRUCTURE,if (vis[i] == 0),if (vis[i] == 0))<SUB>38</SUB>>", "273": "<(&lt;operator&gt;.indexAccess,vis[i])<SUB>38</SUB>>", "275": "<(IDENTIFIER,i,vis[i] == 0)<SUB>38</SUB>>", "277": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>38</SUB>>", "279": "<(IDENTIFIER,cy,cy = new HashSet&lt;&gt;())<SUB>39</SUB>>", "281": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>39</SUB>>", "283": "<(LOCAL,boolean b: boolean)<SUB>40</SUB>>", "285": "<(IDENTIFIER,b,boolean b = dfs(i))<SUB>40</SUB>>", "287": "<(IDENTIFIER,this,dfs(i))<SUB>40</SUB>>", "289": "<(LOCAL,int mask: int)<SUB>41</SUB>>", "291": "<(IDENTIFIER,mask,int mask = 0)<SUB>41</SUB>>", "293": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>42</SUB>>", "295": "<(IDENTIFIER,$iterLocal0,)<SUB>42</SUB>>", "297": "<(IDENTIFIER,cy,&lt;empty&gt;)<SUB>42</SUB>>", "299": "<(hasNext,&lt;empty&gt;)<SUB>42</SUB>>", "301": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>42</SUB>>", "303": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>42</SUB>>", "305": "<(next,&lt;empty&gt;)<SUB>42</SUB>>", "307": "<(&lt;operators&gt;.assignmentOr,mask |= 1 &lt;&lt; type[node])<SUB>43</SUB>>", "309": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; type[node])<SUB>43</SUB>>", "311": "<(&lt;operator&gt;.indexAccess,type[node])<SUB>43</SUB>>", "313": "<(IDENTIFIER,node,1 &lt;&lt; type[node])<SUB>43</SUB>>", "315": "<(&lt;operator&gt;.notEquals,mask != 0)<SUB>45</SUB>>", "317": "<(LITERAL,0,mask != 0)<SUB>45</SUB>>", "319": "<(&lt;operator&gt;.indexAccess,nodes[mask])<SUB>45</SUB>>", "321": "<(IDENTIFIER,mask,nodes[mask] = cy)<SUB>45</SUB>>", "323": "<(&lt;operator&gt;.assignment,good[mask] = true)<SUB>46</SUB>>", "325": "<(IDENTIFIER,good,good[mask] = true)<SUB>46</SUB>>", "327": "<(LITERAL,true,good[mask] = true)<SUB>46</SUB>>", "329": "<(IDENTIFIER,dp,dp = new int[1 &lt;&lt; k])<SUB>49</SUB>>", "331": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>49</SUB>>", "333": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>49</SUB>>", "335": "<(IDENTIFIER,Arrays,fill(dp, -1))<SUB>50</SUB>>", "337": "<(&lt;operator&gt;.minus,-1)<SUB>50</SUB>>", "339": "<(LOCAL,int possible: int)<SUB>51</SUB>>", "341": "<(IDENTIFIER,possible,int possible = solve((1 &lt;&lt; k) - 1))<SUB>51</SUB>>", "343": "<(IDENTIFIER,this,solve((1 &lt;&lt; k) - 1))<SUB>51</SUB>>", "345": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>51</SUB>>", "347": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>51</SUB>>", "349": "<(CONTROL_STRUCTURE,if (possible == 1 &amp;&amp; !notDiv),if (possible == 1 &amp;&amp; !notDiv))<SUB>52</SUB>>", "351": "<(&lt;operator&gt;.equals,possible == 1)<SUB>52</SUB>>", "353": "<(LITERAL,1,possible == 1)<SUB>52</SUB>>", "355": "<(IDENTIFIER,notDiv,!notDiv)<SUB>52</SUB>>", "357": "<(LOCAL,ArrayList&lt;Integer&gt; masks: ANY)<SUB>53</SUB>>", "359": "<(IDENTIFIER,masks,ANY masks = dfs2((1 &lt;&lt; k) - 1))<SUB>53</SUB>>", "361": "<(IDENTIFIER,this,dfs2((1 &lt;&lt; k) - 1))<SUB>53</SUB>>", "363": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; k)<SUB>53</SUB>>", "365": "<(IDENTIFIER,k,1 &lt;&lt; k)<SUB>53</SUB>>", "367": "<(LOCAL,long[] num: long[])<SUB>55</SUB>>", "369": "<(IDENTIFIER,num,long[] num = new long[k])<SUB>55</SUB>>", "371": "<(IDENTIFIER,k,new long[k])<SUB>55</SUB>>", "373": "<(&lt;operator&gt;.assignment,int[] ret = new int[k])<SUB>56</SUB>>", "375": "<(&lt;operator&gt;.alloc,new int[k])>", "377": "<(LOCAL,$iterLocal1: java.util.Iterator)<SUB>57</SUB>>", "379": "<(IDENTIFIER,$iterLocal1,)<SUB>57</SUB>>", "381": "<(IDENTIFIER,masks,&lt;empty&gt;)<SUB>57</SUB>>", "383": "<(hasNext,&lt;empty&gt;)<SUB>57</SUB>>", "385": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>57</SUB>>", "387": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>57</SUB>>", "389": "<(next,&lt;empty&gt;)<SUB>57</SUB>>", "391": "<(LOCAL,$iterLocal2: java.util.Iterator)<SUB>58</SUB>>", "393": "<(IDENTIFIER,$iterLocal2,)<SUB>58</SUB>>", "395": "<(&lt;operator&gt;.indexAccess,nodes[mask])<SUB>58</SUB>>", "397": "<(IDENTIFIER,mask,&lt;empty&gt;)<SUB>58</SUB>>", "399": "<(hasNext,&lt;empty&gt;)<SUB>58</SUB>>", "401": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>58</SUB>>", "403": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>58</SUB>>", "405": "<(next,&lt;empty&gt;)<SUB>58</SUB>>", "407": "<(&lt;operator&gt;.assignment,num[type[node]] = a[node])<SUB>59</SUB>>", "409": "<(IDENTIFIER,num,num[type[node]] = a[node])<SUB>59</SUB>>", "411": "<(IDENTIFIER,type,num[type[node]] = a[node])<SUB>59</SUB>>", "413": "<(&lt;operator&gt;.indexAccess,a[node])<SUB>59</SUB>>", "415": "<(IDENTIFIER,node,num[type[node]] = a[node])<SUB>59</SUB>>", "417": "<(&lt;operator&gt;.indexAccess,ret[type[adj[node].get(0)]])<SUB>60</SUB>>", "419": "<(&lt;operator&gt;.indexAccess,type[adj[node].get(0)])<SUB>60</SUB>>", "421": "<(get,get(0))<SUB>60</SUB>>", "423": "<(IDENTIFIER,adj,get(0))<SUB>60</SUB>>", "425": "<(LITERAL,0,get(0))<SUB>60</SUB>>", "427": "<(&lt;operator&gt;.indexAccess,type[node])<SUB>60</SUB>>", "429": "<(IDENTIFIER,node,type[node] + 1)<SUB>60</SUB>>", "431": "<(LOCAL,boolean good: boolean)<SUB>63</SUB>>", "433": "<(IDENTIFIER,good,boolean good = true)<SUB>63</SUB>>", "8": "<(LOCAL,Set&lt;Integer&gt; soFar: ANY)<SUB>63</SUB>>", "436": "<(IDENTIFIER,soFar,ANY soFar = new HashSet&lt;&gt;())<SUB>63</SUB>>", "438": "<(&lt;init&gt;,new HashSet&lt;&gt;())<SUB>63</SUB>>", "439": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; ret.length); i++),for (int i = 0; Some(i &lt; ret.length); i++))<SUB>64</SUB>>", "441": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>64</SUB>>", "443": "<(LITERAL,0,int i = 0)<SUB>64</SUB>>", "445": "<(IDENTIFIER,i,i &lt; ret.length)<SUB>64</SUB>>", "447": "<(IDENTIFIER,ret,i &lt; ret.length)<SUB>64</SUB>>", "449": "<(&lt;operator&gt;.postIncrement,i++)<SUB>64</SUB>>", "451": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>64</SUB>>", "453": "<(contains,contains(ret[i]))<SUB>65</SUB>>", "455": "<(&lt;operator&gt;.indexAccess,ret[i])<SUB>65</SUB>>", "457": "<(IDENTIFIER,i,contains(ret[i]))<SUB>65</SUB>>", "459": "<(IDENTIFIER,good,good = false)<SUB>65</SUB>>", "461": "<(add,add(ret[i]))<SUB>66</SUB>>", "463": "<(&lt;operator&gt;.indexAccess,ret[i])<SUB>66</SUB>>", "465": "<(IDENTIFIER,i,add(ret[i]))<SUB>66</SUB>>", "467": "<(&lt;operator&gt;.logicalNot,!good)<SUB>68</SUB>>", "469": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>68</SUB>>", "471": "<(IDENTIFIER,out,println(&quot;No&quot;))<SUB>69</SUB>>", "473": "<(close,close())<SUB>70</SUB>>", "475": "<(RETURN,return;,return;)<SUB>71</SUB>>", "477": "<(IDENTIFIER,out,println(&quot;Yes&quot;))<SUB>73</SUB>>", "479": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; k); i++),for (int i = 0; Some(i &lt; k); i++))<SUB>74</SUB>>", "481": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>74</SUB>>", "483": "<(LITERAL,0,int i = 0)<SUB>74</SUB>>", "485": "<(IDENTIFIER,i,i &lt; k)<SUB>74</SUB>>", "487": "<(&lt;operator&gt;.postIncrement,i++)<SUB>74</SUB>>", "489": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>74</SUB>>", "491": "<(IDENTIFIER,out,println(num[i] + &quot; &quot; + ret[i]))<SUB>75</SUB>>", "493": "<(&lt;operator&gt;.addition,num[i] + &quot; &quot;)<SUB>75</SUB>>", "495": "<(IDENTIFIER,num,num[i] + &quot; &quot;)<SUB>75</SUB>>", "497": "<(LITERAL,&quot; &quot;,num[i] + &quot; &quot;)<SUB>75</SUB>>", "499": "<(IDENTIFIER,ret,num[i] + &quot; &quot; + ret[i])<SUB>75</SUB>>", "501": "<(CONTROL_STRUCTURE,else,else)<SUB>77</SUB>>", "503": "<(println,println(&quot;No&quot;))<SUB>78</SUB>>", "505": "<(LITERAL,&quot;No&quot;,println(&quot;No&quot;))<SUB>78</SUB>>", "507": "<(IDENTIFIER,out,close())<SUB>80</SUB>>", "509": "<(MODIFIER,STATIC)>"}}