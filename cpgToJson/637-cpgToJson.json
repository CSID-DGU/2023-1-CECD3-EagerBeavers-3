{"edges": [["19", "21"], ["19", "153"], ["19", "154"], ["19", "155"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "40"], ["21", "43"], ["21", "44"], ["21", "47"], ["21", "84"], ["21", "85"], ["21", "89"], ["21", "148"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["40", "41"], ["40", "42"], ["44", "45"], ["44", "46"], ["47", "48"], ["47", "49"], ["47", "52"], ["47", "55"], ["47", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["55", "56"], ["57", "58"], ["57", "64"], ["57", "74"], ["58", "59"], ["58", "62"], ["59", "60"], ["59", "61"], ["62", "63"], ["64", "65"], ["64", "72"], ["65", "66"], ["65", "71"], ["66", "67"], ["66", "70"], ["67", "68"], ["67", "69"], ["72", "73"], ["74", "75"], ["74", "82"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["82", "83"], ["85", "86"], ["85", "87"], ["87", "88"], ["89", "90"], ["89", "93"], ["89", "120"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "102"], ["94", "104"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["102", "103"], ["104", "105"], ["105", "106"], ["105", "113"], ["106", "107"], ["106", "112"], ["107", "108"], ["107", "111"], ["108", "109"], ["108", "110"], ["113", "114"], ["113", "119"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["120", "121"], ["121", "122"], ["122", "123"], ["122", "124"], ["122", "127"], ["122", "130"], ["122", "132"], ["124", "125"], ["124", "126"], ["127", "128"], ["127", "129"], ["130", "131"], ["132", "133"], ["133", "134"], ["133", "141"], ["134", "135"], ["134", "140"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["141", "142"], ["141", "147"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "40"], ["40", "44"], ["44", "49"], ["85", "90"], ["148", "155"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["49", "52"], ["52", "59"], ["52", "87"], ["55", "52"], ["87", "85"], ["90", "96"], ["90", "124"], ["149", "148"], ["28", "26"], ["58", "67"], ["151", "149"], ["59", "62"], ["62", "58"], ["65", "72"], ["65", "77"], ["72", "77"], ["75", "82"], ["75", "55"], ["82", "55"], ["96", "99"], ["99", "108"], ["99", "151"], ["102", "99"], ["66", "65"], ["76", "75"], ["124", "127"], ["127", "136"], ["127", "151"], ["130", "127"], ["67", "66"], ["77", "76"], ["106", "116"], ["106", "102"], ["107", "106"], ["114", "151"], ["134", "144"], ["134", "130"], ["108", "107"], ["116", "114"], ["135", "134"], ["142", "151"], ["136", "135"], ["144", "142"], ["19", "24"], ["20", "155"], ["22", "155"], ["25", "155"], ["25", "155"], ["32", "155"], ["30", "155"], ["30", "155"], ["35", "155"], ["35", "155"], ["35", "155"], ["40", "155"], ["40", "155"], ["44", "155"], ["85", "155"], ["85", "155"], ["90", "155"], ["90", "155"], ["124", "155"], ["127", "155"], ["127", "155"], ["127", "155"], ["135", "155"], ["134", "155"], ["134", "155"], ["130", "155"], ["144", "155"], ["142", "155"], ["142", "155"], ["96", "155"], ["99", "155"], ["99", "155"], ["99", "155"], ["107", "155"], ["106", "155"], ["106", "155"], ["102", "155"], ["116", "155"], ["114", "155"], ["114", "155"], ["148", "155"], ["148", "155"], ["148", "155"], ["62", "155"], ["58", "155"], ["58", "155"], ["65", "155"], ["72", "155"], ["76", "155"], ["75", "155"], ["75", "155"], ["82", "155"], ["82", "155"], ["55", "155"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["19", "40"], ["19", "44"], ["87", "85"], ["22", "25"], ["19", "25"], ["19", "49"], ["85", "148"], ["142", "148"], ["114", "148"], ["19", "148"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["49", "52"], ["55", "52"], ["19", "52"], ["37", "52"], ["52", "55"], ["19", "55"], ["62", "58"], ["19", "87"], ["44", "90"], ["72", "90"], ["19", "90"], ["19", "96"], ["32", "62"], ["19", "62"], ["66", "65"], ["66", "65"], ["19", "65"], ["44", "72"], ["19", "72"], ["76", "75"], ["76", "75"], ["19", "75"], ["40", "82"], ["19", "82"], ["96", "99"], ["102", "99"], ["19", "99"], ["52", "99"], ["99", "102"], ["19", "102"], ["19", "124"], ["35", "66"], ["58", "66"], ["19", "66"], ["35", "76"], ["66", "76"], ["19", "76"], ["124", "127"], ["130", "127"], ["19", "127"], ["52", "127"], ["127", "130"], ["19", "130"], ["107", "106"], ["107", "106"], ["19", "106"], ["99", "114"], ["19", "114"], ["35", "107"], ["76", "107"], ["19", "107"], ["135", "134"], ["135", "134"], ["19", "134"], ["127", "142"], ["19", "142"], ["99", "116"], ["19", "116"], ["35", "135"], ["76", "135"], ["19", "135"], ["127", "144"], ["19", "144"], ["52", "77"], ["52", "66"], ["52", "75"], ["52", "52"], ["52", "67"], ["52", "76"], ["52", "65"], ["52", "59"], ["52", "58"], ["52", "55"], ["52", "62"], ["90", "96"], ["90", "99"], ["90", "127"], ["90", "124"], ["65", "72"], ["75", "82"], ["99", "107"], ["99", "106"], ["99", "108"], ["127", "136"], ["127", "134"], ["127", "135"], ["106", "116"], ["106", "99"], ["106", "102"], ["106", "114"], ["134", "142"], ["134", "144"], ["134", "130"], ["134", "127"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] nums = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(LOCAL,int kisu: int)<SUB>5</SUB>>", "41": "<(IDENTIFIER,kisu,int kisu = 0)<SUB>5</SUB>>", "43": "<(LOCAL,int gusu: int)<SUB>6</SUB>>", "45": "<(IDENTIFIER,gusu,int gusu = 0)<SUB>6</SUB>>", "47": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "49": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "51": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "53": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "57": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "59": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>8</SUB>>", "61": "<(IDENTIFIER,i,nums[i] = nextInt())<SUB>8</SUB>>", "63": "<(IDENTIFIER,sc,nextInt())<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.equals,nums[i] % 2 == 0)<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>9</SUB>>", "69": "<(IDENTIFIER,i,nums[i] % 2)<SUB>9</SUB>>", "71": "<(LITERAL,0,nums[i] % 2 == 0)<SUB>9</SUB>>", "73": "<(IDENTIFIER,gusu,gusu++)<SUB>9</SUB>>", "75": "<(&lt;operator&gt;.equals,nums[i] % 2 == 1)<SUB>10</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,nums[i])<SUB>10</SUB>>", "79": "<(IDENTIFIER,i,nums[i] % 2)<SUB>10</SUB>>", "81": "<(LITERAL,1,nums[i] % 2 == 1)<SUB>10</SUB>>", "83": "<(IDENTIFIER,kisu,kisu++)<SUB>10</SUB>>", "85": "<(&lt;operator&gt;.assignment,int ans = -1)<SUB>12</SUB>>", "87": "<(&lt;operator&gt;.minus,-1)<SUB>12</SUB>>", "89": "<(CONTROL_STRUCTURE,if (gusu == 1),if (gusu == 1))<SUB>13</SUB>>", "91": "<(IDENTIFIER,gusu,gusu == 1)<SUB>13</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "95": "<(LOCAL,int i: int)<SUB>14</SUB>>", "97": "<(IDENTIFIER,i,int i = 0)<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>14</SUB>>", "101": "<(IDENTIFIER,n,i &lt; n)<SUB>14</SUB>>", "103": "<(IDENTIFIER,i,i++)<SUB>14</SUB>>", "105": "<(CONTROL_STRUCTURE,if (nums[i] % 2 == 0),if (nums[i] % 2 == 0))<SUB>15</SUB>>", "107": "<(&lt;operator&gt;.modulo,nums[i] % 2)<SUB>15</SUB>>", "109": "<(IDENTIFIER,nums,nums[i] % 2)<SUB>15</SUB>>", "111": "<(LITERAL,2,nums[i] % 2)<SUB>15</SUB>>", "113": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "115": "<(IDENTIFIER,ans,ans = i + 1)<SUB>16</SUB>>", "117": "<(IDENTIFIER,i,i + 1)<SUB>16</SUB>>", "119": "<(CONTROL_STRUCTURE,break;,break;)<SUB>17</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>21</SUB>>", "123": "<(LOCAL,int i: int)<SUB>22</SUB>>", "125": "<(IDENTIFIER,i,int i = 0)<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>22</SUB>>", "129": "<(IDENTIFIER,n,i &lt; n)<SUB>22</SUB>>", "131": "<(IDENTIFIER,i,i++)<SUB>22</SUB>>", "133": "<(CONTROL_STRUCTURE,if (nums[i] % 2 == 1),if (nums[i] % 2 == 1))<SUB>23</SUB>>", "135": "<(&lt;operator&gt;.modulo,nums[i] % 2)<SUB>23</SUB>>", "137": "<(IDENTIFIER,nums,nums[i] % 2)<SUB>23</SUB>>", "139": "<(LITERAL,2,nums[i] % 2)<SUB>23</SUB>>", "141": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "143": "<(IDENTIFIER,ans,ans = i + 1)<SUB>24</SUB>>", "145": "<(IDENTIFIER,i,i + 1)<SUB>24</SUB>>", "147": "<(CONTROL_STRUCTURE,break;,break;)<SUB>25</SUB>>", "149": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>30</SUB>>", "151": "<(FIELD_IDENTIFIER,out,out)<SUB>30</SUB>>", "153": "<(MODIFIER,PUBLIC)>", "155": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}