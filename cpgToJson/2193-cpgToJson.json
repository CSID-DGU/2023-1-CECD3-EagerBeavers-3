{"edges": [["21", "23"], ["21", "205"], ["21", "206"], ["21", "207"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "31"], ["23", "34"], ["23", "38"], ["23", "39"], ["23", "43"], ["23", "44"], ["23", "50"], ["23", "51"], ["23", "55"], ["23", "73"], ["23", "74"], ["23", "78"], ["23", "83"], ["23", "184"], ["23", "201"], ["23", "203"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["31", "32"], ["31", "33"], ["34", "5"], ["34", "35"], ["35", "36"], ["35", "37"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["46", "48"], ["48", "49"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["55", "60"], ["55", "63"], ["55", "65"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["63", "64"], ["65", "66"], ["65", "69"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["71", "72"], ["74", "75"], ["74", "76"], ["76", "77"], ["78", "79"], ["78", "82"], ["79", "80"], ["79", "81"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "95"], ["93", "100"], ["93", "167"], ["95", "96"], ["95", "97"], ["97", "98"], ["97", "99"], ["100", "101"], ["100", "102"], ["100", "105"], ["100", "108"], ["100", "110"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "125"], ["112", "113"], ["112", "122"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "119"], ["116", "117"], ["116", "118"], ["119", "120"], ["119", "121"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["125", "134"], ["125", "151"], ["125", "156"], ["125", "161"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "144"], ["137", "138"], ["137", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "148"], ["145", "146"], ["145", "147"], ["148", "149"], ["148", "150"], ["151", "152"], ["151", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "160"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "165"], ["163", "166"], ["167", "168"], ["167", "173"], ["167", "178"], ["168", "169"], ["168", "170"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "177"], ["174", "175"], ["174", "176"], ["178", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["194", "196"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["203", "204"], ["24", "30"], ["27", "33"], ["31", "37"], ["34", "41"], ["39", "47"], ["44", "53"], ["51", "57"], ["74", "79"], ["78", "85"], ["201", "203"], ["203", "207"], ["26", "24"], ["28", "27"], ["33", "31"], ["35", "34"], ["41", "39"], ["46", "44"], ["53", "51"], ["57", "60"], ["60", "66"], ["60", "76"], ["63", "60"], ["65", "63"], ["76", "74"], ["79", "78"], ["85", "88"], ["88", "99"], ["88", "186"], ["91", "88"], ["186", "189"], ["189", "197"], ["189", "201"], ["192", "189"], ["194", "192"], ["30", "28"], ["37", "35"], ["47", "48"], ["48", "46"], ["66", "70"], ["69", "65"], ["95", "102"], ["196", "194"], ["70", "71"], ["71", "69"], ["97", "95"], ["102", "105"], ["105", "116"], ["105", "172"], ["108", "105"], ["168", "174"], ["168", "180"], ["173", "91"], ["197", "196"], ["99", "97"], ["170", "168"], ["174", "173"], ["179", "91"], ["112", "130"], ["112", "108"], ["172", "170"], ["180", "179"], ["113", "122"], ["122", "112"], ["127", "138"], ["134", "153"], ["151", "158"], ["156", "163"], ["161", "108"], ["115", "113"], ["129", "127"], ["136", "134"], ["153", "151"], ["158", "156"], ["163", "161"], ["116", "119"], ["119", "115"], ["130", "129"], ["137", "145"], ["144", "136"], ["138", "141"], ["141", "137"], ["145", "148"], ["148", "144"], ["21", "26"], ["22", "207"], ["24", "207"], ["27", "207"], ["27", "207"], ["31", "207"], ["34", "207"], ["34", "207"], ["39", "207"], ["48", "207"], ["46", "207"], ["44", "207"], ["44", "207"], ["51", "207"], ["51", "207"], ["74", "207"], ["74", "207"], ["74", "207"], ["78", "207"], ["78", "207"], ["78", "207"], ["85", "207"], ["186", "207"], ["189", "207"], ["189", "207"], ["189", "207"], ["201", "207"], ["203", "207"], ["203", "207"], ["196", "207"], ["194", "207"], ["194", "207"], ["192", "207"], ["95", "207"], ["102", "207"], ["105", "207"], ["105", "207"], ["168", "207"], ["168", "207"], ["168", "207"], ["179", "207"], ["179", "207"], ["179", "207"], ["173", "207"], ["173", "207"], ["173", "207"], ["91", "207"], ["113", "207"], ["115", "207"], ["115", "207"], ["113", "207"], ["112", "207"], ["122", "207"], ["112", "207"], ["112", "207"], ["129", "207"], ["129", "207"], ["127", "207"], ["127", "207"], ["136", "207"], ["144", "207"], ["144", "207"], ["134", "207"], ["134", "207"], ["151", "207"], ["151", "207"], ["156", "207"], ["156", "207"], ["163", "207"], ["163", "207"], ["161", "207"], ["161", "207"], ["108", "207"], ["65", "207"], ["71", "207"], ["69", "207"], ["65", "207"], ["65", "207"], ["63", "207"], ["21", "22"], ["21", "24"], ["21", "31"], ["41", "39"], ["21", "44"], ["48", "44"], ["53", "51"], ["76", "74"], ["44", "78"], ["21", "78"], ["24", "27"], ["21", "27"], ["31", "34"], ["21", "34"], ["21", "57"], ["21", "65"], ["71", "65"], ["21", "85"], ["21", "186"], ["34", "201"], ["194", "201"], ["21", "201"], ["201", "203"], ["21", "203"], ["27", "41"], ["21", "41"], ["21", "46"], ["48", "46"], ["39", "53"], ["21", "53"], ["57", "60"], ["63", "60"], ["21", "60"], ["53", "60"], ["60", "63"], ["21", "63"], ["60", "76"], ["21", "76"], ["85", "88"], ["91", "88"], ["21", "88"], ["76", "88"], ["105", "91"], ["21", "91"], ["168", "95"], ["186", "189"], ["192", "189"], ["21", "189"], ["88", "189"], ["189", "192"], ["21", "192"], ["34", "194"], ["21", "194"], ["74", "194"], ["179", "194"], ["173", "194"], ["41", "48"], ["21", "48"], ["21", "69"], ["71", "69"], ["21", "102"], ["122", "173"], ["129", "173"], ["21", "173"], ["44", "173"], ["74", "196"], ["179", "196"], ["173", "196"], ["21", "196"], ["48", "71"], ["21", "71"], ["102", "105"], ["108", "105"], ["21", "105"], ["88", "105"], ["105", "108"], ["21", "108"], ["95", "168"], ["161", "168"], ["21", "168"], ["168", "179"], ["21", "179"], ["113", "112"], ["113", "112"], ["122", "112"], ["122", "112"], ["129", "127"], ["129", "127"], ["136", "134"], ["153", "151"], ["153", "151"], ["74", "156"], ["163", "161"], ["163", "161"], ["163", "161"], ["163", "113"], ["21", "113"], ["115", "113"], ["115", "113"], ["21", "122"], ["129", "122"], ["44", "122"], ["127", "134"], ["21", "134"], ["151", "156"], ["21", "156"], ["51", "115"], ["144", "115"], ["65", "115"], ["144", "115"], ["130", "129"], ["130", "129"], ["21", "129"], ["137", "136"], ["137", "136"], ["144", "136"], ["144", "136"], ["113", "153"], ["21", "153"], ["134", "153"], ["153", "163"], ["21", "163"], ["95", "163"], ["161", "163"], ["156", "163"], ["21", "130"], ["122", "130"], ["51", "137"], ["115", "137"], ["115", "137"], ["51", "144"], ["137", "144"], ["137", "144"], ["60", "60"], ["60", "69"], ["60", "70"], ["60", "66"], ["60", "65"], ["60", "71"], ["60", "63"], ["88", "102"], ["88", "95"], ["88", "168"], ["88", "170"], ["88", "97"], ["88", "91"], ["88", "88"], ["88", "99"], ["88", "105"], ["88", "172"], ["189", "192"], ["189", "196"], ["189", "197"], ["189", "189"], ["189", "194"], ["105", "115"], ["105", "113"], ["105", "119"], ["105", "112"], ["105", "108"], ["105", "116"], ["105", "122"], ["105", "105"], ["168", "179"], ["168", "173"], ["168", "174"], ["168", "180"], ["112", "136"], ["112", "145"], ["112", "161"], ["112", "163"], ["112", "151"], ["112", "153"], ["112", "144"], ["112", "129"], ["112", "134"], ["112", "138"], ["112", "148"], ["112", "137"], ["112", "130"], ["112", "127"], ["112", "158"], ["112", "141"], ["112", "156"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>3</SUB>>", "29": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,PrintWriter pw: ANY)<SUB>4</SUB>>", "32": "<(IDENTIFIER,pw,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "34": "<(&lt;init&gt;,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "37": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "39": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>6</SUB>>", "41": "<(nextInt,nextInt())<SUB>6</SUB>>", "43": "<(LOCAL,double r: double)<SUB>7</SUB>>", "45": "<(IDENTIFIER,r,double r = (double) in.nextInt())<SUB>7</SUB>>", "47": "<(TYPE_REF,double,double)<SUB>7</SUB>>", "49": "<(IDENTIFIER,in,nextInt())<SUB>7</SUB>>", "51": "<(&lt;operator&gt;.assignment,double[] a = new double[n])<SUB>8</SUB>>", "53": "<(&lt;operator&gt;.alloc,new double[n])>", "55": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "59": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "61": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.assignment,a[i] = (double) in.nextInt())<SUB>10</SUB>>", "67": "<(IDENTIFIER,a,a[i] = (double) in.nextInt())<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.cast,(double) in.nextInt())<SUB>10</SUB>>", "71": "<(nextInt,nextInt())<SUB>10</SUB>>", "73": "<(LOCAL,double[] ans: double[])<SUB>11</SUB>>", "75": "<(IDENTIFIER,ans,double[] ans = new double[n])<SUB>11</SUB>>", "77": "<(IDENTIFIER,n,new double[n])<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,ans[0])<SUB>12</SUB>>", "81": "<(LITERAL,0,ans[0] = r)<SUB>12</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); i++),for (int i = 1; Some(i &lt; n); i++))<SUB>14</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>14</SUB>>", "87": "<(LITERAL,1,int i = 1)<SUB>14</SUB>>", "89": "<(IDENTIFIER,i,i &lt; n)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>14</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "95": "<(&lt;operator&gt;.assignment,double max = Double.MIN_VALUE)<SUB>16</SUB>>", "97": "<(&lt;operator&gt;.fieldAccess,Double.MIN_VALUE)<SUB>16</SUB>>", "99": "<(FIELD_IDENTIFIER,MIN_VALUE,MIN_VALUE)<SUB>16</SUB>>", "101": "<(LOCAL,int j: int)<SUB>17</SUB>>", "103": "<(IDENTIFIER,j,int j = 0)<SUB>17</SUB>>", "105": "<(&lt;operator&gt;.lessThan,j &lt; i)<SUB>17</SUB>>", "107": "<(IDENTIFIER,i,j &lt; i)<SUB>17</SUB>>", "109": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "111": "<(CONTROL_STRUCTURE,if (Math.abs(a[i] - a[j]) &lt;= 2 * r),if (Math.abs(a[i] - a[j]) &lt;= 2 * r))<SUB>19</SUB>>", "113": "<(abs,Math.abs(a[i] - a[j]))<SUB>19</SUB>>", "115": "<(&lt;operator&gt;.subtraction,a[i] - a[j])<SUB>19</SUB>>", "117": "<(IDENTIFIER,a,a[i] - a[j])<SUB>19</SUB>>", "119": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>19</SUB>>", "121": "<(IDENTIFIER,j,a[i] - a[j])<SUB>19</SUB>>", "123": "<(LITERAL,2,2 * r)<SUB>19</SUB>>", "125": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "127": "<(&lt;operator&gt;.assignment,double cur = 4 * r * r)<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.multiplication,4 * r * r)<SUB>22</SUB>>", "131": "<(LITERAL,4,4 * r)<SUB>22</SUB>>", "133": "<(IDENTIFIER,r,4 * r * r)<SUB>22</SUB>>", "135": "<(IDENTIFIER,cur,cur -= (a[i] - a[j]) * (a[i] - a[j]))<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.subtraction,a[i] - a[j])<SUB>23</SUB>>", "139": "<(IDENTIFIER,a,a[i] - a[j])<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,a[j])<SUB>23</SUB>>", "143": "<(IDENTIFIER,j,a[i] - a[j])<SUB>23</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,a[i])<SUB>23</SUB>>", "147": "<(IDENTIFIER,i,a[i] - a[j])<SUB>23</SUB>>", "149": "<(IDENTIFIER,a,a[i] - a[j])<SUB>23</SUB>>", "151": "<(&lt;operator&gt;.assignment,cur = Math.sqrt(cur))<SUB>24</SUB>>", "153": "<(sqrt,Math.sqrt(cur))<SUB>24</SUB>>", "155": "<(IDENTIFIER,cur,Math.sqrt(cur))<SUB>24</SUB>>", "157": "<(IDENTIFIER,cur,cur += ans[j])<SUB>25</SUB>>", "159": "<(IDENTIFIER,ans,cur += ans[j])<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.assignment,max = Math.max(max, cur))<SUB>27</SUB>>", "163": "<(max,Math.max(max, cur))<SUB>27</SUB>>", "165": "<(IDENTIFIER,max,Math.max(max, cur))<SUB>27</SUB>>", "167": "<(CONTROL_STRUCTURE,if (max == Double.MIN_VALUE),if (max == Double.MIN_VALUE))<SUB>31</SUB>>", "169": "<(IDENTIFIER,max,max == Double.MIN_VALUE)<SUB>31</SUB>>", "171": "<(IDENTIFIER,Double,max == Double.MIN_VALUE)<SUB>31</SUB>>", "173": "<(&lt;operator&gt;.assignment,ans[i] = r)<SUB>32</SUB>>", "175": "<(IDENTIFIER,ans,ans[i] = r)<SUB>32</SUB>>", "177": "<(IDENTIFIER,r,ans[i] = r)<SUB>32</SUB>>", "179": "<(&lt;operator&gt;.assignment,ans[i] = max)<SUB>34</SUB>>", "181": "<(IDENTIFIER,ans,ans[i] = max)<SUB>34</SUB>>", "183": "<(IDENTIFIER,max,ans[i] = max)<SUB>34</SUB>>", "185": "<(LOCAL,int i: int)<SUB>37</SUB>>", "187": "<(IDENTIFIER,i,int i = 0)<SUB>37</SUB>>", "189": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>37</SUB>>", "191": "<(IDENTIFIER,n,i &lt; n)<SUB>37</SUB>>", "193": "<(IDENTIFIER,i,i++)<SUB>37</SUB>>", "195": "<(IDENTIFIER,pw,print(ans[i] + &quot; &quot;))<SUB>38</SUB>>", "197": "<(&lt;operator&gt;.indexAccess,ans[i])<SUB>38</SUB>>", "199": "<(IDENTIFIER,i,ans[i] + &quot; &quot;)<SUB>38</SUB>>", "201": "<(flush,flush())<SUB>39</SUB>>", "203": "<(close,close())<SUB>40</SUB>>", "205": "<(MODIFIER,PUBLIC)>", "207": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}