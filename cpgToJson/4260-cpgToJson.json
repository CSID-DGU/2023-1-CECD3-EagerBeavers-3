{"edges": [["25", "27"], ["25", "193"], ["25", "194"], ["25", "195"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "32"], ["27", "35"], ["27", "39"], ["27", "40"], ["27", "44"], ["27", "191"], ["28", "29"], ["28", "30"], ["31", "3"], ["32", "33"], ["32", "34"], ["35", "5"], ["35", "36"], ["36", "37"], ["36", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["44", "45"], ["44", "46"], ["44", "49"], ["44", "52"], ["44", "54"], ["46", "47"], ["46", "48"], ["49", "50"], ["49", "51"], ["52", "53"], ["54", "55"], ["54", "58"], ["54", "62"], ["54", "66"], ["54", "71"], ["54", "101"], ["54", "102"], ["54", "8"], ["54", "106"], ["54", "109"], ["54", "110"], ["54", "10"], ["54", "159"], ["54", "162"], ["54", "163"], ["54", "181"], ["54", "188"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["82", "83"], ["82", "84"], ["82", "87"], ["82", "90"], ["82", "92"], ["84", "85"], ["84", "86"], ["87", "88"], ["87", "89"], ["90", "91"], ["92", "93"], ["93", "94"], ["93", "99"], ["94", "95"], ["94", "98"], ["95", "96"], ["95", "97"], ["99", "100"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["106", "108"], ["109", "7"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "118"], ["110", "120"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["120", "121"], ["120", "146"], ["121", "122"], ["121", "123"], ["121", "126"], ["121", "129"], ["121", "131"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "128"], ["129", "130"], ["131", "132"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["136", "137"], ["136", "138"], ["136", "141"], ["138", "139"], ["138", "140"], ["141", "142"], ["141", "145"], ["142", "143"], ["142", "144"], ["146", "147"], ["146", "148"], ["148", "149"], ["148", "152"], ["148", "158"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "154"], ["152", "155"], ["155", "156"], ["155", "157"], ["159", "160"], ["159", "161"], ["162", "9"], ["163", "164"], ["163", "172"], ["164", "165"], ["164", "168"], ["165", "166"], ["166", "167"], ["168", "169"], ["168", "171"], ["169", "170"], ["172", "173"], ["172", "174"], ["172", "178"], ["174", "175"], ["174", "176"], ["176", "177"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["181", "184"], ["181", "185"], ["185", "186"], ["186", "187"], ["188", "189"], ["188", "190"], ["191", "192"], ["28", "31"], ["31", "34"], ["32", "38"], ["35", "42"], ["40", "46"], ["191", "195"], ["30", "28"], ["34", "32"], ["36", "35"], ["42", "40"], ["46", "49"], ["49", "55"], ["49", "191"], ["52", "49"], ["38", "36"], ["55", "60"], ["58", "64"], ["62", "68"], ["66", "73"], ["102", "108"], ["106", "109"], ["109", "112"], ["159", "162"], ["162", "166"], ["181", "188"], ["188", "52"], ["60", "58"], ["64", "62"], ["68", "66"], ["73", "76"], ["76", "84"], ["76", "104"], ["79", "76"], ["104", "102"], ["108", "106"], ["112", "115"], ["115", "123"], ["115", "161"], ["118", "115"], ["161", "159"], ["164", "176"], ["164", "186"], ["185", "181"], ["146", "118"], ["165", "164"], ["165", "169"], ["168", "164"], ["174", "178"], ["178", "166"], ["186", "185"], ["84", "87"], ["87", "95"], ["87", "79"], ["90", "87"], ["123", "126"], ["126", "133"], ["126", "151"], ["129", "126"], ["166", "165"], ["169", "168"], ["176", "174"], ["93", "90"], ["132", "129"], ["149", "155"], ["152", "146"], ["94", "99"], ["99", "93"], ["133", "138"], ["136", "132"], ["151", "149"], ["155", "152"], ["95", "94"], ["138", "142"], ["141", "136"], ["142", "141"], ["25", "30"], ["26", "195"], ["28", "195"], ["31", "195"], ["32", "195"], ["35", "195"], ["35", "195"], ["42", "195"], ["40", "195"], ["40", "195"], ["46", "195"], ["49", "195"], ["49", "195"], ["49", "195"], ["191", "195"], ["191", "195"], ["55", "195"], ["58", "195"], ["64", "195"], ["62", "195"], ["62", "195"], ["66", "195"], ["66", "195"], ["66", "195"], ["76", "195"], ["76", "195"], ["102", "195"], ["102", "195"], ["102", "195"], ["106", "195"], ["109", "195"], ["112", "195"], ["115", "195"], ["115", "195"], ["115", "195"], ["159", "195"], ["162", "195"], ["166", "195"], ["165", "195"], ["164", "195"], ["164", "195"], ["164", "195"], ["181", "195"], ["185", "195"], ["181", "195"], ["181", "195"], ["188", "195"], ["188", "195"], ["52", "195"], ["174", "195"], ["174", "195"], ["178", "195"], ["178", "195"], ["123", "195"], ["126", "195"], ["126", "195"], ["126", "195"], ["149", "195"], ["152", "195"], ["152", "195"], ["152", "195"], ["146", "195"], ["118", "195"], ["136", "195"], ["132", "195"], ["132", "195"], ["129", "195"], ["84", "195"], ["87", "195"], ["87", "195"], ["79", "195"], ["93", "195"], ["99", "195"], ["93", "195"], ["93", "195"], ["90", "195"], ["136", "195"], ["181", "195"], ["25", "26"], ["25", "28"], ["25", "32"], ["42", "40"], ["28", "31"], ["25", "31"], ["32", "35"], ["25", "35"], ["25", "46"], ["35", "191"], ["188", "191"], ["25", "191"], ["31", "42"], ["25", "42"], ["46", "49"], ["52", "49"], ["25", "49"], ["40", "49"], ["49", "52"], ["25", "52"], ["25", "55"], ["60", "58"], ["64", "62"], ["68", "66"], ["68", "66"], ["104", "102"], ["25", "106"], ["25", "159"], ["25", "73"], ["106", "109"], ["25", "109"], ["25", "112"], ["159", "162"], ["25", "162"], ["25", "181"], ["186", "181"], ["185", "181"], ["35", "188"], ["25", "188"], ["55", "188"], ["42", "60"], ["64", "60"], ["99", "60"], ["25", "60"], ["60", "64"], ["25", "64"], ["58", "68"], ["25", "68"], ["62", "68"], ["73", "76"], ["79", "76"], ["25", "76"], ["68", "76"], ["76", "79"], ["25", "79"], ["68", "104"], ["87", "104"], ["25", "104"], ["112", "115"], ["118", "115"], ["25", "115"], ["104", "115"], ["152", "118"], ["25", "118"], ["165", "164"], ["168", "164"], ["168", "164"], ["176", "174"], ["186", "185"], ["25", "84"], ["25", "123"], ["109", "146"], ["25", "146"], ["149", "146"], ["152", "146"], ["166", "165"], ["169", "168"], ["25", "168"], ["162", "178"], ["169", "178"], ["25", "178"], ["174", "178"], ["162", "186"], ["169", "186"], ["178", "186"], ["25", "186"], ["84", "87"], ["90", "87"], ["25", "87"], ["68", "87"], ["87", "90"], ["25", "90"], ["99", "93"], ["123", "126"], ["129", "126"], ["25", "126"], ["76", "126"], ["126", "129"], ["25", "129"], ["136", "132"], ["136", "132"], ["136", "132"], ["25", "149"], ["25", "158"], ["109", "166"], ["176", "166"], ["146", "166"], ["25", "166"], ["162", "169"], ["178", "169"], ["25", "169"], ["166", "176"], ["25", "176"], ["149", "152"], ["25", "152"], ["115", "152"], ["102", "152"], ["132", "152"], ["64", "99"], ["25", "99"], ["25", "136"], ["102", "136"], ["152", "136"], ["132", "136"], ["49", "115"], ["49", "68"], ["49", "60"], ["49", "73"], ["49", "64"], ["49", "188"], ["49", "52"], ["49", "161"], ["49", "102"], ["49", "185"], ["49", "104"], ["49", "162"], ["49", "76"], ["49", "112"], ["49", "181"], ["49", "58"], ["49", "164"], ["49", "186"], ["49", "108"], ["49", "49"], ["49", "66"], ["49", "166"], ["49", "106"], ["49", "159"], ["49", "165"], ["49", "55"], ["49", "109"], ["49", "62"], ["76", "84"], ["76", "76"], ["76", "87"], ["76", "79"], ["115", "115"], ["115", "146"], ["115", "149"], ["115", "151"], ["115", "152"], ["115", "118"], ["115", "155"], ["115", "123"], ["115", "126"], ["164", "178"], ["164", "174"], ["164", "164"], ["164", "166"], ["164", "176"], ["164", "165"], ["165", "169"], ["165", "168"], ["87", "94"], ["87", "95"], ["87", "87"], ["87", "93"], ["87", "90"], ["87", "99"], ["126", "136"], ["126", "132"], ["126", "129"], ["126", "138"], ["126", "141"], ["126", "142"], ["126", "126"], ["126", "133"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY scan = new JS())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.alloc,new JS())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new JS())<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "34": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "39": "<(LOCAL,int t: int)<SUB>4</SUB>>", "41": "<(IDENTIFIER,t,int t = nextInt())<SUB>4</SUB>>", "43": "<(IDENTIFIER,scan,nextInt())<SUB>4</SUB>>", "45": "<(LOCAL,int q: int)<SUB>5</SUB>>", "47": "<(IDENTIFIER,q,int q = 1)<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.lessEqualsThan,q &lt;= t)<SUB>5</SUB>>", "51": "<(IDENTIFIER,t,q &lt;= t)<SUB>5</SUB>>", "53": "<(IDENTIFIER,q,q++)<SUB>5</SUB>>", "55": "<(&lt;operator&gt;.assignment,ans = 0)<SUB>6</SUB>>", "57": "<(LITERAL,0,ans = 0)<SUB>6</SUB>>", "59": "<(IDENTIFIER,n,n = nextInt())<SUB>7</SUB>>", "61": "<(IDENTIFIER,scan,nextInt())<SUB>7</SUB>>", "63": "<(IDENTIFIER,m,m = nextInt())<SUB>8</SUB>>", "65": "<(IDENTIFIER,scan,nextInt())<SUB>8</SUB>>", "67": "<(IDENTIFIER,mat,mat = new int[n][m])<SUB>9</SUB>>", "69": "<(IDENTIFIER,n,new int[n][m])<SUB>9</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "81": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "83": "<(LOCAL,int j: int)<SUB>11</SUB>>", "85": "<(IDENTIFIER,j,int j = 0)<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.lessThan,j &lt; m)<SUB>11</SUB>>", "89": "<(IDENTIFIER,m,j &lt; m)<SUB>11</SUB>>", "91": "<(IDENTIFIER,j,j++)<SUB>11</SUB>>", "93": "<(&lt;operator&gt;.assignment,mat[i][j] = nextInt())<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.indexAccess,mat[i])<SUB>12</SUB>>", "97": "<(IDENTIFIER,i,mat[i][j] = nextInt())<SUB>12</SUB>>", "99": "<(nextInt,nextInt())<SUB>12</SUB>>", "101": "<(LOCAL,int[] max: int[])<SUB>15</SUB>>", "103": "<(IDENTIFIER,max,int[] max = new int[m])<SUB>15</SUB>>", "105": "<(IDENTIFIER,m,new int[m])<SUB>15</SUB>>", "106": "<(&lt;operator&gt;.assignment,ANY pq = new PriorityQueue&lt;Item&gt;())<SUB>16</SUB>>", "108": "<(&lt;operator&gt;.alloc,new PriorityQueue&lt;Item&gt;())<SUB>16</SUB>>", "7": "<(IDENTIFIER,pq,new PriorityQueue&lt;Item&gt;())<SUB>16</SUB>>", "111": "<(LOCAL,int i: int)<SUB>17</SUB>>", "113": "<(IDENTIFIER,i,int i = 0)<SUB>17</SUB>>", "115": "<(&lt;operator&gt;.lessThan,i &lt; m)<SUB>17</SUB>>", "117": "<(IDENTIFIER,m,i &lt; m)<SUB>17</SUB>>", "119": "<(IDENTIFIER,i,i++)<SUB>17</SUB>>", "121": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; n); j++),for (int j = 0; Some(j &lt; n); j++))<SUB>18</SUB>>", "123": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>18</SUB>>", "125": "<(LITERAL,0,int j = 0)<SUB>18</SUB>>", "127": "<(IDENTIFIER,j,j &lt; n)<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.postIncrement,j++)<SUB>18</SUB>>", "131": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,max[i])<SUB>19</SUB>>", "135": "<(IDENTIFIER,i,max[i] = max(max[i], mat[j][i]))<SUB>19</SUB>>", "137": "<(IDENTIFIER,Math,max(max[i], mat[j][i]))<SUB>19</SUB>>", "139": "<(IDENTIFIER,max,max(max[i], mat[j][i]))<SUB>19</SUB>>", "141": "<(&lt;operator&gt;.indexAccess,mat[j][i])<SUB>19</SUB>>", "143": "<(IDENTIFIER,mat,max(max[i], mat[j][i]))<SUB>19</SUB>>", "145": "<(IDENTIFIER,i,max(max[i], mat[j][i]))<SUB>19</SUB>>", "147": "<(IDENTIFIER,pq,add(new Item(i, max[i])))<SUB>21</SUB>>", "149": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "151": "<(&lt;operator&gt;.alloc,new Item(i, max[i]))<SUB>21</SUB>>", "153": "<(IDENTIFIER,$obj3,new Item(i, max[i]))>", "155": "<(&lt;operator&gt;.indexAccess,max[i])<SUB>21</SUB>>", "157": "<(IDENTIFIER,i,new Item(i, max[i]))<SUB>21</SUB>>", "10": "<(LOCAL,ArrayList&lt;Item&gt; guys: ANY)<SUB>23</SUB>>", "160": "<(IDENTIFIER,guys,ANY guys = new ArrayList&lt;Item&gt;())<SUB>23</SUB>>", "162": "<(&lt;init&gt;,new ArrayList&lt;Item&gt;())<SUB>23</SUB>>", "163": "<(CONTROL_STRUCTURE,while (!pq.isEmpty() &amp;&amp; guys.size() &lt; 8),while (!pq.isEmpty() &amp;&amp; guys.size() &lt; 8))<SUB>24</SUB>>", "165": "<(&lt;operator&gt;.logicalNot,!pq.isEmpty())<SUB>24</SUB>>", "167": "<(IDENTIFIER,pq,isEmpty())<SUB>24</SUB>>", "169": "<(size,size())<SUB>24</SUB>>", "171": "<(LITERAL,8,guys.size() &lt; 8)<SUB>24</SUB>>", "173": "<(LOCAL,Item tt: ANY)<SUB>25</SUB>>", "175": "<(IDENTIFIER,tt,ANY tt = poll())<SUB>25</SUB>>", "177": "<(IDENTIFIER,pq,poll())<SUB>25</SUB>>", "179": "<(IDENTIFIER,guys,add(tt))<SUB>26</SUB>>", "181": "<(perm,perm(guys, 0, new int[guys.size()]))<SUB>28</SUB>>", "183": "<(IDENTIFIER,guys,perm(guys, 0, new int[guys.size()]))<SUB>28</SUB>>", "185": "<(&lt;operator&gt;.alloc,new int[guys.size()])>", "187": "<(IDENTIFIER,guys,size())<SUB>28</SUB>>", "189": "<(IDENTIFIER,out,println(ans))<SUB>29</SUB>>", "191": "<(flush,flush())<SUB>31</SUB>>", "193": "<(MODIFIER,PUBLIC)>", "195": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}