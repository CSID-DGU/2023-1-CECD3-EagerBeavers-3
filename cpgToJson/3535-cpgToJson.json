{"edges": [["23", "24"], ["23", "25"], ["23", "338"], ["23", "339"], ["23", "340"], ["25", "4"], ["25", "26"], ["25", "29"], ["25", "6"], ["25", "30"], ["25", "33"], ["25", "37"], ["25", "38"], ["25", "42"], ["25", "43"], ["25", "47"], ["25", "48"], ["25", "52"], ["25", "53"], ["25", "57"], ["25", "58"], ["25", "8"], ["25", "62"], ["25", "65"], ["25", "66"], ["25", "67"], ["25", "71"], ["25", "89"], ["25", "90"], ["25", "94"], ["25", "95"], ["25", "99"], ["25", "100"], ["25", "103"], ["25", "104"], ["25", "109"], ["25", "161"], ["25", "184"], ["25", "220"], ["25", "324"], ["25", "325"], ["25", "331"], ["25", "336"], ["26", "27"], ["26", "28"], ["29", "3"], ["30", "31"], ["30", "32"], ["33", "5"], ["33", "34"], ["34", "35"], ["34", "36"], ["38", "39"], ["38", "40"], ["40", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["48", "49"], ["48", "50"], ["50", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["65", "7"], ["67", "68"], ["67", "69"], ["69", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "79"], ["71", "81"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["81", "82"], ["81", "85"], ["82", "83"], ["82", "84"], ["85", "86"], ["85", "88"], ["86", "87"], ["90", "91"], ["90", "92"], ["92", "93"], ["95", "96"], ["95", "97"], ["97", "98"], ["100", "101"], ["100", "102"], ["104", "105"], ["104", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "117"], ["109", "119"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["119", "120"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "139"], ["131", "132"], ["131", "137"], ["132", "133"], ["132", "136"], ["133", "134"], ["133", "135"], ["137", "138"], ["139", "140"], ["139", "143"], ["140", "141"], ["140", "142"], ["143", "144"], ["143", "145"], ["143", "152"], ["143", "157"], ["143", "160"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "156"], ["153", "154"], ["153", "155"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["161", "166"], ["161", "169"], ["161", "171"], ["163", "164"], ["163", "165"], ["166", "167"], ["166", "168"], ["169", "170"], ["171", "172"], ["172", "173"], ["172", "174"], ["172", "175"], ["172", "182"], ["172", "183"], ["175", "176"], ["175", "181"], ["176", "177"], ["176", "178"], ["178", "179"], ["178", "180"], ["184", "185"], ["184", "186"], ["184", "189"], ["184", "192"], ["184", "194"], ["186", "187"], ["186", "188"], ["189", "190"], ["189", "191"], ["192", "193"], ["194", "195"], ["195", "196"], ["195", "197"], ["195", "200"], ["195", "203"], ["195", "205"], ["197", "198"], ["197", "199"], ["200", "201"], ["200", "202"], ["203", "204"], ["205", "206"], ["206", "207"], ["206", "208"], ["206", "213"], ["206", "214"], ["206", "215"], ["208", "209"], ["208", "212"], ["209", "210"], ["209", "211"], ["215", "216"], ["215", "219"], ["216", "217"], ["216", "218"], ["220", "221"], ["220", "222"], ["220", "225"], ["220", "228"], ["220", "230"], ["222", "223"], ["222", "224"], ["225", "226"], ["225", "227"], ["228", "229"], ["230", "231"], ["230", "232"], ["230", "238"], ["230", "239"], ["230", "245"], ["232", "233"], ["232", "234"], ["234", "235"], ["234", "237"], ["235", "236"], ["239", "240"], ["239", "241"], ["241", "242"], ["241", "244"], ["242", "243"], ["245", "246"], ["245", "247"], ["245", "250"], ["245", "255"], ["245", "257"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["252", "253"], ["252", "254"], ["255", "256"], ["257", "258"], ["257", "259"], ["257", "262"], ["259", "260"], ["259", "261"], ["262", "263"], ["262", "264"], ["262", "267"], ["262", "270"], ["262", "272"], ["264", "265"], ["264", "266"], ["267", "268"], ["267", "269"], ["270", "271"], ["272", "273"], ["272", "295"], ["272", "317"], ["273", "274"], ["273", "275"], ["273", "280"], ["273", "287"], ["273", "288"], ["275", "276"], ["275", "279"], ["276", "277"], ["276", "278"], ["280", "281"], ["280", "284"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["288", "289"], ["288", "294"], ["289", "290"], ["289", "293"], ["290", "291"], ["290", "292"], ["295", "296"], ["295", "297"], ["295", "302"], ["295", "309"], ["295", "310"], ["297", "298"], ["297", "301"], ["298", "299"], ["298", "300"], ["302", "303"], ["302", "306"], ["303", "304"], ["303", "305"], ["306", "307"], ["306", "308"], ["310", "311"], ["310", "316"], ["311", "312"], ["311", "315"], ["312", "313"], ["312", "314"], ["317", "318"], ["317", "319"], ["319", "320"], ["319", "323"], ["320", "321"], ["320", "322"], ["325", "326"], ["325", "327"], ["327", "328"], ["327", "329"], ["327", "330"], ["331", "332"], ["331", "333"], ["333", "334"], ["333", "335"], ["336", "337"], ["26", "29"], ["29", "32"], ["30", "36"], ["33", "40"], ["38", "45"], ["43", "50"], ["48", "55"], ["53", "60"], ["58", "64"], ["62", "65"], ["65", "69"], ["67", "73"], ["90", "97"], ["95", "100"], ["100", "106"], ["104", "111"], ["325", "333"], ["331", "336"], ["336", "340"], ["28", "26"], ["32", "30"], ["34", "33"], ["40", "38"], ["45", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["64", "62"], ["69", "67"], ["73", "76"], ["76", "82"], ["76", "92"], ["79", "76"], ["81", "79"], ["92", "90"], ["97", "95"], ["106", "104"], ["111", "114"], ["114", "122"], ["114", "163"], ["117", "114"], ["163", "166"], ["166", "178"], ["166", "186"], ["169", "166"], ["186", "189"], ["189", "197"], ["189", "222"], ["192", "189"], ["222", "225"], ["225", "235"], ["225", "327"], ["228", "225"], ["327", "325"], ["333", "331"], ["36", "34"], ["82", "86"], ["85", "81"], ["172", "169"], ["232", "242"], ["239", "247"], ["86", "85"], ["122", "125"], ["125", "133"], ["125", "117"], ["128", "125"], ["175", "172"], ["197", "200"], ["200", "209"], ["200", "192"], ["203", "200"], ["234", "232"], ["241", "239"], ["247", "252"], ["250", "259"], ["250", "228"], ["255", "252"], ["131", "140"], ["176", "175"], ["206", "203"], ["235", "234"], ["242", "241"], ["252", "250"], ["259", "264"], ["132", "137"], ["137", "131"], ["140", "146"], ["140", "128"], ["143", "128"], ["178", "176"], ["208", "216"], ["215", "206"], ["264", "267"], ["267", "276"], ["267", "255"], ["270", "267"], ["133", "132"], ["145", "153"], ["152", "159"], ["157", "143"], ["209", "208"], ["216", "215"], ["273", "298"], ["295", "320"], ["317", "270"], ["146", "149"], ["149", "145"], ["153", "152"], ["159", "157"], ["275", "281"], ["280", "290"], ["288", "273"], ["297", "303"], ["302", "312"], ["310", "295"], ["319", "317"], ["276", "275"], ["281", "284"], ["284", "280"], ["289", "288"], ["298", "297"], ["303", "306"], ["306", "302"], ["311", "310"], ["320", "319"], ["290", "289"], ["312", "311"], ["23", "28"], ["24", "340"], ["26", "340"], ["29", "340"], ["30", "340"], ["33", "340"], ["33", "340"], ["38", "340"], ["43", "340"], ["48", "340"], ["53", "340"], ["53", "340"], ["58", "340"], ["60", "340"], ["58", "340"], ["58", "340"], ["62", "340"], ["65", "340"], ["67", "340"], ["67", "340"], ["67", "340"], ["90", "340"], ["95", "340"], ["95", "340"], ["100", "340"], ["104", "340"], ["104", "340"], ["104", "340"], ["114", "340"], ["114", "340"], ["166", "340"], ["166", "340"], ["186", "340"], ["189", "340"], ["189", "340"], ["222", "340"], ["225", "340"], ["225", "340"], ["225", "340"], ["325", "340"], ["327", "340"], ["327", "340"], ["327", "340"], ["325", "340"], ["325", "340"], ["331", "340"], ["331", "340"], ["336", "340"], ["336", "340"], ["232", "340"], ["232", "340"], ["239", "340"], ["242", "340"], ["241", "340"], ["239", "340"], ["239", "340"], ["247", "340"], ["250", "340"], ["252", "340"], ["250", "340"], ["250", "340"], ["228", "340"], ["259", "340"], ["259", "340"], ["264", "340"], ["267", "340"], ["267", "340"], ["267", "340"], ["255", "340"], ["273", "340"], ["273", "340"], ["273", "340"], ["295", "340"], ["295", "340"], ["295", "340"], ["295", "340"], ["317", "340"], ["320", "340"], ["319", "340"], ["317", "340"], ["317", "340"], ["270", "340"], ["197", "340"], ["200", "340"], ["200", "340"], ["200", "340"], ["192", "340"], ["206", "340"], ["215", "340"], ["215", "340"], ["206", "340"], ["206", "340"], ["203", "340"], ["172", "340"], ["172", "340"], ["169", "340"], ["122", "340"], ["125", "340"], ["125", "340"], ["117", "340"], ["131", "340"], ["131", "340"], ["131", "340"], ["140", "340"], ["143", "340"], ["143", "340"], ["143", "340"], ["143", "340"], ["128", "340"], ["81", "340"], ["86", "340"], ["85", "340"], ["81", "340"], ["81", "340"], ["79", "340"], ["23", "24"], ["23", "26"], ["23", "30"], ["40", "38"], ["45", "43"], ["50", "48"], ["55", "53"], ["60", "58"], ["23", "62"], ["69", "67"], ["92", "90"], ["97", "95"], ["23", "100"], ["106", "104"], ["106", "104"], ["327", "325"], ["327", "325"], ["327", "325"], ["26", "29"], ["23", "29"], ["30", "33"], ["23", "33"], ["62", "65"], ["23", "65"], ["23", "73"], ["85", "81"], ["85", "81"], ["23", "111"], ["23", "163"], ["23", "186"], ["23", "222"], ["33", "331"], ["23", "331"], ["325", "331"], ["331", "336"], ["23", "336"], ["29", "40"], ["23", "40"], ["40", "45"], ["23", "45"], ["45", "50"], ["23", "50"], ["50", "55"], ["23", "55"], ["55", "60"], ["23", "60"], ["48", "69"], ["23", "69"], ["73", "76"], ["79", "76"], ["23", "76"], ["69", "76"], ["76", "79"], ["23", "79"], ["65", "92"], ["23", "92"], ["92", "97"], ["23", "97"], ["38", "106"], ["23", "106"], ["100", "106"], ["111", "114"], ["117", "114"], ["23", "114"], ["106", "114"], ["114", "117"], ["23", "117"], ["163", "166"], ["169", "166"], ["23", "166"], ["76", "166"], ["166", "169"], ["23", "169"], ["186", "189"], ["192", "189"], ["23", "189"], ["106", "189"], ["125", "189"], ["189", "192"], ["216", "192"], ["23", "192"], ["222", "225"], ["228", "225"], ["23", "225"], ["43", "225"], ["225", "228"], ["23", "228"], ["234", "232"], ["234", "232"], ["241", "239"], ["241", "239"], ["97", "327"], ["295", "327"], ["206", "327"], ["172", "327"], ["137", "327"], ["143", "327"], ["23", "327"], ["90", "327"], ["172", "327"], ["95", "327"], ["206", "327"], ["86", "85"], ["23", "85"], ["23", "122"], ["97", "172"], ["137", "172"], ["143", "172"], ["23", "172"], ["90", "172"], ["23", "197"], ["23", "247"], ["60", "86"], ["23", "86"], ["122", "125"], ["128", "125"], ["23", "125"], ["106", "125"], ["140", "128"], ["149", "128"], ["23", "128"], ["137", "131"], ["197", "200"], ["203", "200"], ["23", "200"], ["166", "200"], ["200", "203"], ["23", "203"], ["235", "234"], ["23", "234"], ["242", "241"], ["23", "241"], ["247", "250"], ["255", "250"], ["23", "250"], ["252", "250"], ["252", "250"], ["250", "255"], ["23", "255"], ["23", "259"], ["97", "206"], ["172", "206"], ["137", "206"], ["143", "206"], ["23", "206"], ["95", "206"], ["215", "206"], ["215", "206"], ["60", "235"], ["242", "235"], ["86", "235"], ["23", "235"], ["235", "242"], ["23", "242"], ["189", "252"], ["23", "252"], ["23", "264"], ["97", "137"], ["143", "137"], ["23", "137"], ["125", "140"], ["23", "140"], ["137", "143"], ["23", "143"], ["131", "143"], ["216", "215"], ["216", "215"], ["23", "215"], ["264", "267"], ["270", "267"], ["23", "267"], ["166", "267"], ["200", "267"], ["319", "270"], ["23", "270"], ["319", "317"], ["319", "317"], ["53", "216"], ["215", "216"], ["23", "216"], ["189", "216"], ["97", "273"], ["295", "273"], ["206", "273"], ["172", "273"], ["137", "273"], ["143", "273"], ["23", "273"], ["288", "273"], ["288", "273"], ["273", "295"], ["23", "295"], ["310", "295"], ["310", "295"], ["140", "149"], ["23", "149"], ["289", "288"], ["289", "288"], ["259", "288"], ["317", "288"], ["23", "288"], ["311", "310"], ["311", "310"], ["288", "310"], ["23", "310"], ["320", "319"], ["320", "319"], ["23", "319"], ["250", "284"], ["23", "284"], ["290", "289"], ["290", "289"], ["23", "289"], ["23", "306"], ["250", "306"], ["312", "311"], ["312", "311"], ["23", "311"], ["312", "320"], ["23", "320"], ["311", "320"], ["58", "290"], ["320", "290"], ["23", "290"], ["267", "290"], ["290", "312"], ["23", "312"], ["289", "312"], ["76", "81"], ["76", "85"], ["76", "76"], ["76", "79"], ["76", "86"], ["76", "82"], ["114", "114"], ["114", "122"], ["114", "117"], ["114", "125"], ["166", "169"], ["166", "178"], ["166", "166"], ["166", "176"], ["166", "175"], ["166", "172"], ["189", "192"], ["189", "197"], ["189", "189"], ["189", "200"], ["225", "225"], ["225", "232"], ["225", "228"], ["225", "247"], ["225", "242"], ["225", "239"], ["225", "252"], ["225", "235"], ["225", "234"], ["225", "241"], ["225", "250"], ["125", "128"], ["125", "131"], ["125", "132"], ["125", "137"], ["125", "140"], ["125", "125"], ["125", "133"], ["200", "215"], ["200", "209"], ["200", "206"], ["200", "208"], ["200", "200"], ["200", "216"], ["200", "203"], ["250", "264"], ["250", "255"], ["250", "259"], ["250", "267"], ["250", "252"], ["250", "250"], ["140", "145"], ["140", "146"], ["140", "149"], ["140", "153"], ["140", "152"], ["140", "157"], ["140", "159"], ["140", "143"], ["267", "319"], ["267", "320"], ["267", "273"], ["267", "290"], ["267", "275"], ["267", "317"], ["267", "298"], ["267", "284"], ["267", "302"], ["267", "281"], ["267", "306"], ["267", "289"], ["267", "267"], ["267", "288"], ["267", "276"], ["267", "280"], ["267", "295"], ["267", "311"], ["267", "270"], ["267", "310"], ["267", "303"], ["267", "312"], ["267", "297"]], "features": {"23": "<(METHOD,main)<SUB>1</SUB>>", "25": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "26": "<(&lt;operator&gt;.assignment,ANY scanner = new FastScanner())<SUB>2</SUB>>", "28": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>2</SUB>>", "3": "<(IDENTIFIER,scanner,new FastScanner())<SUB>2</SUB>>", "30": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(System.out))<SUB>3</SUB>>", "32": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(System.out))<SUB>3</SUB>>", "35": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "37": "<(LOCAL,int N: int)<SUB>4</SUB>>", "39": "<(IDENTIFIER,N,int N = nextInt())<SUB>4</SUB>>", "41": "<(IDENTIFIER,scanner,nextInt())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,int M = nextInt())<SUB>5</SUB>>", "45": "<(nextInt,nextInt())<SUB>5</SUB>>", "47": "<(LOCAL,int K: int)<SUB>6</SUB>>", "49": "<(IDENTIFIER,K,int K = nextInt())<SUB>6</SUB>>", "51": "<(IDENTIFIER,scanner,nextInt())<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int C = nextInt())<SUB>7</SUB>>", "55": "<(nextInt,nextInt())<SUB>7</SUB>>", "57": "<(LOCAL,int D: int)<SUB>8</SUB>>", "59": "<(IDENTIFIER,D,int D = nextInt())<SUB>8</SUB>>", "61": "<(IDENTIFIER,scanner,nextInt())<SUB>8</SUB>>", "62": "<(&lt;operator&gt;.assignment,ANY solver = new EdmondsKarp())<SUB>9</SUB>>", "64": "<(&lt;operator&gt;.alloc,new EdmondsKarp())<SUB>9</SUB>>", "7": "<(IDENTIFIER,solver,new EdmondsKarp())<SUB>9</SUB>>", "67": "<(&lt;operator&gt;.assignment,int[] people = new int[K])<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.alloc,new int[K])>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; K); i++),for (int i = 0; Some(i &lt; K); i++))<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>11</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,i &lt; K)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.postIncrement,i++)<SUB>11</SUB>>", "81": "<(&lt;operator&gt;.assignment,people[i] = scanner.nextInt() - 1)<SUB>11</SUB>>", "83": "<(IDENTIFIER,people,people[i] = scanner.nextInt() - 1)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.subtraction,scanner.nextInt() - 1)<SUB>11</SUB>>", "87": "<(IDENTIFIER,scanner,nextInt())<SUB>11</SUB>>", "89": "<(LOCAL,Node src: ANY)<SUB>12</SUB>>", "91": "<(IDENTIFIER,src,ANY src = addNode())<SUB>12</SUB>>", "93": "<(IDENTIFIER,solver,addNode())<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.assignment,ANY snk = addNode())<SUB>13</SUB>>", "97": "<(addNode,addNode())<SUB>13</SUB>>", "99": "<(LOCAL,int amt: int)<SUB>14</SUB>>", "101": "<(IDENTIFIER,amt,int amt = 350)<SUB>14</SUB>>", "103": "<(LOCAL,Node[][] timeNodes: ANY)<SUB>15</SUB>>", "105": "<(IDENTIFIER,timeNodes,ANY timeNodes = new Node[N][amt])<SUB>15</SUB>>", "107": "<(IDENTIFIER,N,new Node[N][amt])<SUB>15</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; N); i++),for (int i = 0; Some(i &lt; N); i++))<SUB>16</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>16</SUB>>", "113": "<(LITERAL,0,int i = 0)<SUB>16</SUB>>", "115": "<(IDENTIFIER,i,i &lt; N)<SUB>16</SUB>>", "117": "<(&lt;operator&gt;.postIncrement,i++)<SUB>16</SUB>>", "119": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "121": "<(LOCAL,int j: int)<SUB>17</SUB>>", "123": "<(IDENTIFIER,j,int j = 1)<SUB>17</SUB>>", "125": "<(&lt;operator&gt;.lessThan,j &lt; amt)<SUB>17</SUB>>", "127": "<(IDENTIFIER,amt,j &lt; amt)<SUB>17</SUB>>", "129": "<(IDENTIFIER,j,j++)<SUB>17</SUB>>", "131": "<(&lt;operator&gt;.assignment,timeNodes[i][j] = addNode())<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.indexAccess,timeNodes[i])<SUB>18</SUB>>", "135": "<(IDENTIFIER,i,timeNodes[i][j] = addNode())<SUB>18</SUB>>", "137": "<(addNode,addNode())<SUB>18</SUB>>", "139": "<(CONTROL_STRUCTURE,if (j &gt; 1),if (j &gt; 1))<SUB>19</SUB>>", "141": "<(IDENTIFIER,j,j &gt; 1)<SUB>19</SUB>>", "143": "<(link,link(timeNodes[i][j - 1], timeNodes[i][j], Integer.MAX_VALUE, 0))<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.indexAccess,timeNodes[i][j - 1])<SUB>19</SUB>>", "147": "<(IDENTIFIER,timeNodes,link(timeNodes[i][j - 1], timeNodes[i][j], Integer.MAX_VALUE, 0))<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.subtraction,j - 1)<SUB>19</SUB>>", "151": "<(LITERAL,1,j - 1)<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.indexAccess,timeNodes[i])<SUB>19</SUB>>", "155": "<(IDENTIFIER,i,link(timeNodes[i][j - 1], timeNodes[i][j], Integer.MAX_VALUE, 0))<SUB>19</SUB>>", "157": "<(&lt;operator&gt;.fieldAccess,Integer.MAX_VALUE)<SUB>19</SUB>>", "159": "<(FIELD_IDENTIFIER,MAX_VALUE,MAX_VALUE)<SUB>19</SUB>>", "161": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; K); i++),for (int i = 0; Some(i &lt; K); i++))<SUB>22</SUB>>", "163": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>22</SUB>>", "165": "<(LITERAL,0,int i = 0)<SUB>22</SUB>>", "167": "<(IDENTIFIER,i,i &lt; K)<SUB>22</SUB>>", "169": "<(&lt;operator&gt;.postIncrement,i++)<SUB>22</SUB>>", "171": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "173": "<(IDENTIFIER,solver,link(src, timeNodes[people[i]][1], 1, 0))<SUB>23</SUB>>", "175": "<(&lt;operator&gt;.indexAccess,timeNodes[people[i]][1])<SUB>23</SUB>>", "177": "<(IDENTIFIER,timeNodes,link(src, timeNodes[people[i]][1], 1, 0))<SUB>23</SUB>>", "179": "<(IDENTIFIER,people,link(src, timeNodes[people[i]][1], 1, 0))<SUB>23</SUB>>", "181": "<(LITERAL,1,link(src, timeNodes[people[i]][1], 1, 0))<SUB>23</SUB>>", "183": "<(LITERAL,0,link(src, timeNodes[people[i]][1], 1, 0))<SUB>23</SUB>>", "185": "<(LOCAL,int i: int)<SUB>25</SUB>>", "187": "<(IDENTIFIER,i,int i = 1)<SUB>25</SUB>>", "189": "<(&lt;operator&gt;.lessThan,i &lt; amt)<SUB>25</SUB>>", "191": "<(IDENTIFIER,amt,i &lt; amt)<SUB>25</SUB>>", "193": "<(IDENTIFIER,i,i++)<SUB>25</SUB>>", "195": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; K); j++),for (int j = 0; Some(j &lt; K); j++))<SUB>26</SUB>>", "197": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>26</SUB>>", "199": "<(LITERAL,0,int j = 0)<SUB>26</SUB>>", "201": "<(IDENTIFIER,j,j &lt; K)<SUB>26</SUB>>", "203": "<(&lt;operator&gt;.postIncrement,j++)<SUB>26</SUB>>", "205": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "207": "<(IDENTIFIER,solver,link(timeNodes[0][i], snk, 1, C * i - C))<SUB>27</SUB>>", "209": "<(&lt;operator&gt;.indexAccess,timeNodes[0])<SUB>27</SUB>>", "211": "<(LITERAL,0,link(timeNodes[0][i], snk, 1, C * i - C))<SUB>27</SUB>>", "213": "<(IDENTIFIER,snk,link(timeNodes[0][i], snk, 1, C * i - C))<SUB>27</SUB>>", "215": "<(&lt;operator&gt;.subtraction,C * i - C)<SUB>27</SUB>>", "217": "<(IDENTIFIER,C,C * i)<SUB>27</SUB>>", "219": "<(IDENTIFIER,C,C * i - C)<SUB>27</SUB>>", "221": "<(LOCAL,int i: int)<SUB>30</SUB>>", "223": "<(IDENTIFIER,i,int i = 0)<SUB>30</SUB>>", "225": "<(&lt;operator&gt;.lessThan,i &lt; M)<SUB>30</SUB>>", "227": "<(IDENTIFIER,M,i &lt; M)<SUB>30</SUB>>", "229": "<(IDENTIFIER,i,i++)<SUB>30</SUB>>", "231": "<(LOCAL,int a: int)<SUB>31</SUB>>", "233": "<(IDENTIFIER,a,int a = scanner.nextInt() - 1)<SUB>31</SUB>>", "235": "<(nextInt,nextInt())<SUB>31</SUB>>", "237": "<(LITERAL,1,scanner.nextInt() - 1)<SUB>31</SUB>>", "239": "<(&lt;operator&gt;.assignment,int b = scanner.nextInt() - 1)<SUB>32</SUB>>", "241": "<(&lt;operator&gt;.subtraction,scanner.nextInt() - 1)<SUB>32</SUB>>", "243": "<(IDENTIFIER,scanner,nextInt())<SUB>32</SUB>>", "245": "<(CONTROL_STRUCTURE,for (int j = 1; Some(j &lt; amt - 1); j++),for (int j = 1; Some(j &lt; amt - 1); j++))<SUB>33</SUB>>", "247": "<(&lt;operator&gt;.assignment,int j = 1)<SUB>33</SUB>>", "249": "<(LITERAL,1,int j = 1)<SUB>33</SUB>>", "251": "<(IDENTIFIER,j,j &lt; amt - 1)<SUB>33</SUB>>", "253": "<(IDENTIFIER,amt,amt - 1)<SUB>33</SUB>>", "255": "<(&lt;operator&gt;.postIncrement,j++)<SUB>33</SUB>>", "257": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>33</SUB>>", "259": "<(&lt;operator&gt;.assignment,int prev = 0)<SUB>34</SUB>>", "261": "<(LITERAL,0,int prev = 0)<SUB>34</SUB>>", "263": "<(LOCAL,int k: int)<SUB>35</SUB>>", "265": "<(IDENTIFIER,k,int k = 1)<SUB>35</SUB>>", "267": "<(&lt;operator&gt;.lessEqualsThan,k &lt;= K)<SUB>35</SUB>>", "269": "<(IDENTIFIER,K,k &lt;= K)<SUB>35</SUB>>", "271": "<(IDENTIFIER,k,k++)<SUB>35</SUB>>", "273": "<(link,link(timeNodes[a][j], timeNodes[b][j + 1], 1, D * k * k - prev))<SUB>36</SUB>>", "275": "<(&lt;operator&gt;.indexAccess,timeNodes[a][j])<SUB>36</SUB>>", "277": "<(IDENTIFIER,timeNodes,link(timeNodes[a][j], timeNodes[b][j + 1], 1, D * k * k - prev))<SUB>36</SUB>>", "279": "<(IDENTIFIER,j,link(timeNodes[a][j], timeNodes[b][j + 1], 1, D * k * k - prev))<SUB>36</SUB>>", "281": "<(&lt;operator&gt;.indexAccess,timeNodes[b])<SUB>36</SUB>>", "283": "<(IDENTIFIER,b,link(timeNodes[a][j], timeNodes[b][j + 1], 1, D * k * k - prev))<SUB>36</SUB>>", "285": "<(IDENTIFIER,j,j + 1)<SUB>36</SUB>>", "287": "<(LITERAL,1,link(timeNodes[a][j], timeNodes[b][j + 1], 1, D * k * k - prev))<SUB>36</SUB>>", "289": "<(&lt;operator&gt;.multiplication,D * k * k)<SUB>36</SUB>>", "291": "<(IDENTIFIER,D,D * k)<SUB>36</SUB>>", "293": "<(IDENTIFIER,k,D * k * k)<SUB>36</SUB>>", "295": "<(link,link(timeNodes[b][j], timeNodes[a][j + 1], 1, D * k * k - prev))<SUB>37</SUB>>", "297": "<(&lt;operator&gt;.indexAccess,timeNodes[b][j])<SUB>37</SUB>>", "299": "<(IDENTIFIER,timeNodes,link(timeNodes[b][j], timeNodes[a][j + 1], 1, D * k * k - prev))<SUB>37</SUB>>", "301": "<(IDENTIFIER,j,link(timeNodes[b][j], timeNodes[a][j + 1], 1, D * k * k - prev))<SUB>37</SUB>>", "303": "<(&lt;operator&gt;.indexAccess,timeNodes[a])<SUB>37</SUB>>", "305": "<(IDENTIFIER,a,link(timeNodes[b][j], timeNodes[a][j + 1], 1, D * k * k - prev))<SUB>37</SUB>>", "307": "<(IDENTIFIER,j,j + 1)<SUB>37</SUB>>", "309": "<(LITERAL,1,link(timeNodes[b][j], timeNodes[a][j + 1], 1, D * k * k - prev))<SUB>37</SUB>>", "311": "<(&lt;operator&gt;.multiplication,D * k * k)<SUB>37</SUB>>", "313": "<(IDENTIFIER,D,D * k)<SUB>37</SUB>>", "315": "<(IDENTIFIER,k,D * k * k)<SUB>37</SUB>>", "317": "<(&lt;operator&gt;.assignment,prev = D * k * k)<SUB>38</SUB>>", "319": "<(&lt;operator&gt;.multiplication,D * k * k)<SUB>38</SUB>>", "321": "<(IDENTIFIER,D,D * k)<SUB>38</SUB>>", "323": "<(IDENTIFIER,k,D * k * k)<SUB>38</SUB>>", "325": "<(&lt;operator&gt;.assignment,long[] ret = getMinCostMaxFlow(src, snk))<SUB>42</SUB>>", "327": "<(getMinCostMaxFlow,getMinCostMaxFlow(src, snk))<SUB>42</SUB>>", "329": "<(IDENTIFIER,src,getMinCostMaxFlow(src, snk))<SUB>42</SUB>>", "331": "<(println,println(ret[1]))<SUB>43</SUB>>", "333": "<(&lt;operator&gt;.indexAccess,ret[1])<SUB>43</SUB>>", "335": "<(LITERAL,1,println(ret[1]))<SUB>43</SUB>>", "337": "<(IDENTIFIER,out,flush())<SUB>44</SUB>>", "339": "<(MODIFIER,STATIC)>"}}