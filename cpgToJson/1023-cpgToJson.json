{"edges": [["21", "22"], ["21", "23"], ["21", "190"], ["21", "191"], ["21", "192"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "28"], ["23", "29"], ["23", "6"], ["23", "34"], ["23", "37"], ["23", "39"], ["23", "40"], ["23", "44"], ["23", "45"], ["23", "49"], ["23", "79"], ["23", "80"], ["23", "83"], ["23", "188"], ["24", "25"], ["24", "26"], ["27", "3"], ["29", "30"], ["29", "31"], ["31", "32"], ["31", "33"], ["34", "35"], ["34", "36"], ["37", "5"], ["37", "38"], ["40", "41"], ["40", "42"], ["42", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["49", "54"], ["49", "57"], ["49", "59"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "56"], ["57", "58"], ["59", "60"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "71"], ["65", "66"], ["65", "67"], ["67", "68"], ["67", "69"], ["67", "70"], ["71", "72"], ["71", "73"], ["73", "74"], ["73", "75"], ["73", "76"], ["76", "77"], ["76", "78"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["83", "88"], ["83", "91"], ["83", "93"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["91", "92"], ["93", "94"], ["93", "177"], ["94", "95"], ["94", "106"], ["95", "96"], ["95", "105"], ["96", "97"], ["96", "98"], ["98", "99"], ["98", "102"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["106", "107"], ["106", "108"], ["106", "113"], ["106", "114"], ["106", "117"], ["106", "134"], ["106", "146"], ["106", "147"], ["106", "152"], ["106", "153"], ["106", "171"], ["106", "176"], ["108", "109"], ["108", "110"], ["110", "111"], ["110", "112"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "123"], ["117", "129"], ["118", "119"], ["118", "122"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "127"], ["124", "125"], ["124", "126"], ["127", "128"], ["129", "130"], ["130", "131"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "145"], ["137", "138"], ["137", "139"], ["139", "140"], ["139", "141"], ["139", "142"], ["142", "143"], ["142", "144"], ["147", "148"], ["147", "149"], ["149", "150"], ["149", "151"], ["153", "154"], ["153", "155"], ["155", "156"], ["155", "161"], ["155", "164"], ["156", "157"], ["156", "160"], ["157", "158"], ["157", "159"], ["161", "162"], ["161", "163"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["171", "172"], ["171", "173"], ["173", "174"], ["173", "175"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "185"], ["182", "183"], ["182", "184"], ["185", "186"], ["185", "187"], ["188", "189"], ["24", "27"], ["27", "33"], ["29", "36"], ["34", "37"], ["37", "42"], ["40", "47"], ["45", "51"], ["80", "85"], ["188", "192"], ["26", "24"], ["31", "29"], ["36", "34"], ["42", "40"], ["47", "45"], ["51", "54"], ["54", "61"], ["54", "80"], ["57", "54"], ["85", "88"], ["88", "100"], ["88", "188"], ["91", "88"], ["33", "31"], ["60", "57"], ["177", "91"], ["61", "66"], ["64", "60"], ["95", "110"], ["95", "183"], ["179", "177"], ["65", "72"], ["71", "64"], ["96", "95"], ["108", "114"], ["114", "119"], ["134", "149"], ["147", "157"], ["153", "173"], ["171", "188"], ["181", "179"], ["66", "67"], ["67", "65"], ["72", "76"], ["73", "71"], ["98", "96"], ["110", "108"], ["118", "124"], ["118", "131"], ["136", "134"], ["149", "147"], ["155", "153"], ["173", "171"], ["182", "185"], ["185", "181"], ["76", "73"], ["99", "102"], ["102", "98"], ["119", "118"], ["124", "127"], ["127", "138"], ["137", "136"], ["156", "166"], ["156", "161"], ["161", "155"], ["164", "155"], ["183", "182"], ["100", "99"], ["131", "138"], ["138", "142"], ["139", "137"], ["157", "156"], ["165", "164"], ["142", "139"], ["166", "167"], ["167", "165"], ["21", "26"], ["22", "192"], ["24", "192"], ["27", "192"], ["29", "192"], ["29", "192"], ["34", "192"], ["37", "192"], ["37", "192"], ["40", "192"], ["42", "192"], ["40", "192"], ["40", "192"], ["45", "192"], ["45", "192"], ["45", "192"], ["80", "192"], ["80", "192"], ["85", "192"], ["88", "192"], ["88", "192"], ["98", "192"], ["98", "192"], ["96", "192"], ["95", "192"], ["95", "192"], ["95", "192"], ["177", "192"], ["181", "192"], ["181", "192"], ["179", "192"], ["177", "192"], ["177", "192"], ["91", "192"], ["110", "192"], ["110", "192"], ["108", "192"], ["108", "192"], ["114", "192"], ["118", "192"], ["118", "192"], ["131", "192"], ["124", "192"], ["127", "192"], ["139", "192"], ["137", "192"], ["136", "192"], ["134", "192"], ["134", "192"], ["149", "192"], ["147", "192"], ["147", "192"], ["157", "192"], ["156", "192"], ["155", "192"], ["167", "192"], ["167", "192"], ["165", "192"], ["164", "192"], ["155", "192"], ["161", "192"], ["155", "192"], ["153", "192"], ["153", "192"], ["173", "192"], ["173", "192"], ["171", "192"], ["171", "192"], ["188", "192"], ["188", "192"], ["60", "192"], ["65", "192"], ["64", "192"], ["73", "192"], ["73", "192"], ["71", "192"], ["64", "192"], ["60", "192"], ["60", "192"], ["57", "192"], ["149", "192"], ["21", "22"], ["21", "24"], ["21", "34"], ["42", "40"], ["47", "45"], ["21", "80"], ["24", "27"], ["21", "27"], ["34", "37"], ["21", "37"], ["29", "37"], ["21", "51"], ["21", "85"], ["37", "188"], ["171", "188"], ["21", "188"], ["27", "42"], ["21", "42"], ["21", "47"], ["51", "54"], ["57", "54"], ["21", "54"], ["76", "57"], ["21", "57"], ["64", "60"], ["64", "60"], ["85", "88"], ["91", "88"], ["21", "88"], ["21", "91"], ["88", "91"], ["21", "177"], ["80", "177"], ["181", "177"], ["181", "177"], ["21", "64"], ["67", "64"], ["67", "64"], ["67", "64"], ["73", "64"], ["73", "64"], ["73", "64"], ["80", "95"], ["177", "95"], ["21", "95"], ["98", "95"], ["98", "95"], ["40", "95"], ["110", "108"], ["110", "108"], ["108", "114"], ["21", "114"], ["136", "134"], ["136", "134"], ["149", "147"], ["149", "147"], ["139", "153"], ["161", "153"], ["161", "153"], ["164", "153"], ["164", "153"], ["21", "179"], ["80", "179"], ["177", "179"], ["181", "179"], ["181", "179"], ["21", "65"], ["67", "65"], ["67", "65"], ["67", "65"], ["21", "71"], ["73", "71"], ["73", "71"], ["73", "71"], ["80", "96"], ["177", "96"], ["21", "96"], ["98", "96"], ["98", "96"], ["131", "134"], ["127", "134"], ["21", "134"], ["37", "171"], ["21", "171"], ["173", "171"], ["173", "171"], ["21", "181"], ["88", "181"], ["45", "181"], ["98", "181"], ["73", "67"], ["21", "67"], ["54", "67"], ["67", "73"], ["21", "73"], ["76", "73"], ["76", "73"], ["21", "98"], ["88", "98"], ["45", "98"], ["181", "98"], ["60", "98"], ["95", "110"], ["21", "110"], ["80", "110"], ["177", "110"], ["119", "118"], ["119", "118"], ["21", "118"], ["119", "124"], ["21", "124"], ["21", "136"], ["139", "136"], ["139", "136"], ["139", "136"], ["21", "149"], ["134", "149"], ["139", "155"], ["161", "155"], ["161", "155"], ["164", "155"], ["164", "155"], ["147", "173"], ["21", "173"], ["153", "173"], ["21", "182"], ["88", "182"], ["67", "76"], ["21", "76"], ["21", "99"], ["88", "99"], ["21", "119"], ["108", "119"], ["88", "119"], ["119", "124"], ["124", "127"], ["21", "127"], ["119", "131"], ["21", "131"], ["21", "137"], ["139", "137"], ["139", "137"], ["139", "137"], ["157", "156"], ["157", "156"], ["21", "156"], ["157", "161"], ["21", "161"], ["21", "164"], ["167", "164"], ["167", "164"], ["119", "131"], ["73", "139"], ["21", "139"], ["142", "139"], ["142", "139"], ["114", "157"], ["21", "157"], ["142", "157"], ["21", "165"], ["167", "165"], ["167", "165"], ["21", "142"], ["119", "142"], ["157", "167"], ["21", "167"], ["157", "167"], ["54", "60"], ["54", "73"], ["54", "64"], ["54", "57"], ["54", "67"], ["54", "76"], ["54", "54"], ["54", "61"], ["54", "66"], ["54", "72"], ["54", "65"], ["54", "71"], ["88", "96"], ["88", "98"], ["88", "102"], ["88", "95"], ["88", "100"], ["88", "99"], ["95", "136"], ["95", "114"], ["95", "179"], ["95", "149"], ["95", "185"], ["95", "119"], ["95", "153"], ["95", "91"], ["95", "134"], ["95", "138"], ["95", "181"], ["95", "173"], ["95", "137"], ["95", "118"], ["95", "182"], ["95", "88"], ["95", "155"], ["95", "139"], ["95", "108"], ["95", "171"], ["95", "183"], ["95", "142"], ["95", "157"], ["95", "177"], ["95", "147"], ["95", "110"], ["95", "156"], ["118", "131"], ["118", "127"], ["118", "124"], ["156", "167"], ["156", "161"], ["156", "164"], ["156", "166"], ["156", "165"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY sc = new FastReader())<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>3</SUB>>", "3": "<(IDENTIFIER,sc,new FastReader())<SUB>3</SUB>>", "29": "<(&lt;operator&gt;.assignment,ANY outputstream = System.out)<SUB>4</SUB>>", "31": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>4</SUB>>", "33": "<(FIELD_IDENTIFIER,out,out)<SUB>4</SUB>>", "34": "<(&lt;operator&gt;.assignment,ANY out = new PrintWriter(outputstream))<SUB>5</SUB>>", "36": "<(&lt;operator&gt;.alloc,new PrintWriter(outputstream))<SUB>5</SUB>>", "5": "<(IDENTIFIER,out,new PrintWriter(outputstream))<SUB>5</SUB>>", "39": "<(LOCAL,long n: long)<SUB>7</SUB>>", "41": "<(IDENTIFIER,n,long n = nextLong())<SUB>7</SUB>>", "43": "<(IDENTIFIER,sc,nextLong())<SUB>7</SUB>>", "45": "<(&lt;operator&gt;.assignment,long[] arr = new long[14])<SUB>8</SUB>>", "47": "<(&lt;operator&gt;.alloc,new long[14])>", "49": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 13); i++),for (int i = 1; Some(i &lt;= 13); i++))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>9</SUB>>", "53": "<(LITERAL,1,int i = 1)<SUB>9</SUB>>", "55": "<(IDENTIFIER,i,i &lt;= 13)<SUB>9</SUB>>", "57": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "59": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "61": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>10</SUB>>", "63": "<(IDENTIFIER,i,arr[i] = (long) Math.pow(10, i) - (long) Math.pow(10, i - 1))<SUB>10</SUB>>", "65": "<(&lt;operator&gt;.cast,(long) Math.pow(10, i))<SUB>10</SUB>>", "67": "<(pow,Math.pow(10, i))<SUB>10</SUB>>", "69": "<(LITERAL,10,Math.pow(10, i))<SUB>10</SUB>>", "71": "<(&lt;operator&gt;.cast,(long) Math.pow(10, i - 1))<SUB>10</SUB>>", "73": "<(pow,Math.pow(10, i - 1))<SUB>10</SUB>>", "75": "<(LITERAL,10,Math.pow(10, i - 1))<SUB>10</SUB>>", "77": "<(IDENTIFIER,i,i - 1)<SUB>10</SUB>>", "79": "<(LOCAL,long total: long)<SUB>12</SUB>>", "81": "<(IDENTIFIER,total,long total = 0)<SUB>12</SUB>>", "83": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 13); i++),for (int i = 1; Some(i &lt;= 13); i++))<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>13</SUB>>", "87": "<(LITERAL,1,int i = 1)<SUB>13</SUB>>", "89": "<(IDENTIFIER,i,i &lt;= 13)<SUB>13</SUB>>", "91": "<(&lt;operator&gt;.postIncrement,i++)<SUB>13</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>13</SUB>>", "95": "<(&lt;operator&gt;.greaterEqualsThan,total + (long) i * arr[i] &gt;= n)<SUB>14</SUB>>", "97": "<(IDENTIFIER,total,total + (long) i * arr[i])<SUB>14</SUB>>", "99": "<(&lt;operator&gt;.cast,(long) i)<SUB>14</SUB>>", "101": "<(IDENTIFIER,i,(long) i)<SUB>14</SUB>>", "103": "<(IDENTIFIER,arr,(long) i * arr[i])<SUB>14</SUB>>", "105": "<(IDENTIFIER,n,total + (long) i * arr[i] &gt;= n)<SUB>14</SUB>>", "107": "<(LOCAL,long ans: long)<SUB>15</SUB>>", "109": "<(IDENTIFIER,ans,long ans = n - total)<SUB>15</SUB>>", "111": "<(IDENTIFIER,n,n - total)<SUB>15</SUB>>", "113": "<(LOCAL,long rest: long)<SUB>16</SUB>>", "115": "<(IDENTIFIER,rest,long rest = ans)<SUB>16</SUB>>", "117": "<(CONTROL_STRUCTURE,if (ans % i != 0),if (ans % i != 0))<SUB>17</SUB>>", "119": "<(&lt;operator&gt;.modulo,ans % i)<SUB>17</SUB>>", "121": "<(IDENTIFIER,i,ans % i)<SUB>17</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>17</SUB>>", "125": "<(IDENTIFIER,ans,ans /= i)<SUB>18</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,ans++)<SUB>19</SUB>>", "129": "<(CONTROL_STRUCTURE,else,else)<SUB>20</SUB>>", "131": "<(&lt;operator&gt;.assignmentDivision,ans /= i)<SUB>21</SUB>>", "133": "<(IDENTIFIER,i,ans /= i)<SUB>21</SUB>>", "135": "<(IDENTIFIER,ans,ans += (long) Math.pow(10, i - 1) - 1)<SUB>23</SUB>>", "137": "<(&lt;operator&gt;.cast,(long) Math.pow(10, i - 1))<SUB>23</SUB>>", "139": "<(pow,Math.pow(10, i - 1))<SUB>23</SUB>>", "141": "<(LITERAL,10,Math.pow(10, i - 1))<SUB>23</SUB>>", "143": "<(IDENTIFIER,i,i - 1)<SUB>23</SUB>>", "145": "<(LITERAL,1,(long) Math.pow(10, i - 1) - 1)<SUB>23</SUB>>", "147": "<(&lt;operator&gt;.assignment,String str = Long.toString(ans))<SUB>24</SUB>>", "149": "<(toString,Long.toString(ans))<SUB>24</SUB>>", "151": "<(IDENTIFIER,ans,Long.toString(ans))<SUB>24</SUB>>", "153": "<(&lt;operator&gt;.assignment,int ind = (rest % i == 0) ? i - 1 : (int) (rest % i) - 1)<SUB>25</SUB>>", "155": "<(&lt;operator&gt;.conditional,(rest % i == 0) ? i - 1 : (int) (rest % i) - 1)<SUB>25</SUB>>", "157": "<(&lt;operator&gt;.modulo,rest % i)<SUB>25</SUB>>", "159": "<(IDENTIFIER,i,rest % i)<SUB>25</SUB>>", "161": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>25</SUB>>", "163": "<(LITERAL,1,i - 1)<SUB>25</SUB>>", "165": "<(&lt;operator&gt;.cast,(int) (rest % i))<SUB>25</SUB>>", "167": "<(&lt;operator&gt;.modulo,rest % i)<SUB>25</SUB>>", "169": "<(IDENTIFIER,i,rest % i)<SUB>25</SUB>>", "171": "<(println,println(str.charAt(ind)))<SUB>26</SUB>>", "173": "<(charAt,str.charAt(ind))<SUB>26</SUB>>", "175": "<(IDENTIFIER,ind,str.charAt(ind))<SUB>26</SUB>>", "177": "<(&lt;operator&gt;.assignment,total = total + (long) i * arr[i])<SUB>29</SUB>>", "179": "<(&lt;operator&gt;.addition,total + (long) i * arr[i])<SUB>29</SUB>>", "181": "<(&lt;operator&gt;.multiplication,(long) i * arr[i])<SUB>29</SUB>>", "183": "<(TYPE_REF,long,long)<SUB>29</SUB>>", "185": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>29</SUB>>", "187": "<(IDENTIFIER,i,(long) i * arr[i])<SUB>29</SUB>>", "189": "<(IDENTIFIER,out,close())<SUB>31</SUB>>", "191": "<(MODIFIER,STATIC)>"}}