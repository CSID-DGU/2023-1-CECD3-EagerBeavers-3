{"edges": [["19", "21"], ["19", "139"], ["19", "140"], ["19", "141"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "26"], ["21", "27"], ["21", "31"], ["22", "23"], ["22", "24"], ["25", "3"], ["27", "28"], ["27", "29"], ["29", "30"], ["31", "32"], ["31", "35"], ["31", "42"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "41"], ["36", "37"], ["36", "40"], ["37", "38"], ["37", "39"], ["42", "43"], ["43", "44"], ["43", "45"], ["43", "48"], ["43", "49"], ["43", "52"], ["43", "53"], ["43", "56"], ["43", "57"], ["43", "60"], ["43", "92"], ["43", "99"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "64"], ["61", "62"], ["61", "63"], ["64", "65"], ["64", "68"], ["64", "73"], ["64", "76"], ["64", "90"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "81"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["86", "89"], ["90", "91"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "105"], ["99", "113"], ["100", "101"], ["100", "104"], ["101", "102"], ["101", "103"], ["105", "106"], ["106", "107"], ["106", "110"], ["107", "108"], ["107", "109"], ["110", "111"], ["110", "112"], ["113", "114"], ["114", "115"], ["114", "117"], ["114", "122"], ["114", "123"], ["114", "128"], ["115", "116"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["128", "129"], ["128", "132"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["22", "25"], ["25", "29"], ["27", "32"], ["24", "22"], ["29", "27"], ["32", "39"], ["32", "45"], ["36", "41"], ["41", "141"], ["37", "36"], ["45", "49"], ["49", "53"], ["53", "57"], ["57", "61"], ["92", "101"], ["39", "37"], ["61", "65"], ["61", "96"], ["94", "92"], ["100", "109"], ["100", "115"], ["65", "70"], ["68", "73"], ["73", "81"], ["76", "90"], ["90", "61"], ["96", "94"], ["101", "100"], ["106", "141"], ["70", "68"], ["78", "76"], ["107", "110"], ["110", "106"], ["115", "119"], ["117", "125"], ["123", "131"], ["128", "141"], ["79", "85"], ["84", "78"], ["109", "107"], ["119", "117"], ["125", "123"], ["129", "136"], ["132", "128"], ["81", "79"], ["85", "86"], ["86", "84"], ["131", "129"], ["134", "132"], ["135", "134"], ["136", "135"], ["19", "24"], ["41", "141"], ["20", "141"], ["22", "141"], ["25", "141"], ["29", "141"], ["27", "141"], ["27", "141"], ["32", "141"], ["36", "141"], ["36", "141"], ["36", "141"], ["86", "141"], ["125", "141"], ["19", "20"], ["19", "22"], ["29", "27"], ["22", "25"], ["19", "25"], ["25", "29"], ["19", "29"], ["27", "32"], ["19", "32"], ["19", "41"], ["32", "36"], ["19", "36"], ["19", "45"], ["19", "49"], ["19", "53"], ["19", "57"], ["45", "92"], ["68", "92"], ["19", "92"], ["96", "92"], ["96", "92"], ["32", "61"], ["65", "61"], ["19", "61"], ["49", "61"], ["76", "61"], ["61", "65"], ["19", "65"], ["70", "68"], ["70", "68"], ["70", "73"], ["19", "73"], ["78", "76"], ["78", "76"], ["45", "94"], ["68", "94"], ["19", "94"], ["96", "94"], ["96", "94"], ["101", "100"], ["101", "100"], ["19", "100"], ["61", "65"], ["45", "68"], ["19", "68"], ["86", "90"], ["19", "90"], ["61", "96"], ["19", "96"], ["57", "96"], ["90", "96"], ["96", "101"], ["19", "101"], ["96", "101"], ["110", "106"], ["110", "106"], ["119", "117"], ["119", "117"], ["125", "123"], ["125", "123"], ["19", "70"], ["61", "70"], ["57", "70"], ["90", "70"], ["79", "78"], ["79", "78"], ["19", "78"], ["86", "78"], ["86", "78"], ["86", "78"], ["92", "110"], ["19", "110"], ["92", "115"], ["19", "115"], ["132", "128"], ["132", "128"], ["19", "79"], ["70", "79"], ["19", "84"], ["86", "84"], ["86", "84"], ["86", "84"], ["101", "119"], ["19", "119"], ["101", "119"], ["19", "125"], ["115", "125"], ["123", "132"], ["19", "132"], ["134", "132"], ["134", "132"], ["70", "81"], ["19", "81"], ["19", "86"], ["70", "86"], ["19", "134"], ["117", "134"], ["19", "135"], ["117", "135"], ["32", "94"], ["32", "49"], ["32", "96"], ["32", "57"], ["32", "37"], ["32", "92"], ["32", "45"], ["32", "101"], ["32", "61"], ["32", "36"], ["32", "100"], ["32", "53"], ["32", "41"], ["32", "39"], ["61", "68"], ["61", "73"], ["61", "81"], ["61", "84"], ["61", "85"], ["61", "76"], ["61", "65"], ["61", "90"], ["61", "79"], ["61", "61"], ["61", "70"], ["61", "78"], ["61", "86"], ["100", "107"], ["100", "115"], ["100", "136"], ["100", "128"], ["100", "131"], ["100", "132"], ["100", "119"], ["100", "123"], ["100", "106"], ["100", "129"], ["100", "134"], ["100", "135"], ["100", "110"], ["100", "117"], ["100", "125"], ["100", "109"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new FastReader())<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new FastReader())<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new FastReader())<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,long n = nextLong())<SUB>5</SUB>>", "29": "<(nextLong,nextLong())<SUB>5</SUB>>", "31": "<(CONTROL_STRUCTURE,if (n &lt; 10),if (n &lt; 10))<SUB>7</SUB>>", "33": "<(IDENTIFIER,n,n &lt; 10)<SUB>7</SUB>>", "35": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "37": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>8</SUB>>", "39": "<(FIELD_IDENTIFIER,out,out)<SUB>8</SUB>>", "41": "<(RETURN,return;,return;)<SUB>9</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "45": "<(&lt;operator&gt;.assignment,long sum = 0)<SUB>11</SUB>>", "47": "<(LITERAL,0,long sum = 0)<SUB>11</SUB>>", "49": "<(&lt;operator&gt;.assignment,long cur = 9)<SUB>12</SUB>>", "51": "<(LITERAL,9,long cur = 9)<SUB>12</SUB>>", "53": "<(&lt;operator&gt;.assignment,long prev = 0)<SUB>13</SUB>>", "55": "<(LITERAL,0,long prev = 0)<SUB>13</SUB>>", "57": "<(&lt;operator&gt;.assignment,int count = 1)<SUB>14</SUB>>", "59": "<(LITERAL,1,int count = 1)<SUB>14</SUB>>", "61": "<(&lt;operator&gt;.greaterThan,n &gt; cur)<SUB>16</SUB>>", "63": "<(IDENTIFIER,cur,n &gt; cur)<SUB>16</SUB>>", "65": "<(&lt;operator&gt;.assignmentMinus,n -= cur)<SUB>17</SUB>>", "67": "<(IDENTIFIER,cur,n -= cur)<SUB>17</SUB>>", "69": "<(IDENTIFIER,sum,sum += cur / count)<SUB>18</SUB>>", "71": "<(IDENTIFIER,cur,cur / count)<SUB>18</SUB>>", "73": "<(&lt;operator&gt;.assignment,prev = cur)<SUB>19</SUB>>", "75": "<(IDENTIFIER,cur,prev = cur)<SUB>19</SUB>>", "77": "<(IDENTIFIER,cur,cur = 9 * (count + 1) * (long) Math.pow(10, count))<SUB>20</SUB>>", "79": "<(&lt;operator&gt;.multiplication,9 * (count + 1))<SUB>20</SUB>>", "81": "<(&lt;operator&gt;.addition,count + 1)<SUB>20</SUB>>", "83": "<(LITERAL,1,count + 1)<SUB>20</SUB>>", "85": "<(TYPE_REF,long,long)<SUB>20</SUB>>", "87": "<(IDENTIFIER,Math,Math.pow(10, count))<SUB>20</SUB>>", "89": "<(IDENTIFIER,count,Math.pow(10, count))<SUB>20</SUB>>", "91": "<(IDENTIFIER,count,count++)<SUB>21</SUB>>", "93": "<(IDENTIFIER,sum,sum = sum + (n / count))<SUB>24</SUB>>", "95": "<(IDENTIFIER,sum,sum + (n / count))<SUB>24</SUB>>", "97": "<(IDENTIFIER,n,n / count)<SUB>24</SUB>>", "99": "<(CONTROL_STRUCTURE,if (n % count == 0),if (n % count == 0))<SUB>26</SUB>>", "101": "<(&lt;operator&gt;.modulo,n % count)<SUB>26</SUB>>", "103": "<(IDENTIFIER,count,n % count)<SUB>26</SUB>>", "105": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "107": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>27</SUB>>", "109": "<(FIELD_IDENTIFIER,out,out)<SUB>27</SUB>>", "111": "<(IDENTIFIER,sum,sum % 10)<SUB>27</SUB>>", "113": "<(CONTROL_STRUCTURE,else,else)<SUB>28</SUB>>", "115": "<(&lt;operator&gt;.postIncrement,sum++)<SUB>29</SUB>>", "117": "<(&lt;operator&gt;.assignment,n = n % count)<SUB>30</SUB>>", "119": "<(&lt;operator&gt;.modulo,n % count)<SUB>30</SUB>>", "121": "<(IDENTIFIER,count,n % count)<SUB>30</SUB>>", "123": "<(&lt;operator&gt;.assignment,String s = String.valueOf(sum))<SUB>31</SUB>>", "125": "<(valueOf,String.valueOf(sum))<SUB>31</SUB>>", "127": "<(IDENTIFIER,sum,String.valueOf(sum))<SUB>31</SUB>>", "129": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>32</SUB>>", "131": "<(FIELD_IDENTIFIER,out,out)<SUB>32</SUB>>", "133": "<(IDENTIFIER,s,s.charAt((int) n - 1))<SUB>32</SUB>>", "135": "<(&lt;operator&gt;.cast,(int) n)<SUB>32</SUB>>", "137": "<(IDENTIFIER,n,(int) n)<SUB>32</SUB>>", "139": "<(MODIFIER,PUBLIC)>", "141": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}