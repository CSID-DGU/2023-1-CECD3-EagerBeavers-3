{"edges": [["42", "43"], ["42", "250"], ["42", "251"], ["42", "252"], ["43", "4"], ["43", "44"], ["43", "47"], ["43", "6"], ["43", "58"], ["43", "61"], ["43", "17"], ["43", "72"], ["43", "19"], ["43", "76"], ["43", "8"], ["43", "81"], ["43", "84"], ["43", "85"], ["43", "10"], ["43", "143"], ["43", "146"], ["43", "147"], ["43", "148"], ["43", "153"], ["43", "213"], ["43", "217"], ["43", "218"], ["43", "222"], ["43", "246"], ["43", "248"], ["44", "45"], ["44", "46"], ["47", "3"], ["47", "48"], ["48", "49"], ["48", "52"], ["48", "57"], ["49", "50"], ["49", "51"], ["52", "53"], ["52", "54"], ["54", "55"], ["54", "56"], ["58", "59"], ["58", "60"], ["61", "5"], ["61", "62"], ["62", "63"], ["62", "66"], ["62", "71"], ["63", "64"], ["63", "65"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["78", "80"], ["81", "82"], ["81", "83"], ["84", "7"], ["85", "22"], ["85", "86"], ["85", "89"], ["85", "92"], ["85", "94"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "91"], ["92", "93"], ["94", "95"], ["94", "96"], ["94", "99"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["99", "104"], ["99", "107"], ["99", "109"], ["101", "102"], ["101", "103"], ["104", "105"], ["104", "106"], ["107", "108"], ["109", "110"], ["109", "115"], ["109", "130"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "120"], ["116", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "123"], ["123", "124"], ["123", "127"], ["123", "129"], ["124", "125"], ["124", "126"], ["127", "128"], ["130", "131"], ["130", "134"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "138"], ["134", "142"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "140"], ["138", "141"], ["143", "144"], ["143", "145"], ["146", "9"], ["148", "149"], ["148", "150"], ["150", "151"], ["151", "152"], ["153", "154"], ["153", "156"], ["154", "155"], ["156", "12"], ["156", "157"], ["156", "161"], ["156", "27"], ["156", "164"], ["156", "167"], ["156", "168"], ["156", "204"], ["157", "158"], ["157", "159"], ["159", "160"], ["161", "162"], ["161", "163"], ["161", "13"], ["164", "165"], ["164", "166"], ["167", "26"], ["168", "169"], ["168", "170"], ["168", "173"], ["168", "177"], ["170", "171"], ["170", "172"], ["173", "174"], ["173", "175"], ["175", "176"], ["177", "178"], ["177", "179"], ["177", "184"], ["177", "187"], ["179", "180"], ["179", "181"], ["181", "182"], ["181", "183"], ["184", "185"], ["184", "186"], ["187", "188"], ["187", "202"], ["188", "189"], ["188", "193"], ["189", "190"], ["189", "191"], ["191", "192"], ["193", "194"], ["193", "199"], ["194", "195"], ["194", "198"], ["195", "196"], ["195", "197"], ["199", "200"], ["199", "201"], ["202", "203"], ["204", "205"], ["204", "210"], ["205", "206"], ["205", "208"], ["206", "207"], ["208", "209"], ["210", "211"], ["210", "212"], ["213", "214"], ["213", "215"], ["215", "216"], ["218", "219"], ["218", "220"], ["220", "221"], ["222", "223"], ["222", "225"], ["223", "224"], ["225", "226"], ["225", "227"], ["225", "231"], ["227", "228"], ["227", "229"], ["229", "230"], ["231", "232"], ["231", "233"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "240"], ["235", "236"], ["235", "239"], ["236", "237"], ["236", "238"], ["241", "242"], ["241", "245"], ["242", "243"], ["242", "244"], ["246", "247"], ["248", "249"], ["44", "51"], ["47", "60"], ["58", "65"], ["61", "74"], ["72", "78"], ["76", "83"], ["81", "84"], ["84", "86"], ["143", "146"], ["146", "151"], ["148", "154"], ["213", "220"], ["218", "223"], ["246", "248"], ["248", "252"], ["46", "44"], ["60", "58"], ["74", "72"], ["78", "76"], ["83", "81"], ["86", "89"], ["89", "96"], ["89", "145"], ["92", "89"], ["145", "143"], ["150", "148"], ["154", "159"], ["154", "215"], ["215", "213"], ["220", "218"], ["223", "229"], ["223", "246"], ["49", "56"], ["52", "47"], ["63", "70"], ["66", "61"], ["96", "101"], ["151", "150"], ["157", "13"], ["161", "166"], ["164", "167"], ["167", "170"], ["227", "238"], ["231", "223"], ["51", "49"], ["54", "52"], ["65", "63"], ["68", "66"], ["101", "104"], ["104", "112"], ["104", "92"], ["107", "104"], ["159", "157"], ["13", "161"], ["166", "164"], ["170", "175"], ["173", "181"], ["173", "206"], ["205", "154"], ["205", "210"], ["210", "154"], ["229", "227"], ["233", "231"], ["56", "54"], ["70", "68"], ["110", "117"], ["130", "107"], ["175", "173"], ["179", "184"], ["184", "191"], ["206", "208"], ["208", "205"], ["234", "244"], ["241", "233"], ["112", "110"], ["116", "126"], ["116", "131"], ["120", "131"], ["131", "137"], ["181", "179"], ["188", "175"], ["188", "202"], ["202", "191"], ["235", "234"], ["242", "241"], ["117", "116"], ["135", "138"], ["138", "130"], ["189", "188"], ["189", "195"], ["193", "188"], ["236", "235"], ["244", "242"], ["124", "127"], ["127", "120"], ["137", "135"], ["191", "189"], ["194", "201"], ["199", "193"], ["238", "236"], ["126", "124"], ["195", "198"], ["198", "194"], ["201", "199"], ["42", "46"], ["25", "252"], ["44", "252"], ["52", "252"], ["52", "252"], ["52", "252"], ["47", "252"], ["58", "252"], ["66", "252"], ["66", "252"], ["66", "252"], ["61", "252"], ["72", "252"], ["72", "252"], ["76", "252"], ["76", "252"], ["76", "252"], ["81", "252"], ["84", "252"], ["86", "252"], ["89", "252"], ["89", "252"], ["89", "252"], ["143", "252"], ["146", "252"], ["151", "252"], ["150", "252"], ["154", "252"], ["213", "252"], ["213", "252"], ["220", "252"], ["218", "252"], ["223", "252"], ["223", "252"], ["246", "252"], ["248", "252"], ["248", "252"], ["227", "252"], ["235", "252"], ["234", "252"], ["233", "252"], ["241", "252"], ["233", "252"], ["231", "252"], ["231", "252"], ["161", "252"], ["164", "252"], ["167", "252"], ["170", "252"], ["173", "252"], ["175", "252"], ["173", "252"], ["206", "252"], ["205", "252"], ["210", "252"], ["210", "252"], ["179", "252"], ["179", "252"], ["184", "252"], ["184", "252"], ["193", "252"], ["188", "252"], ["188", "252"], ["202", "252"], ["96", "252"], ["96", "252"], ["101", "252"], ["104", "252"], ["104", "252"], ["92", "252"], ["110", "252"], ["110", "252"], ["116", "252"], ["116", "252"], ["127", "252"], ["120", "252"], ["131", "252"], ["130", "252"], ["138", "252"], ["138", "252"], ["130", "252"], ["107", "252"], ["161", "252"], ["42", "25"], ["42", "44"], ["42", "58"], ["74", "72"], ["78", "76"], ["78", "76"], ["42", "81"], ["42", "143"], ["150", "148"], ["220", "218"], ["44", "47"], ["42", "47"], ["49", "47"], ["52", "47"], ["58", "61"], ["42", "61"], ["63", "61"], ["66", "61"], ["81", "84"], ["42", "84"], ["42", "86"], ["143", "146"], ["42", "146"], ["61", "213"], ["42", "213"], ["215", "213"], ["213", "246"], ["231", "246"], ["42", "246"], ["78", "248"], ["42", "248"], ["42", "49"], ["42", "57"], ["42", "63"], ["42", "71"], ["47", "74"], ["42", "74"], ["74", "78"], ["42", "78"], ["72", "78"], ["86", "89"], ["92", "89"], ["42", "89"], ["78", "89"], ["138", "92"], ["42", "92"], ["89", "92"], ["42", "96"], ["151", "150"], ["148", "154"], ["159", "154"], ["42", "154"], ["159", "157"], ["42", "164"], ["146", "215"], ["208", "215"], ["210", "215"], ["42", "215"], ["215", "220"], ["42", "220"], ["218", "223"], ["229", "223"], ["42", "223"], ["229", "227"], ["49", "52"], ["42", "52"], ["63", "66"], ["42", "66"], ["89", "101"], ["42", "101"], ["84", "151"], ["131", "151"], ["42", "151"], ["42", "161"], ["157", "161"], ["164", "167"], ["42", "167"], ["42", "170"], ["206", "210"], ["42", "210"], ["213", "231"], ["42", "231"], ["227", "231"], ["101", "104"], ["107", "104"], ["42", "104"], ["138", "107"], ["42", "107"], ["76", "110"], ["154", "159"], ["42", "159"], ["170", "173"], ["189", "173"], ["195", "173"], ["42", "173"], ["175", "173"], ["181", "179"], ["181", "179"], ["206", "205"], ["208", "205"], ["223", "229"], ["42", "229"], ["227", "233"], ["42", "233"], ["96", "110"], ["131", "110"], ["42", "110"], ["131", "130"], ["131", "130"], ["135", "130"], ["138", "130"], ["42", "130"], ["161", "175"], ["191", "175"], ["195", "175"], ["42", "175"], ["167", "184"], ["42", "184"], ["179", "184"], ["167", "206"], ["184", "206"], ["42", "206"], ["146", "208"], ["210", "208"], ["42", "208"], ["227", "234"], ["42", "234"], ["227", "241"], ["42", "241"], ["117", "116"], ["117", "116"], ["117", "120"], ["42", "120"], ["117", "120"], ["124", "120"], ["127", "120"], ["117", "131"], ["120", "131"], ["42", "131"], ["117", "131"], ["120", "131"], ["42", "135"], ["42", "142"], ["175", "181"], ["42", "181"], ["173", "181"], ["189", "188"], ["189", "188"], ["193", "188"], ["193", "188"], ["189", "202"], ["195", "202"], ["42", "202"], ["227", "235"], ["42", "235"], ["84", "117"], ["131", "117"], ["42", "117"], ["110", "117"], ["42", "124"], ["42", "129"], ["135", "138"], ["42", "138"], ["104", "138"], ["89", "138"], ["181", "189"], ["202", "189"], ["42", "189"], ["191", "189"], ["184", "193"], ["124", "127"], ["42", "127"], ["181", "191"], ["195", "191"], ["42", "191"], ["191", "195"], ["42", "195"], ["189", "195"], ["89", "96"], ["89", "104"], ["89", "92"], ["89", "101"], ["89", "89"], ["154", "13"], ["154", "167"], ["154", "154"], ["154", "161"], ["154", "170"], ["154", "206"], ["154", "208"], ["154", "173"], ["154", "164"], ["154", "205"], ["154", "166"], ["154", "157"], ["154", "159"], ["154", "175"], ["223", "244"], ["223", "242"], ["223", "238"], ["223", "223"], ["223", "231"], ["223", "233"], ["223", "235"], ["223", "236"], ["223", "234"], ["223", "229"], ["223", "241"], ["223", "227"], ["104", "107"], ["104", "131"], ["104", "104"], ["104", "112"], ["104", "138"], ["104", "137"], ["104", "130"], ["104", "116"], ["104", "135"], ["104", "110"], ["104", "117"], ["173", "188"], ["173", "179"], ["173", "189"], ["173", "181"], ["173", "191"], ["173", "184"], ["173", "173"], ["173", "175"], ["205", "210"], ["116", "120"], ["116", "127"], ["116", "126"], ["116", "124"], ["188", "188"], ["188", "189"], ["188", "191"], ["188", "202"], ["189", "198"], ["189", "195"], ["189", "194"], ["189", "201"], ["189", "193"], ["189", "199"]], "features": {"42": "<(METHOD,main)<SUB>1</SUB>>", "43": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "44": "<(&lt;operator&gt;.assignment,ANY in = new BufferedScanner(new InputStreamReader(System.in)))<SUB>2</SUB>>", "46": "<(&lt;operator&gt;.alloc,new BufferedScanner(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,in,new BufferedScanner(new InputStreamReader(System.in)))<SUB>2</SUB>>", "49": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "51": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "53": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "55": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "57": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "58": "<(&lt;operator&gt;.assignment,ANY out = new PrintStream(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "60": "<(&lt;operator&gt;.alloc,new PrintStream(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "5": "<(IDENTIFIER,out,new PrintStream(new BufferedOutputStream(System.out)))<SUB>3</SUB>>", "63": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "65": "<(&lt;operator&gt;.alloc,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "67": "<(IDENTIFIER,$obj2,new BufferedOutputStream(System.out))>", "69": "<(IDENTIFIER,System,new BufferedOutputStream(System.out))<SUB>3</SUB>>", "71": "<(IDENTIFIER,$obj2,&lt;empty&gt;)>", "72": "<(&lt;operator&gt;.assignment,int n = nextInt())<SUB>5</SUB>>", "74": "<(nextInt,nextInt())<SUB>5</SUB>>", "19": "<(LOCAL,int[] arr: int[])<SUB>6</SUB>>", "77": "<(IDENTIFIER,arr,int[] arr = nextN(n))<SUB>6</SUB>>", "79": "<(IDENTIFIER,in,nextN(n))<SUB>6</SUB>>", "8": "<(LOCAL,HashMap&lt;Integer, ArrayList&lt;Point&gt;&gt; lp: ANY)<SUB>8</SUB>>", "82": "<(IDENTIFIER,lp,ANY lp = new HashMap&lt;&gt;())<SUB>8</SUB>>", "84": "<(&lt;init&gt;,new HashMap&lt;&gt;())<SUB>8</SUB>>", "85": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>9</SUB>>", "86": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>9</SUB>>", "88": "<(LITERAL,0,int i = 0)<SUB>9</SUB>>", "90": "<(IDENTIFIER,i,i &lt; n)<SUB>9</SUB>>", "92": "<(&lt;operator&gt;.postIncrement,i++)<SUB>9</SUB>>", "94": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>9</SUB>>", "96": "<(&lt;operator&gt;.assignment,int curr = 0)<SUB>10</SUB>>", "98": "<(LITERAL,0,int curr = 0)<SUB>10</SUB>>", "100": "<(LOCAL,int j: int)<SUB>11</SUB>>", "102": "<(IDENTIFIER,j,int j = i)<SUB>11</SUB>>", "104": "<(&lt;operator&gt;.greaterEqualsThan,j &gt;= 0)<SUB>11</SUB>>", "106": "<(LITERAL,0,j &gt;= 0)<SUB>11</SUB>>", "108": "<(IDENTIFIER,j,j--)<SUB>11</SUB>>", "110": "<(&lt;operator&gt;.assignmentPlus,curr += arr[j])<SUB>12</SUB>>", "112": "<(&lt;operator&gt;.indexAccess,arr[j])<SUB>12</SUB>>", "114": "<(IDENTIFIER,j,curr += arr[j])<SUB>12</SUB>>", "116": "<(&lt;operator&gt;.logicalNot,!lp.containsKey(curr))<SUB>13</SUB>>", "118": "<(IDENTIFIER,lp,containsKey(curr))<SUB>13</SUB>>", "120": "<(put,put(curr, new ArrayList&lt;&gt;()))<SUB>13</SUB>>", "122": "<(IDENTIFIER,curr,put(curr, new ArrayList&lt;&gt;()))<SUB>13</SUB>>", "124": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "126": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>13</SUB>>", "128": "<(IDENTIFIER,$obj5,new ArrayList&lt;&gt;())>", "130": "<(add,add(new Point(j, i)))<SUB>15</SUB>>", "132": "<(IDENTIFIER,lp,get(curr))<SUB>15</SUB>>", "134": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "136": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "138": "<(&lt;init&gt;,new Point(j, i))<SUB>15</SUB>>", "140": "<(IDENTIFIER,j,new Point(j, i))<SUB>15</SUB>>", "142": "<(IDENTIFIER,$obj6,&lt;empty&gt;)>", "143": "<(&lt;operator&gt;.assignment,ANY retPs = new ArrayList&lt;&gt;())<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>19</SUB>>", "9": "<(IDENTIFIER,retPs,new ArrayList&lt;&gt;())<SUB>19</SUB>>", "148": "<(&lt;operator&gt;.assignment,)<SUB>20</SUB>>", "150": "<(iterator,&lt;empty&gt;)<SUB>20</SUB>>", "152": "<(IDENTIFIER,lp,values())<SUB>20</SUB>>", "154": "<(hasNext,&lt;empty&gt;)<SUB>20</SUB>>", "156": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>20</SUB>>", "159": "<(next,&lt;empty&gt;)<SUB>20</SUB>>", "161": "<(sort,sort(ps, &lt;lambda&gt;))<SUB>21</SUB>>", "163": "<(IDENTIFIER,ps,sort(ps, &lt;lambda&gt;))<SUB>21</SUB>>", "27": "<(LOCAL,ArrayList&lt;Point&gt; currPs: ANY)<SUB>23</SUB>>", "165": "<(IDENTIFIER,currPs,ANY currPs = new ArrayList&lt;&gt;())<SUB>23</SUB>>", "167": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>23</SUB>>", "168": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; ps.size()); ),for (int i = 0; Some(i &lt; ps.size()); ))<SUB>24</SUB>>", "170": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>24</SUB>>", "172": "<(LITERAL,0,int i = 0)<SUB>24</SUB>>", "174": "<(IDENTIFIER,i,i &lt; ps.size())<SUB>24</SUB>>", "176": "<(IDENTIFIER,ps,size())<SUB>24</SUB>>", "178": "<(LOCAL,Point curr: ANY)<SUB>25</SUB>>", "180": "<(IDENTIFIER,curr,ANY curr = get(i))<SUB>25</SUB>>", "182": "<(IDENTIFIER,ps,get(i))<SUB>25</SUB>>", "184": "<(add,add(curr))<SUB>26</SUB>>", "186": "<(IDENTIFIER,curr,add(curr))<SUB>26</SUB>>", "188": "<(&lt;operator&gt;.logicalAnd,i &lt; ps.size() &amp;&amp; ps.get(i).x &lt;= curr.y)<SUB>28</SUB>>", "190": "<(IDENTIFIER,i,i &lt; ps.size())<SUB>28</SUB>>", "192": "<(IDENTIFIER,ps,size())<SUB>28</SUB>>", "194": "<(&lt;operator&gt;.fieldAccess,ps.get(i).x)<SUB>28</SUB>>", "196": "<(IDENTIFIER,ps,get(i))<SUB>28</SUB>>", "198": "<(FIELD_IDENTIFIER,x,x)<SUB>28</SUB>>", "200": "<(IDENTIFIER,curr,ps.get(i).x &lt;= curr.y)<SUB>28</SUB>>", "202": "<(&lt;operator&gt;.postIncrement,i++)<SUB>28</SUB>>", "204": "<(CONTROL_STRUCTURE,if (currPs.size() &gt; retPs.size()),if (currPs.size() &gt; retPs.size()))<SUB>30</SUB>>", "206": "<(size,size())<SUB>30</SUB>>", "208": "<(size,size())<SUB>30</SUB>>", "210": "<(&lt;operator&gt;.assignment,retPs = currPs)<SUB>30</SUB>>", "212": "<(IDENTIFIER,currPs,retPs = currPs)<SUB>30</SUB>>", "214": "<(IDENTIFIER,out,println(retPs.size()))<SUB>32</SUB>>", "216": "<(IDENTIFIER,retPs,size())<SUB>32</SUB>>", "218": "<(&lt;operator&gt;.assignment,)<SUB>33</SUB>>", "220": "<(iterator,&lt;empty&gt;)<SUB>33</SUB>>", "222": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>33</SUB>>", "224": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "226": "<(LOCAL,p: ANY)<SUB>33</SUB>>", "228": "<(IDENTIFIER,p,&lt;empty&gt;)>", "230": "<(IDENTIFIER,$iterLocal1,&lt;empty&gt;)>", "232": "<(IDENTIFIER,out,println((p.x + 1) + &quot; &quot; + (p.y + 1)))<SUB>33</SUB>>", "234": "<(&lt;operator&gt;.addition,(p.x + 1) + &quot; &quot;)<SUB>33</SUB>>", "236": "<(&lt;operator&gt;.fieldAccess,p.x)<SUB>33</SUB>>", "238": "<(FIELD_IDENTIFIER,x,x)<SUB>33</SUB>>", "240": "<(LITERAL,&quot; &quot;,(p.x + 1) + &quot; &quot;)<SUB>33</SUB>>", "242": "<(&lt;operator&gt;.fieldAccess,p.y)<SUB>33</SUB>>", "244": "<(FIELD_IDENTIFIER,y,y)<SUB>33</SUB>>", "246": "<(close,close())<SUB>36</SUB>>", "248": "<(close,close())<SUB>37</SUB>>", "250": "<(MODIFIER,PUBLIC)>", "252": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}