{"edges": [["19", "20"], ["19", "21"], ["19", "208"], ["19", "209"], ["19", "210"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "34"], ["21", "35"], ["21", "39"], ["21", "56"], ["21", "57"], ["21", "61"], ["21", "62"], ["21", "67"], ["21", "94"], ["21", "95"], ["21", "98"], ["21", "135"], ["21", "136"], ["21", "139"], ["21", "149"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["57", "58"], ["57", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["67", "72"], ["67", "75"], ["67", "77"], ["69", "70"], ["69", "71"], ["72", "73"], ["72", "74"], ["75", "76"], ["77", "78"], ["77", "86"], ["78", "79"], ["78", "84"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["84", "85"], ["86", "87"], ["86", "92"], ["87", "88"], ["87", "91"], ["88", "89"], ["88", "90"], ["92", "93"], ["95", "96"], ["95", "97"], ["98", "99"], ["98", "100"], ["98", "103"], ["98", "108"], ["98", "110"], ["100", "101"], ["100", "102"], ["103", "104"], ["103", "105"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["111", "112"], ["111", "113"], ["111", "118"], ["111", "121"], ["111", "123"], ["113", "114"], ["113", "115"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["121", "122"], ["123", "124"], ["124", "125"], ["124", "132"], ["125", "126"], ["125", "129"], ["126", "127"], ["126", "128"], ["129", "130"], ["129", "131"], ["132", "133"], ["133", "134"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "145"], ["140", "141"], ["140", "144"], ["141", "142"], ["141", "143"], ["145", "146"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["149", "154"], ["149", "157"], ["149", "159"], ["151", "152"], ["151", "153"], ["154", "155"], ["154", "156"], ["157", "158"], ["159", "160"], ["159", "161"], ["159", "176"], ["159", "177"], ["159", "182"], ["159", "193"], ["161", "162"], ["161", "163"], ["163", "164"], ["163", "175"], ["164", "165"], ["164", "170"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["177", "178"], ["177", "179"], ["179", "180"], ["179", "181"], ["182", "183"], ["182", "188"], ["183", "184"], ["183", "187"], ["184", "185"], ["184", "186"], ["188", "189"], ["189", "190"], ["189", "191"], ["191", "192"], ["193", "194"], ["193", "195"], ["193", "201"], ["195", "196"], ["196", "197"], ["196", "200"], ["197", "198"], ["197", "199"], ["201", "202"], ["202", "203"], ["203", "204"], ["203", "207"], ["204", "205"], ["204", "206"], ["22", "28"], ["25", "32"], ["30", "37"], ["35", "41"], ["57", "64"], ["62", "69"], ["95", "100"], ["136", "141"], ["24", "22"], ["26", "25"], ["32", "30"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "59"], ["47", "44"], ["59", "57"], ["64", "62"], ["69", "72"], ["72", "80"], ["72", "95"], ["75", "72"], ["100", "105"], ["103", "115"], ["103", "136"], ["108", "105"], ["140", "146"], ["140", "151"], ["151", "154"], ["154", "210"], ["154", "166"], ["157", "154"], ["28", "26"], ["50", "47"], ["78", "88"], ["86", "75"], ["105", "103"], ["141", "140"], ["146", "151"], ["161", "179"], ["177", "184"], ["51", "54"], ["54", "50"], ["79", "84"], ["84", "78"], ["87", "92"], ["92", "86"], ["113", "118"], ["118", "126"], ["118", "108"], ["121", "118"], ["163", "161"], ["179", "177"], ["183", "194"], ["183", "191"], ["194", "199"], ["194", "206"], ["80", "79"], ["88", "87"], ["115", "113"], ["164", "163"], ["184", "183"], ["189", "194"], ["196", "157"], ["125", "133"], ["125", "121"], ["165", "171"], ["170", "164"], ["191", "189"], ["197", "196"], ["203", "157"], ["126", "129"], ["129", "125"], ["133", "121"], ["166", "165"], ["171", "170"], ["199", "197"], ["204", "203"], ["206", "204"], ["19", "24"], ["20", "210"], ["22", "210"], ["25", "210"], ["25", "210"], ["30", "210"], ["35", "210"], ["35", "210"], ["35", "210"], ["44", "210"], ["59", "210"], ["57", "210"], ["57", "210"], ["62", "210"], ["62", "210"], ["62", "210"], ["95", "210"], ["105", "210"], ["103", "210"], ["103", "210"], ["136", "210"], ["136", "210"], ["141", "210"], ["140", "210"], ["140", "210"], ["146", "210"], ["146", "210"], ["151", "210"], ["154", "210"], ["154", "210"], ["154", "210"], ["157", "210"], ["108", "210"], ["75", "210"], ["47", "210"], ["179", "210"], ["19", "20"], ["19", "22"], ["32", "30"], ["37", "35"], ["59", "57"], ["64", "62"], ["64", "62"], ["19", "95"], ["19", "136"], ["22", "25"], ["19", "25"], ["19", "41"], ["19", "69"], ["19", "100"], ["19", "151"], ["25", "32"], ["19", "32"], ["30", "37"], ["19", "37"], ["41", "44"], ["47", "44"], ["19", "44"], ["37", "44"], ["44", "47"], ["19", "47"], ["54", "50"], ["32", "59"], ["54", "59"], ["19", "59"], ["57", "64"], ["19", "64"], ["69", "72"], ["75", "72"], ["19", "72"], ["64", "72"], ["72", "75"], ["19", "75"], ["84", "78"], ["92", "86"], ["100", "103"], ["108", "103"], ["19", "103"], ["105", "103"], ["105", "103"], ["19", "108"], ["103", "108"], ["141", "140"], ["141", "140"], ["19", "140"], ["19", "146"], ["151", "154"], ["157", "154"], ["19", "154"], ["72", "154"], ["154", "157"], ["19", "157"], ["164", "161"], ["164", "161"], ["19", "161"], ["179", "177"], ["179", "177"], ["44", "105"], ["118", "105"], ["19", "105"], ["103", "113"], ["19", "113"], ["95", "141"], ["133", "141"], ["19", "141"], ["19", "194"], ["32", "54"], ["19", "54"], ["59", "84"], ["92", "84"], ["19", "84"], ["84", "92"], ["19", "92"], ["113", "118"], ["121", "118"], ["19", "118"], ["105", "118"], ["118", "121"], ["19", "121"], ["164", "163"], ["164", "163"], ["19", "163"], ["19", "179"], ["161", "179"], ["184", "183"], ["184", "183"], ["19", "183"], ["191", "189"], ["103", "115"], ["19", "115"], ["86", "164"], ["78", "164"], ["177", "184"], ["19", "184"], ["203", "196"], ["19", "196"], ["35", "125"], ["50", "125"], ["136", "191"], ["146", "191"], ["189", "191"], ["19", "191"], ["196", "203"], ["19", "203"], ["95", "133"], ["19", "133"], ["44", "51"], ["44", "50"], ["44", "44"], ["44", "54"], ["44", "47"], ["72", "75"], ["72", "84"], ["72", "92"], ["72", "87"], ["72", "79"], ["72", "80"], ["72", "88"], ["72", "86"], ["72", "72"], ["72", "78"], ["103", "115"], ["103", "113"], ["103", "103"], ["103", "118"], ["103", "108"], ["103", "105"], ["140", "146"], ["154", "154"], ["154", "161"], ["154", "163"], ["154", "179"], ["154", "170"], ["154", "184"], ["154", "194"], ["154", "164"], ["154", "171"], ["154", "183"], ["154", "166"], ["154", "157"], ["154", "177"], ["154", "165"], ["118", "121"], ["118", "129"], ["118", "118"], ["118", "126"], ["118", "125"], ["183", "189"], ["183", "191"], ["194", "196"], ["194", "197"], ["194", "204"], ["194", "206"], ["194", "199"], ["194", "203"], ["125", "133"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,int n: int)<SUB>3</SUB>>", "31": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "33": "<(IDENTIFIER,sc,nextInt())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,int[] permutation = new int[n])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new int[n])>", "39": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>5</SUB>>", "43": "<(LITERAL,0,int i = 0)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt; n)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.postIncrement,i++)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,permutation[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,permutation[i] = nextInt())<SUB>6</SUB>>", "55": "<(IDENTIFIER,sc,nextInt())<SUB>6</SUB>>", "57": "<(&lt;operator&gt;.assignment,int m = nextInt())<SUB>8</SUB>>", "59": "<(nextInt,nextInt())<SUB>8</SUB>>", "61": "<(LOCAL,int[][] reverse: int[][])<SUB>9</SUB>>", "63": "<(IDENTIFIER,reverse,int[][] reverse = new int[m][2])<SUB>9</SUB>>", "65": "<(IDENTIFIER,m,new int[m][2])<SUB>9</SUB>>", "67": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>10</SUB>>", "69": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "71": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "73": "<(IDENTIFIER,i,i &lt; m)<SUB>10</SUB>>", "75": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "77": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>10</SUB>>", "79": "<(&lt;operator&gt;.indexAccess,reverse[i][0])<SUB>11</SUB>>", "81": "<(IDENTIFIER,reverse,reverse[i][0] = nextInt())<SUB>11</SUB>>", "83": "<(LITERAL,0,reverse[i][0] = nextInt())<SUB>11</SUB>>", "85": "<(IDENTIFIER,sc,nextInt())<SUB>11</SUB>>", "87": "<(&lt;operator&gt;.indexAccess,reverse[i][1])<SUB>12</SUB>>", "89": "<(IDENTIFIER,reverse,reverse[i][1] = nextInt())<SUB>12</SUB>>", "91": "<(LITERAL,1,reverse[i][1] = nextInt())<SUB>12</SUB>>", "93": "<(IDENTIFIER,sc,nextInt())<SUB>12</SUB>>", "95": "<(&lt;operator&gt;.assignment,int counter = 0)<SUB>14</SUB>>", "97": "<(LITERAL,0,int counter = 0)<SUB>14</SUB>>", "99": "<(LOCAL,int i: int)<SUB>15</SUB>>", "101": "<(IDENTIFIER,i,int i = 0)<SUB>15</SUB>>", "103": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>15</SUB>>", "105": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>15</SUB>>", "107": "<(LITERAL,1,n - 1)<SUB>15</SUB>>", "109": "<(IDENTIFIER,i,i++)<SUB>15</SUB>>", "111": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>16</SUB>>", "113": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>16</SUB>>", "115": "<(&lt;operator&gt;.addition,i + 1)<SUB>16</SUB>>", "117": "<(LITERAL,1,i + 1)<SUB>16</SUB>>", "119": "<(IDENTIFIER,j,j &lt; n)<SUB>16</SUB>>", "121": "<(&lt;operator&gt;.postIncrement,j++)<SUB>16</SUB>>", "123": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>16</SUB>>", "125": "<(&lt;operator&gt;.greaterThan,permutation[i] &gt; permutation[j])<SUB>17</SUB>>", "127": "<(IDENTIFIER,permutation,permutation[i] &gt; permutation[j])<SUB>17</SUB>>", "129": "<(&lt;operator&gt;.indexAccess,permutation[j])<SUB>17</SUB>>", "131": "<(IDENTIFIER,j,permutation[i] &gt; permutation[j])<SUB>17</SUB>>", "133": "<(&lt;operator&gt;.postIncrement,counter++)<SUB>18</SUB>>", "135": "<(LOCAL,boolean bayus: boolean)<SUB>22</SUB>>", "137": "<(IDENTIFIER,bayus,boolean bayus = true)<SUB>22</SUB>>", "139": "<(CONTROL_STRUCTURE,if (counter % 2 == 1),if (counter % 2 == 1))<SUB>23</SUB>>", "141": "<(&lt;operator&gt;.modulo,counter % 2)<SUB>23</SUB>>", "143": "<(LITERAL,2,counter % 2)<SUB>23</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>23</SUB>>", "147": "<(IDENTIFIER,bayus,bayus = false)<SUB>24</SUB>>", "149": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; m); i++),for (int i = 0; Some(i &lt; m); i++))<SUB>26</SUB>>", "151": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "153": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "155": "<(IDENTIFIER,i,i &lt; m)<SUB>26</SUB>>", "157": "<(&lt;operator&gt;.postIncrement,i++)<SUB>26</SUB>>", "159": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>26</SUB>>", "161": "<(&lt;operator&gt;.assignment,int bobib = reverse[i][1] - reverse[i][0] + 1)<SUB>27</SUB>>", "163": "<(&lt;operator&gt;.addition,reverse[i][1] - reverse[i][0] + 1)<SUB>27</SUB>>", "165": "<(&lt;operator&gt;.indexAccess,reverse[i][1])<SUB>27</SUB>>", "167": "<(IDENTIFIER,reverse,reverse[i][1] - reverse[i][0])<SUB>27</SUB>>", "169": "<(LITERAL,1,reverse[i][1] - reverse[i][0])<SUB>27</SUB>>", "171": "<(&lt;operator&gt;.indexAccess,reverse[i])<SUB>27</SUB>>", "173": "<(IDENTIFIER,i,reverse[i][1] - reverse[i][0])<SUB>27</SUB>>", "175": "<(LITERAL,1,reverse[i][1] - reverse[i][0] + 1)<SUB>27</SUB>>", "177": "<(&lt;operator&gt;.assignment,int bafry = nChoose2(bobib))<SUB>28</SUB>>", "179": "<(nChoose2,nChoose2(bobib))<SUB>28</SUB>>", "181": "<(IDENTIFIER,bobib,nChoose2(bobib))<SUB>28</SUB>>", "183": "<(&lt;operator&gt;.equals,bafry % 2 == 1)<SUB>29</SUB>>", "185": "<(IDENTIFIER,bafry,bafry % 2)<SUB>29</SUB>>", "187": "<(LITERAL,1,bafry % 2 == 1)<SUB>29</SUB>>", "189": "<(&lt;operator&gt;.assignment,bayus = !bayus)<SUB>30</SUB>>", "191": "<(&lt;operator&gt;.logicalNot,!bayus)<SUB>30</SUB>>", "193": "<(CONTROL_STRUCTURE,if (bayus),if (bayus))<SUB>32</SUB>>", "195": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "197": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>33</SUB>>", "199": "<(FIELD_IDENTIFIER,out,out)<SUB>33</SUB>>", "201": "<(CONTROL_STRUCTURE,else,else)<SUB>35</SUB>>", "203": "<(println,System.out.println(&quot;odd&quot;))<SUB>36</SUB>>", "205": "<(IDENTIFIER,System,System.out.println(&quot;odd&quot;))<SUB>36</SUB>>", "207": "<(LITERAL,&quot;odd&quot;,System.out.println(&quot;odd&quot;))<SUB>36</SUB>>", "209": "<(MODIFIER,STATIC)>"}}