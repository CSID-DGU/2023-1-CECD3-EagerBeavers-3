{"edges": [["21", "22"], ["21", "23"], ["21", "190"], ["21", "191"], ["21", "192"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "6"], ["23", "28"], ["23", "31"], ["23", "35"], ["23", "36"], ["23", "40"], ["23", "41"], ["23", "45"], ["23", "61"], ["23", "62"], ["23", "65"], ["23", "99"], ["23", "102"], ["23", "103"], ["23", "109"], ["23", "135"], ["23", "136"], ["23", "140"], ["23", "188"], ["24", "25"], ["24", "26"], ["27", "3"], ["28", "29"], ["28", "30"], ["31", "5"], ["31", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["38", "39"], ["41", "42"], ["41", "43"], ["43", "44"], ["45", "46"], ["45", "47"], ["45", "50"], ["45", "53"], ["45", "55"], ["47", "48"], ["47", "49"], ["50", "51"], ["50", "52"], ["53", "54"], ["55", "56"], ["55", "59"], ["56", "57"], ["56", "58"], ["59", "60"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "67"], ["65", "70"], ["65", "73"], ["65", "75"], ["67", "68"], ["67", "69"], ["70", "71"], ["70", "72"], ["73", "74"], ["75", "76"], ["76", "77"], ["76", "78"], ["76", "83"], ["76", "86"], ["76", "88"], ["78", "79"], ["78", "80"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["86", "87"], ["88", "89"], ["89", "90"], ["89", "97"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["94", "95"], ["94", "96"], ["97", "98"], ["99", "100"], ["99", "101"], ["103", "104"], ["103", "105"], ["105", "106"], ["106", "107"], ["106", "108"], ["109", "110"], ["109", "111"], ["109", "114"], ["109", "119"], ["109", "121"], ["111", "112"], ["111", "113"], ["114", "115"], ["114", "116"], ["116", "117"], ["116", "118"], ["119", "120"], ["121", "122"], ["122", "123"], ["122", "126"], ["123", "124"], ["123", "125"], ["126", "127"], ["126", "134"], ["127", "128"], ["127", "133"], ["128", "129"], ["128", "130"], ["130", "131"], ["130", "132"], ["136", "137"], ["136", "138"], ["138", "139"], ["140", "141"], ["140", "142"], ["140", "145"], ["140", "148"], ["140", "150"], ["142", "143"], ["142", "144"], ["145", "146"], ["145", "147"], ["148", "149"], ["150", "151"], ["150", "152"], ["150", "158"], ["150", "159"], ["150", "165"], ["150", "174"], ["150", "177"], ["152", "153"], ["152", "154"], ["154", "155"], ["154", "157"], ["155", "156"], ["159", "160"], ["159", "161"], ["161", "162"], ["161", "164"], ["162", "163"], ["165", "166"], ["165", "167"], ["167", "168"], ["167", "169"], ["169", "170"], ["169", "173"], ["170", "171"], ["170", "172"], ["174", "175"], ["174", "176"], ["177", "178"], ["177", "181"], ["177", "184"], ["178", "179"], ["178", "180"], ["181", "182"], ["181", "183"], ["184", "185"], ["185", "186"], ["185", "187"], ["188", "189"], ["24", "27"], ["27", "30"], ["28", "34"], ["31", "38"], ["36", "43"], ["41", "47"], ["62", "67"], ["99", "106"], ["103", "111"], ["136", "142"], ["188", "192"], ["26", "24"], ["30", "28"], ["32", "31"], ["38", "36"], ["43", "41"], ["47", "50"], ["50", "56"], ["50", "62"], ["53", "50"], ["55", "53"], ["67", "70"], ["70", "80"], ["70", "99"], ["73", "70"], ["105", "103"], ["111", "118"], ["114", "123"], ["114", "138"], ["119", "118"], ["138", "136"], ["142", "145"], ["145", "155"], ["145", "188"], ["148", "145"], ["34", "32"], ["56", "59"], ["59", "55"], ["106", "105"], ["116", "114"], ["122", "119"], ["152", "162"], ["159", "170"], ["165", "174"], ["174", "178"], ["78", "83"], ["83", "91"], ["83", "73"], ["86", "83"], ["118", "116"], ["123", "130"], ["126", "122"], ["154", "152"], ["161", "159"], ["167", "165"], ["178", "181"], ["178", "185"], ["181", "148"], ["80", "78"], ["127", "126"], ["155", "154"], ["162", "161"], ["169", "167"], ["185", "148"], ["90", "97"], ["90", "86"], ["97", "86"], ["128", "127"], ["170", "169"], ["91", "94"], ["94", "90"], ["130", "128"], ["21", "26"], ["22", "192"], ["24", "192"], ["27", "192"], ["28", "192"], ["31", "192"], ["31", "192"], ["36", "192"], ["41", "192"], ["41", "192"], ["41", "192"], ["62", "192"], ["70", "192"], ["99", "192"], ["103", "192"], ["106", "192"], ["105", "192"], ["103", "192"], ["103", "192"], ["111", "192"], ["114", "192"], ["114", "192"], ["138", "192"], ["136", "192"], ["136", "192"], ["142", "192"], ["145", "192"], ["145", "192"], ["145", "192"], ["188", "192"], ["188", "192"], ["152", "192"], ["162", "192"], ["161", "192"], ["159", "192"], ["159", "192"], ["170", "192"], ["170", "192"], ["169", "192"], ["165", "192"], ["165", "192"], ["178", "192"], ["178", "192"], ["185", "192"], ["181", "192"], ["148", "192"], ["122", "192"], ["127", "192"], ["126", "192"], ["122", "192"], ["122", "192"], ["119", "192"], ["78", "192"], ["78", "192"], ["83", "192"], ["83", "192"], ["73", "192"], ["90", "192"], ["90", "192"], ["90", "192"], ["97", "192"], ["86", "192"], ["55", "192"], ["55", "192"], ["53", "192"], ["21", "22"], ["21", "24"], ["21", "28"], ["38", "36"], ["43", "41"], ["21", "62"], ["21", "99"], ["105", "103"], ["138", "136"], ["24", "27"], ["21", "27"], ["28", "31"], ["21", "31"], ["21", "47"], ["59", "55"], ["21", "67"], ["62", "99"], ["97", "99"], ["21", "111"], ["21", "142"], ["31", "188"], ["185", "188"], ["181", "188"], ["21", "188"], ["27", "38"], ["21", "38"], ["36", "43"], ["21", "43"], ["47", "50"], ["53", "50"], ["21", "50"], ["43", "50"], ["50", "53"], ["21", "53"], ["67", "70"], ["73", "70"], ["21", "70"], ["50", "70"], ["83", "70"], ["21", "73"], ["70", "73"], ["70", "105"], ["21", "105"], ["111", "114"], ["119", "114"], ["21", "114"], ["103", "114"], ["21", "119"], ["130", "119"], ["126", "122"], ["126", "122"], ["38", "138"], ["59", "138"], ["21", "138"], ["142", "145"], ["148", "145"], ["21", "145"], ["136", "145"], ["145", "148"], ["21", "148"], ["154", "152"], ["154", "152"], ["161", "159"], ["161", "159"], ["103", "165"], ["21", "174"], ["38", "59"], ["21", "59"], ["70", "78"], ["21", "78"], ["70", "106"], ["21", "106"], ["99", "165"], ["178", "165"], ["21", "165"], ["165", "174"], ["78", "83"], ["86", "83"], ["21", "83"], ["70", "83"], ["83", "86"], ["21", "86"], ["103", "126"], ["130", "126"], ["21", "126"], ["155", "154"], ["21", "154"], ["162", "161"], ["21", "161"], ["174", "178"], ["21", "178"], ["31", "181"], ["185", "181"], ["21", "181"], ["70", "80"], ["21", "80"], ["103", "127"], ["130", "127"], ["21", "127"], ["138", "155"], ["162", "155"], ["21", "155"], ["155", "162"], ["21", "162"], ["170", "169"], ["170", "169"], ["21", "169"], ["31", "185"], ["181", "185"], ["21", "185"], ["41", "90"], ["55", "90"], ["62", "97"], ["21", "97"], ["159", "170"], ["21", "170"], ["152", "170"], ["114", "130"], ["21", "130"], ["50", "56"], ["50", "50"], ["50", "59"], ["50", "53"], ["50", "55"], ["70", "73"], ["70", "80"], ["70", "83"], ["70", "70"], ["70", "78"], ["114", "116"], ["114", "122"], ["114", "128"], ["114", "114"], ["114", "119"], ["114", "123"], ["114", "126"], ["114", "130"], ["114", "118"], ["114", "127"], ["145", "167"], ["145", "154"], ["145", "145"], ["145", "169"], ["145", "161"], ["145", "178"], ["145", "162"], ["145", "170"], ["145", "159"], ["145", "148"], ["145", "152"], ["145", "165"], ["145", "174"], ["145", "155"], ["83", "94"], ["83", "91"], ["83", "90"], ["83", "83"], ["83", "86"], ["178", "185"], ["178", "181"], ["90", "97"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new FastScanner())<SUB>3</SUB>>", "26": "<(&lt;operator&gt;.alloc,new FastScanner())<SUB>3</SUB>>", "3": "<(IDENTIFIER,scan,new FastScanner())<SUB>3</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>4</SUB>>", "30": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>4</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>4</SUB>>", "33": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>4</SUB>>", "35": "<(LOCAL,int n: int)<SUB>5</SUB>>", "37": "<(IDENTIFIER,n,int n = nextInt())<SUB>5</SUB>>", "39": "<(IDENTIFIER,scan,nextInt())<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int[] arr = new int[n])<SUB>6</SUB>>", "43": "<(&lt;operator&gt;.alloc,new int[n])>", "45": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "47": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "49": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "51": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "53": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,arr[i] = nextInt())<SUB>8</SUB>>", "57": "<(IDENTIFIER,arr,arr[i] = nextInt())<SUB>8</SUB>>", "59": "<(nextInt,nextInt())<SUB>8</SUB>>", "61": "<(LOCAL,int inv: int)<SUB>9</SUB>>", "63": "<(IDENTIFIER,inv,int inv = 0)<SUB>9</SUB>>", "65": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "67": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "69": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "71": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "73": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "75": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>11</SUB>>", "77": "<(LOCAL,int j: int)<SUB>12</SUB>>", "79": "<(IDENTIFIER,j,int j = i + 1)<SUB>12</SUB>>", "81": "<(IDENTIFIER,i,i + 1)<SUB>12</SUB>>", "83": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>12</SUB>>", "85": "<(IDENTIFIER,n,j &lt; n)<SUB>12</SUB>>", "87": "<(IDENTIFIER,j,j++)<SUB>12</SUB>>", "89": "<(CONTROL_STRUCTURE,if (arr[i] &gt; arr[j]),if (arr[i] &gt; arr[j]))<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,arr[i])<SUB>14</SUB>>", "93": "<(IDENTIFIER,i,arr[i] &gt; arr[j])<SUB>14</SUB>>", "95": "<(IDENTIFIER,arr,arr[i] &gt; arr[j])<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.postIncrement,inv++)<SUB>15</SUB>>", "99": "<(&lt;operators&gt;.assignmentAnd,inv &amp;= 1)<SUB>18</SUB>>", "101": "<(LITERAL,1,inv &amp;= 1)<SUB>18</SUB>>", "103": "<(&lt;operator&gt;.assignment,int[] cumul = new int[n + 1])<SUB>20</SUB>>", "105": "<(&lt;operator&gt;.alloc,new int[n + 1])>", "107": "<(IDENTIFIER,n,n + 1)<SUB>20</SUB>>", "109": "<(CONTROL_STRUCTURE,for (int i = 2; Some(i &lt; cumul.length); i++),for (int i = 2; Some(i &lt; cumul.length); i++))<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.assignment,int i = 2)<SUB>21</SUB>>", "113": "<(LITERAL,2,int i = 2)<SUB>21</SUB>>", "115": "<(IDENTIFIER,i,i &lt; cumul.length)<SUB>21</SUB>>", "117": "<(IDENTIFIER,cumul,i &lt; cumul.length)<SUB>21</SUB>>", "119": "<(&lt;operator&gt;.postIncrement,i++)<SUB>21</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>22</SUB>>", "123": "<(&lt;operator&gt;.indexAccess,cumul[i])<SUB>23</SUB>>", "125": "<(IDENTIFIER,i,cumul[i] = cumul[i - 1] + i - 1)<SUB>23</SUB>>", "127": "<(&lt;operator&gt;.addition,cumul[i - 1] + i)<SUB>23</SUB>>", "129": "<(IDENTIFIER,cumul,cumul[i - 1] + i)<SUB>23</SUB>>", "131": "<(IDENTIFIER,i,i - 1)<SUB>23</SUB>>", "133": "<(IDENTIFIER,i,cumul[i - 1] + i)<SUB>23</SUB>>", "135": "<(LOCAL,int q: int)<SUB>25</SUB>>", "137": "<(IDENTIFIER,q,int q = nextInt())<SUB>25</SUB>>", "139": "<(IDENTIFIER,scan,nextInt())<SUB>25</SUB>>", "141": "<(LOCAL,int i: int)<SUB>26</SUB>>", "143": "<(IDENTIFIER,i,int i = 0)<SUB>26</SUB>>", "145": "<(&lt;operator&gt;.lessThan,i &lt; q)<SUB>26</SUB>>", "147": "<(IDENTIFIER,q,i &lt; q)<SUB>26</SUB>>", "149": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "151": "<(LOCAL,int a: int)<SUB>28</SUB>>", "153": "<(IDENTIFIER,a,int a = scan.nextInt() - 1)<SUB>28</SUB>>", "155": "<(nextInt,nextInt())<SUB>28</SUB>>", "157": "<(LITERAL,1,scan.nextInt() - 1)<SUB>28</SUB>>", "159": "<(&lt;operator&gt;.assignment,int b = scan.nextInt() - 1)<SUB>29</SUB>>", "161": "<(&lt;operator&gt;.subtraction,scan.nextInt() - 1)<SUB>29</SUB>>", "163": "<(IDENTIFIER,scan,nextInt())<SUB>29</SUB>>", "165": "<(&lt;operator&gt;.assignmentPlus,inv += cumul[b - a + 1])<SUB>30</SUB>>", "167": "<(&lt;operator&gt;.indexAccess,cumul[b - a + 1])<SUB>30</SUB>>", "169": "<(&lt;operator&gt;.addition,b - a + 1)<SUB>30</SUB>>", "171": "<(IDENTIFIER,b,b - a)<SUB>30</SUB>>", "173": "<(LITERAL,1,b - a + 1)<SUB>30</SUB>>", "175": "<(IDENTIFIER,inv,inv &amp;= 1)<SUB>31</SUB>>", "177": "<(CONTROL_STRUCTURE,if (inv == 0),if (inv == 0))<SUB>32</SUB>>", "179": "<(IDENTIFIER,inv,inv == 0)<SUB>32</SUB>>", "181": "<(println,println(&quot;even&quot;))<SUB>33</SUB>>", "183": "<(LITERAL,&quot;even&quot;,println(&quot;even&quot;))<SUB>33</SUB>>", "185": "<(println,println(&quot;odd&quot;))<SUB>35</SUB>>", "187": "<(LITERAL,&quot;odd&quot;,println(&quot;odd&quot;))<SUB>35</SUB>>", "189": "<(IDENTIFIER,pw,flush())<SUB>37</SUB>>", "191": "<(MODIFIER,STATIC)>"}}