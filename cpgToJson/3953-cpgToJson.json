{"edges": [["19", "21"], ["19", "445"], ["19", "446"], ["19", "447"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "39"], ["21", "43"], ["21", "49"], ["21", "55"], ["21", "60"], ["21", "68"], ["21", "106"], ["21", "108"], ["21", "109"], ["21", "114"], ["21", "115"], ["21", "120"], ["21", "202"], ["21", "253"], ["21", "256"], ["21", "257"], ["21", "264"], ["21", "269"], ["21", "422"], ["21", "423"], ["21", "438"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["36", "37"], ["36", "38"], ["39", "40"], ["39", "41"], ["41", "42"], ["43", "44"], ["43", "45"], ["45", "46"], ["45", "47"], ["47", "48"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["60", "61"], ["60", "62"], ["62", "63"], ["63", "64"], ["63", "65"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["68", "73"], ["68", "76"], ["68", "78"], ["70", "71"], ["70", "72"], ["73", "74"], ["73", "75"], ["76", "77"], ["78", "79"], ["78", "82"], ["78", "86"], ["79", "80"], ["79", "81"], ["82", "83"], ["82", "84"], ["84", "85"], ["86", "87"], ["86", "88"], ["86", "91"], ["86", "94"], ["86", "96"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["94", "95"], ["96", "97"], ["96", "102"], ["97", "98"], ["97", "101"], ["98", "99"], ["98", "100"], ["102", "103"], ["102", "105"], ["103", "104"], ["106", "107"], ["109", "110"], ["109", "111"], ["111", "112"], ["111", "113"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["120", "122"], ["120", "125"], ["120", "128"], ["120", "130"], ["122", "123"], ["122", "124"], ["125", "126"], ["125", "127"], ["128", "129"], ["130", "131"], ["130", "132"], ["130", "135"], ["130", "193"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "137"], ["135", "140"], ["135", "143"], ["135", "145"], ["137", "138"], ["137", "139"], ["140", "141"], ["140", "142"], ["143", "144"], ["145", "146"], ["145", "155"], ["145", "189"], ["146", "147"], ["146", "154"], ["147", "148"], ["147", "153"], ["148", "149"], ["148", "152"], ["149", "150"], ["149", "151"], ["155", "156"], ["155", "157"], ["155", "162"], ["155", "165"], ["155", "167"], ["157", "158"], ["157", "159"], ["159", "160"], ["159", "161"], ["162", "163"], ["162", "164"], ["165", "166"], ["167", "168"], ["167", "177"], ["168", "169"], ["168", "176"], ["169", "170"], ["169", "175"], ["170", "171"], ["170", "174"], ["171", "172"], ["171", "173"], ["177", "178"], ["177", "184"], ["178", "179"], ["179", "180"], ["179", "183"], ["180", "181"], ["180", "182"], ["184", "185"], ["184", "188"], ["185", "186"], ["185", "187"], ["189", "190"], ["189", "192"], ["190", "191"], ["193", "194"], ["193", "195"], ["195", "196"], ["195", "199"], ["196", "197"], ["196", "198"], ["199", "200"], ["199", "201"], ["202", "203"], ["202", "204"], ["202", "207"], ["202", "210"], ["202", "212"], ["204", "205"], ["204", "206"], ["207", "208"], ["207", "209"], ["210", "211"], ["212", "213"], ["213", "214"], ["213", "215"], ["213", "218"], ["213", "221"], ["213", "223"], ["215", "216"], ["215", "217"], ["218", "219"], ["218", "220"], ["221", "222"], ["223", "224"], ["224", "225"], ["224", "232"], ["225", "226"], ["225", "231"], ["226", "227"], ["226", "230"], ["227", "228"], ["227", "229"], ["232", "233"], ["233", "234"], ["233", "241"], ["234", "235"], ["234", "236"], ["236", "237"], ["236", "238"], ["238", "239"], ["238", "240"], ["241", "242"], ["241", "243"], ["241", "250"], ["243", "244"], ["243", "245"], ["245", "246"], ["245", "247"], ["247", "248"], ["247", "249"], ["250", "251"], ["250", "252"], ["253", "254"], ["253", "255"], ["257", "258"], ["257", "259"], ["259", "260"], ["259", "261"], ["261", "262"], ["261", "263"], ["264", "265"], ["264", "266"], ["266", "267"], ["266", "268"], ["269", "270"], ["269", "271"], ["269", "274"], ["269", "277"], ["269", "279"], ["271", "272"], ["271", "273"], ["274", "275"], ["274", "276"], ["277", "278"], ["279", "280"], ["279", "281"], ["279", "284"], ["279", "345"], ["279", "349"], ["279", "350"], ["279", "357"], ["279", "410"], ["281", "282"], ["281", "283"], ["284", "285"], ["284", "286"], ["284", "289"], ["284", "292"], ["284", "294"], ["286", "287"], ["286", "288"], ["289", "290"], ["289", "291"], ["292", "293"], ["294", "295"], ["294", "304"], ["294", "341"], ["295", "296"], ["295", "303"], ["296", "297"], ["296", "302"], ["297", "298"], ["297", "301"], ["298", "299"], ["298", "300"], ["304", "305"], ["304", "306"], ["304", "311"], ["304", "314"], ["304", "316"], ["306", "307"], ["306", "308"], ["308", "309"], ["308", "310"], ["311", "312"], ["311", "313"], ["314", "315"], ["316", "317"], ["317", "318"], ["317", "336"], ["318", "319"], ["318", "326"], ["319", "320"], ["319", "325"], ["320", "321"], ["320", "324"], ["321", "322"], ["321", "323"], ["326", "327"], ["327", "328"], ["327", "333"], ["328", "329"], ["328", "330"], ["330", "331"], ["330", "332"], ["333", "334"], ["333", "335"], ["336", "337"], ["336", "340"], ["337", "338"], ["337", "339"], ["341", "342"], ["341", "344"], ["342", "343"], ["345", "346"], ["345", "348"], ["346", "347"], ["350", "351"], ["350", "352"], ["352", "353"], ["352", "356"], ["353", "354"], ["353", "355"], ["357", "358"], ["357", "359"], ["357", "362"], ["357", "365"], ["357", "367"], ["359", "360"], ["359", "361"], ["362", "363"], ["362", "364"], ["365", "366"], ["367", "368"], ["367", "377"], ["368", "369"], ["368", "376"], ["369", "370"], ["369", "375"], ["370", "371"], ["370", "374"], ["371", "372"], ["371", "373"], ["377", "378"], ["377", "379"], ["377", "382"], ["377", "385"], ["377", "387"], ["379", "380"], ["379", "381"], ["382", "383"], ["382", "384"], ["385", "386"], ["387", "388"], ["388", "389"], ["388", "405"], ["389", "390"], ["389", "398"], ["390", "391"], ["391", "392"], ["391", "395"], ["392", "393"], ["392", "394"], ["395", "396"], ["395", "397"], ["398", "399"], ["398", "404"], ["399", "400"], ["399", "403"], ["400", "401"], ["400", "402"], ["405", "406"], ["405", "407"], ["407", "408"], ["407", "409"], ["410", "411"], ["410", "412"], ["412", "413"], ["412", "414"], ["412", "415"], ["415", "416"], ["415", "419"], ["416", "417"], ["416", "418"], ["419", "420"], ["419", "421"], ["423", "424"], ["423", "425"], ["425", "426"], ["425", "435"], ["426", "427"], ["426", "432"], ["427", "428"], ["427", "431"], ["428", "429"], ["428", "430"], ["432", "433"], ["432", "434"], ["435", "436"], ["435", "437"], ["438", "439"], ["438", "442"], ["438", "443"], ["439", "440"], ["439", "441"], ["443", "444"], ["22", "29"], ["25", "38"], ["36", "41"], ["39", "47"], ["43", "53"], ["49", "57"], ["55", "65"], ["60", "70"], ["106", "111"], ["109", "117"], ["115", "122"], ["253", "261"], ["257", "266"], ["264", "271"], ["423", "441"], ["438", "447"], ["24", "22"], ["38", "36"], ["41", "39"], ["45", "43"], ["51", "49"], ["57", "55"], ["62", "60"], ["70", "73"], ["73", "81"], ["73", "106"], ["76", "73"], ["111", "109"], ["117", "115"], ["122", "125"], ["125", "132"], ["125", "204"], ["128", "125"], ["204", "207"], ["207", "215"], ["207", "253"], ["210", "207"], ["259", "257"], ["266", "264"], ["271", "274"], ["274", "281"], ["274", "428"], ["277", "274"], ["425", "423"], ["439", "443"], ["443", "438"], ["27", "34"], ["30", "25"], ["47", "45"], ["53", "51"], ["63", "62"], ["79", "84"], ["82", "88"], ["132", "137"], ["261", "259"], ["281", "286"], ["350", "359"], ["410", "277"], ["426", "435"], ["435", "425"], ["441", "439"], ["29", "27"], ["32", "30"], ["65", "63"], ["81", "79"], ["84", "82"], ["88", "91"], ["91", "98"], ["91", "76"], ["94", "91"], ["96", "94"], ["137", "140"], ["140", "194"], ["140", "149"], ["143", "140"], ["194", "196"], ["194", "128"], ["195", "128"], ["215", "218"], ["218", "227"], ["218", "210"], ["221", "218"], ["286", "289"], ["289", "298"], ["289", "346"], ["292", "289"], ["346", "277"], ["346", "353"], ["352", "350"], ["359", "362"], ["362", "371"], ["362", "416"], ["365", "362"], ["412", "410"], ["427", "432"], ["432", "426"], ["34", "32"], ["97", "103"], ["102", "96"], ["196", "199"], ["199", "195"], ["353", "352"], ["415", "412"], ["428", "427"], ["98", "97"], ["103", "102"], ["147", "143"], ["147", "159"], ["157", "162"], ["162", "171"], ["162", "190"], ["165", "162"], ["190", "194"], ["190", "143"], ["225", "238"], ["225", "221"], ["296", "292"], ["296", "308"], ["306", "311"], ["311", "321"], ["311", "342"], ["314", "311"], ["342", "346"], ["342", "292"], ["369", "365"], ["369", "379"], ["379", "382"], ["382", "392"], ["382", "365"], ["385", "382"], ["416", "419"], ["419", "415"], ["148", "147"], ["159", "157"], ["226", "225"], ["233", "221"], ["297", "296"], ["308", "306"], ["370", "369"], ["149", "148"], ["169", "165"], ["169", "180"], ["178", "185"], ["178", "165"], ["227", "226"], ["234", "247"], ["241", "233"], ["298", "297"], ["318", "337"], ["318", "314"], ["371", "370"], ["389", "407"], ["389", "385"], ["405", "385"], ["170", "169"], ["179", "178"], ["185", "190"], ["236", "234"], ["243", "250"], ["250", "241"], ["319", "318"], ["319", "330"], ["326", "318"], ["337", "342"], ["390", "389"], ["390", "400"], ["398", "389"], ["407", "405"], ["171", "170"], ["180", "179"], ["238", "236"], ["245", "243"], ["320", "319"], ["327", "326"], ["391", "390"], ["399", "398"], ["247", "245"], ["321", "320"], ["328", "333"], ["333", "327"], ["392", "395"], ["395", "391"], ["400", "399"], ["330", "328"], ["19", "24"], ["20", "447"], ["22", "447"], ["27", "447"], ["30", "447"], ["30", "447"], ["30", "447"], ["25", "447"], ["36", "447"], ["39", "447"], ["39", "447"], ["43", "447"], ["51", "447"], ["53", "447"], ["51", "447"], ["49", "447"], ["49", "447"], ["55", "447"], ["55", "447"], ["55", "447"], ["60", "447"], ["62", "447"], ["60", "447"], ["60", "447"], ["70", "447"], ["73", "447"], ["73", "447"], ["106", "447"], ["106", "447"], ["109", "447"], ["117", "447"], ["115", "447"], ["115", "447"], ["204", "447"], ["253", "447"], ["259", "447"], ["259", "447"], ["257", "447"], ["257", "447"], ["266", "447"], ["264", "447"], ["264", "447"], ["271", "447"], ["274", "447"], ["274", "447"], ["274", "447"], ["427", "447"], ["427", "447"], ["426", "447"], ["426", "447"], ["425", "447"], ["435", "447"], ["425", "447"], ["423", "447"], ["423", "447"], ["438", "447"], ["443", "447"], ["438", "447"], ["438", "447"], ["281", "447"], ["286", "447"], ["289", "447"], ["289", "447"], ["289", "447"], ["297", "447"], ["296", "447"], ["296", "447"], ["308", "447"], ["306", "447"], ["306", "447"], ["311", "447"], ["311", "447"], ["311", "447"], ["321", "447"], ["320", "447"], ["319", "447"], ["318", "447"], ["330", "447"], ["333", "447"], ["333", "447"], ["326", "447"], ["318", "447"], ["318", "447"], ["314", "447"], ["337", "447"], ["346", "447"], ["346", "447"], ["350", "447"], ["353", "447"], ["352", "447"], ["350", "447"], ["350", "447"], ["359", "447"], ["362", "447"], ["362", "447"], ["362", "447"], ["412", "447"], ["415", "447"], ["419", "447"], ["415", "447"], ["412", "447"], ["410", "447"], ["410", "447"], ["370", "447"], ["369", "447"], ["369", "447"], ["379", "447"], ["382", "447"], ["382", "447"], ["382", "447"], ["390", "447"], ["389", "447"], ["400", "447"], ["399", "447"], ["398", "447"], ["389", "447"], ["389", "447"], ["405", "447"], ["405", "447"], ["385", "447"], ["365", "447"], ["277", "447"], ["292", "447"], ["215", "447"], ["218", "447"], ["218", "447"], ["218", "447"], ["210", "447"], ["226", "447"], ["225", "447"], ["225", "447"], ["233", "447"], ["241", "447"], ["245", "447"], ["241", "447"], ["233", "447"], ["233", "447"], ["221", "447"], ["132", "447"], ["132", "447"], ["137", "447"], ["140", "447"], ["140", "447"], ["140", "447"], ["148", "447"], ["147", "447"], ["147", "447"], ["159", "447"], ["157", "447"], ["157", "447"], ["162", "447"], ["162", "447"], ["162", "447"], ["171", "447"], ["170", "447"], ["169", "447"], ["169", "447"], ["178", "447"], ["178", "447"], ["185", "447"], ["190", "447"], ["190", "447"], ["195", "447"], ["199", "447"], ["195", "447"], ["195", "447"], ["128", "447"], ["165", "447"], ["143", "447"], ["79", "447"], ["82", "447"], ["82", "447"], ["82", "447"], ["88", "447"], ["91", "447"], ["91", "447"], ["76", "447"], ["96", "447"], ["103", "447"], ["102", "447"], ["96", "447"], ["96", "447"], ["94", "447"], ["19", "20"], ["19", "22"], ["19", "36"], ["45", "43"], ["45", "43"], ["51", "49"], ["51", "49"], ["57", "55"], ["62", "60"], ["111", "109"], ["111", "109"], ["117", "115"], ["117", "115"], ["19", "253"], ["259", "257"], ["259", "257"], ["266", "264"], ["266", "264"], ["425", "423"], ["425", "423"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["36", "39"], ["19", "39"], ["41", "39"], ["19", "70"], ["41", "106"], ["84", "106"], ["19", "106"], ["19", "122"], ["19", "204"], ["19", "271"], ["19", "438"], ["443", "438"], ["19", "27"], ["19", "35"], ["25", "41"], ["19", "41"], ["19", "45"], ["47", "45"], ["45", "51"], ["19", "51"], ["53", "51"], ["43", "57"], ["19", "57"], ["63", "62"], ["63", "62"], ["70", "73"], ["76", "73"], ["19", "73"], ["65", "73"], ["91", "73"], ["73", "76"], ["19", "76"], ["19", "79"], ["73", "111"], ["19", "111"], ["19", "117"], ["109", "117"], ["122", "125"], ["128", "125"], ["19", "125"], ["115", "125"], ["125", "128"], ["149", "128"], ["171", "128"], ["199", "128"], ["19", "128"], ["19", "132"], ["204", "207"], ["210", "207"], ["19", "207"], ["125", "207"], ["207", "210"], ["227", "210"], ["245", "210"], ["19", "210"], ["261", "259"], ["19", "259"], ["261", "259"], ["19", "266"], ["257", "266"], ["271", "274"], ["277", "274"], ["19", "274"], ["264", "274"], ["274", "277"], ["298", "277"], ["321", "277"], ["419", "277"], ["19", "277"], ["19", "281"], ["352", "350"], ["352", "350"], ["412", "410"], ["412", "410"], ["412", "410"], ["426", "425"], ["426", "425"], ["435", "425"], ["435", "425"], ["423", "443"], ["19", "443"], ["27", "30"], ["19", "30"], ["39", "47"], ["19", "47"], ["47", "53"], ["19", "53"], ["19", "63"], ["65", "63"], ["65", "63"], ["79", "82"], ["19", "82"], ["84", "82"], ["19", "88"], ["102", "96"], ["102", "96"], ["19", "137"], ["19", "194"], ["199", "195"], ["199", "195"], ["19", "215"], ["111", "261"], ["19", "261"], ["19", "286"], ["19", "359"], ["427", "426"], ["427", "426"], ["432", "426"], ["432", "426"], ["19", "435"], ["432", "435"], ["57", "65"], ["19", "65"], ["41", "84"], ["19", "84"], ["88", "91"], ["94", "91"], ["19", "91"], ["73", "91"], ["91", "94"], ["19", "94"], ["137", "140"], ["143", "140"], ["19", "140"], ["117", "140"], ["162", "140"], ["149", "143"], ["19", "143"], ["215", "218"], ["221", "218"], ["19", "218"], ["117", "218"], ["140", "218"], ["162", "218"], ["227", "221"], ["247", "221"], ["19", "221"], ["286", "289"], ["292", "289"], ["19", "289"], ["266", "289"], ["311", "289"], ["362", "289"], ["298", "292"], ["19", "292"], ["281", "346"], ["342", "346"], ["19", "346"], ["353", "352"], ["353", "352"], ["19", "352"], ["359", "362"], ["365", "362"], ["19", "362"], ["289", "362"], ["311", "362"], ["371", "365"], ["19", "365"], ["241", "412"], ["19", "412"], ["253", "412"], ["410", "412"], ["60", "412"], ["419", "412"], ["419", "412"], ["428", "427"], ["428", "427"], ["19", "427"], ["253", "432"], ["410", "432"], ["19", "432"], ["103", "102"], ["19", "102"], ["149", "157"], ["19", "157"], ["51", "199"], ["19", "199"], ["125", "199"], ["149", "199"], ["171", "199"], ["298", "306"], ["19", "306"], ["19", "353"], ["117", "353"], ["382", "353"], ["218", "353"], ["140", "353"], ["162", "353"], ["19", "379"], ["60", "415"], ["419", "415"], ["419", "415"], ["19", "428"], ["49", "428"], ["82", "103"], ["19", "103"], ["148", "147"], ["148", "147"], ["19", "147"], ["157", "162"], ["165", "162"], ["19", "162"], ["140", "162"], ["171", "165"], ["19", "165"], ["132", "190"], ["185", "190"], ["19", "190"], ["226", "225"], ["226", "225"], ["19", "225"], ["241", "233"], ["241", "233"], ["241", "233"], ["297", "296"], ["297", "296"], ["19", "296"], ["306", "311"], ["314", "311"], ["19", "311"], ["289", "311"], ["321", "314"], ["19", "314"], ["281", "342"], ["337", "342"], ["19", "342"], ["370", "369"], ["370", "369"], ["19", "369"], ["379", "382"], ["385", "382"], ["19", "382"], ["353", "382"], ["382", "385"], ["400", "385"], ["407", "385"], ["19", "385"], ["51", "419"], ["199", "419"], ["19", "419"], ["274", "419"], ["298", "419"], ["321", "419"], ["371", "419"], ["149", "148"], ["149", "148"], ["19", "148"], ["149", "159"], ["19", "159"], ["227", "226"], ["227", "226"], ["19", "226"], ["298", "297"], ["298", "297"], ["19", "297"], ["298", "308"], ["19", "308"], ["371", "370"], ["371", "370"], ["19", "370"], ["407", "405"], ["407", "405"], ["125", "149"], ["171", "149"], ["19", "149"], ["140", "149"], ["170", "169"], ["170", "169"], ["19", "169"], ["96", "178"], ["19", "185"], ["207", "227"], ["245", "227"], ["19", "227"], ["218", "227"], ["19", "241"], ["60", "241"], ["233", "241"], ["195", "241"], ["274", "298"], ["321", "298"], ["19", "298"], ["289", "298"], ["319", "318"], ["319", "318"], ["326", "318"], ["19", "337"], ["274", "371"], ["298", "371"], ["321", "371"], ["19", "371"], ["362", "371"], ["390", "389"], ["398", "389"], ["398", "389"], ["350", "405"], ["400", "405"], ["19", "405"], ["171", "170"], ["171", "170"], ["19", "170"], ["227", "236"], ["19", "236"], ["238", "236"], ["238", "236"], ["320", "319"], ["320", "319"], ["19", "319"], ["399", "398"], ["399", "398"], ["19", "398"], ["19", "407"], ["382", "407"], ["400", "407"], ["149", "171"], ["19", "171"], ["162", "171"], ["19", "238"], ["227", "238"], ["236", "245"], ["19", "245"], ["247", "245"], ["247", "245"], ["321", "320"], ["321", "320"], ["19", "320"], ["400", "399"], ["400", "399"], ["19", "399"], ["19", "247"], ["238", "247"], ["298", "321"], ["19", "321"], ["311", "321"], ["321", "333"], ["19", "333"], ["117", "333"], ["353", "333"], ["382", "333"], ["218", "333"], ["140", "333"], ["162", "333"], ["371", "395"], ["19", "395"], ["382", "395"], ["350", "400"], ["405", "400"], ["19", "400"], ["382", "400"], ["19", "330"], ["298", "330"], ["117", "330"], ["353", "330"], ["382", "330"], ["218", "330"], ["140", "330"], ["162", "330"], ["73", "84"], ["73", "76"], ["73", "88"], ["73", "73"], ["73", "81"], ["73", "91"], ["73", "79"], ["73", "82"], ["125", "128"], ["125", "194"], ["125", "140"], ["125", "132"], ["125", "137"], ["125", "125"], ["207", "215"], ["207", "207"], ["207", "210"], ["207", "218"], ["274", "281"], ["274", "346"], ["274", "274"], ["274", "289"], ["274", "286"], ["274", "277"], ["91", "102"], ["91", "94"], ["91", "96"], ["91", "98"], ["91", "103"], ["91", "97"], ["91", "91"], ["140", "148"], ["140", "147"], ["140", "149"], ["194", "196"], ["194", "195"], ["194", "199"], ["218", "226"], ["218", "227"], ["218", "225"], ["218", "221"], ["218", "218"], ["289", "298"], ["289", "296"], ["289", "297"], ["346", "412"], ["346", "362"], ["346", "416"], ["346", "415"], ["346", "410"], ["346", "353"], ["346", "419"], ["346", "352"], ["346", "359"], ["346", "350"], ["362", "370"], ["362", "362"], ["362", "365"], ["362", "371"], ["362", "369"], ["147", "162"], ["147", "190"], ["147", "159"], ["147", "140"], ["147", "157"], ["147", "143"], ["162", "170"], ["162", "169"], ["162", "171"], ["190", "140"], ["190", "143"], ["225", "243"], ["225", "247"], ["225", "238"], ["225", "236"], ["225", "241"], ["225", "245"], ["225", "233"], ["225", "234"], ["225", "250"], ["296", "292"], ["296", "308"], ["296", "306"], ["296", "311"], ["296", "342"], ["296", "289"], ["311", "321"], ["311", "319"], ["311", "320"], ["311", "318"], ["342", "292"], ["342", "289"], ["369", "382"], ["369", "379"], ["382", "392"], ["382", "389"], ["382", "382"], ["382", "390"], ["382", "385"], ["382", "395"], ["382", "391"], ["169", "162"], ["169", "180"], ["169", "179"], ["169", "178"], ["169", "165"], ["178", "162"], ["178", "185"], ["178", "165"], ["318", "311"], ["318", "337"], ["318", "314"], ["389", "405"], ["389", "407"], ["319", "326"], ["319", "328"], ["319", "333"], ["319", "327"], ["319", "330"], ["390", "400"], ["390", "398"], ["390", "399"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY reader = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,reader,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(IDENTIFIER,st,st = new StringTokenizer(reader.readLine()))<SUB>4</SUB>>", "39": "<(&lt;init&gt;,new StringTokenizer(reader.readLine()))<SUB>4</SUB>>", "41": "<(readLine,readLine())<SUB>4</SUB>>", "43": "<(&lt;operator&gt;.assignment,n = parseInt(st.nextToken()))<SUB>5</SUB>>", "45": "<(parseInt,parseInt(st.nextToken()))<SUB>5</SUB>>", "47": "<(nextToken,nextToken())<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,k = parseInt(st.nextToken()))<SUB>6</SUB>>", "51": "<(parseInt,parseInt(st.nextToken()))<SUB>6</SUB>>", "53": "<(nextToken,nextToken())<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.assignment,graph = new boolean[n][n])<SUB>8</SUB>>", "57": "<(&lt;operator&gt;.alloc,new boolean[n][n])>", "59": "<(IDENTIFIER,n,new boolean[n][n])<SUB>8</SUB>>", "61": "<(IDENTIFIER,dp,dp = new int[1 &lt;&lt; (n / 2)])<SUB>9</SUB>>", "63": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; (n / 2))<SUB>9</SUB>>", "65": "<(&lt;operator&gt;.division,n / 2)<SUB>9</SUB>>", "67": "<(LITERAL,2,n / 2)<SUB>9</SUB>>", "69": "<(LOCAL,int i: int)<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "75": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "77": "<(IDENTIFIER,i,++i)<SUB>11</SUB>>", "79": "<(&lt;operator&gt;.assignment,st = new StringTokenizer(reader.readLine()))<SUB>12</SUB>>", "81": "<(&lt;operator&gt;.alloc,new StringTokenizer(reader.readLine()))<SUB>12</SUB>>", "83": "<(IDENTIFIER,st,new StringTokenizer(reader.readLine()))<SUB>12</SUB>>", "85": "<(IDENTIFIER,reader,readLine())<SUB>12</SUB>>", "87": "<(LOCAL,int j: int)<SUB>14</SUB>>", "89": "<(IDENTIFIER,j,int j = 0)<SUB>14</SUB>>", "91": "<(&lt;operator&gt;.lessThan,j &lt; n)<SUB>14</SUB>>", "93": "<(IDENTIFIER,n,j &lt; n)<SUB>14</SUB>>", "95": "<(IDENTIFIER,j,++j)<SUB>14</SUB>>", "97": "<(&lt;operator&gt;.indexAccess,graph[i][j])<SUB>15</SUB>>", "99": "<(IDENTIFIER,graph,graph[i][j] = equals(&quot;1&quot;))<SUB>15</SUB>>", "101": "<(IDENTIFIER,j,graph[i][j] = equals(&quot;1&quot;))<SUB>15</SUB>>", "103": "<(nextToken,nextToken())<SUB>15</SUB>>", "105": "<(LITERAL,&quot;1&quot;,equals(&quot;1&quot;))<SUB>15</SUB>>", "107": "<(IDENTIFIER,reader,close())<SUB>18</SUB>>", "109": "<(&lt;operator&gt;.assignment,int size1 = n / 2)<SUB>21</SUB>>", "111": "<(&lt;operator&gt;.division,n / 2)<SUB>21</SUB>>", "113": "<(LITERAL,2,n / 2)<SUB>21</SUB>>", "115": "<(&lt;operator&gt;.assignment,int border = 1 &lt;&lt; size1)<SUB>22</SUB>>", "117": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; size1)<SUB>22</SUB>>", "119": "<(IDENTIFIER,size1,1 &lt;&lt; size1)<SUB>22</SUB>>", "121": "<(LOCAL,int mask: int)<SUB>23</SUB>>", "123": "<(IDENTIFIER,mask,int mask = 1)<SUB>23</SUB>>", "125": "<(&lt;operator&gt;.lessThan,mask &lt; border)<SUB>23</SUB>>", "127": "<(IDENTIFIER,border,mask &lt; border)<SUB>23</SUB>>", "129": "<(IDENTIFIER,mask,++mask)<SUB>23</SUB>>", "131": "<(LOCAL,boolean isComplete: boolean)<SUB>26</SUB>>", "133": "<(IDENTIFIER,isComplete,boolean isComplete = true)<SUB>26</SUB>>", "135": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; size1); ++i),for (int i = 0; Some(i &lt; size1); ++i))<SUB>27</SUB>>", "137": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>27</SUB>>", "139": "<(LITERAL,0,int i = 0)<SUB>27</SUB>>", "141": "<(IDENTIFIER,i,i &lt; size1)<SUB>27</SUB>>", "143": "<(&lt;operator&gt;.preIncrement,++i)<SUB>27</SUB>>", "145": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>27</SUB>>", "147": "<(&lt;operator&gt;.equals,((mask &gt;&gt; i) &amp; 1) == 0)<SUB>28</SUB>>", "149": "<(&lt;operator&gt;.logicalShiftRight,mask &gt;&gt; i)<SUB>28</SUB>>", "151": "<(IDENTIFIER,i,mask &gt;&gt; i)<SUB>28</SUB>>", "153": "<(LITERAL,0,((mask &gt;&gt; i) &amp; 1) == 0)<SUB>28</SUB>>", "155": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; size1); ++j),for (int j = i + 1; Some(j &lt; size1); ++j))<SUB>31</SUB>>", "157": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>31</SUB>>", "159": "<(&lt;operator&gt;.addition,i + 1)<SUB>31</SUB>>", "161": "<(LITERAL,1,i + 1)<SUB>31</SUB>>", "163": "<(IDENTIFIER,j,j &lt; size1)<SUB>31</SUB>>", "165": "<(&lt;operator&gt;.preIncrement,++j)<SUB>31</SUB>>", "167": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "169": "<(&lt;operator&gt;.equals,((mask &gt;&gt; j) &amp; 1) == 0)<SUB>32</SUB>>", "171": "<(&lt;operator&gt;.logicalShiftRight,mask &gt;&gt; j)<SUB>32</SUB>>", "173": "<(IDENTIFIER,j,mask &gt;&gt; j)<SUB>32</SUB>>", "175": "<(LITERAL,0,((mask &gt;&gt; j) &amp; 1) == 0)<SUB>32</SUB>>", "177": "<(CONTROL_STRUCTURE,if (!graph[i][j]),if (!graph[i][j]))<SUB>35</SUB>>", "179": "<(&lt;operator&gt;.indexAccess,graph[i][j])<SUB>35</SUB>>", "181": "<(IDENTIFIER,graph,!graph[i][j])<SUB>35</SUB>>", "183": "<(IDENTIFIER,j,!graph[i][j])<SUB>35</SUB>>", "185": "<(&lt;operator&gt;.assignment,isComplete = false)<SUB>36</SUB>>", "187": "<(LITERAL,false,isComplete = false)<SUB>36</SUB>>", "189": "<(CONTROL_STRUCTURE,if (!isComplete),if (!isComplete))<SUB>41</SUB>>", "191": "<(IDENTIFIER,isComplete,!isComplete)<SUB>41</SUB>>", "193": "<(CONTROL_STRUCTURE,if (isComplete),if (isComplete))<SUB>45</SUB>>", "195": "<(&lt;operator&gt;.assignment,dp[mask] = Integer.bitCount(mask))<SUB>46</SUB>>", "197": "<(IDENTIFIER,dp,dp[mask] = Integer.bitCount(mask))<SUB>46</SUB>>", "199": "<(bitCount,Integer.bitCount(mask))<SUB>46</SUB>>", "201": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>46</SUB>>", "203": "<(LOCAL,int mask: int)<SUB>49</SUB>>", "205": "<(IDENTIFIER,mask,int mask = 1)<SUB>49</SUB>>", "207": "<(&lt;operator&gt;.lessThan,mask &lt; border)<SUB>49</SUB>>", "209": "<(IDENTIFIER,border,mask &lt; border)<SUB>49</SUB>>", "211": "<(IDENTIFIER,mask,++mask)<SUB>49</SUB>>", "213": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; size1); ++i),for (int i = 0; Some(i &lt; size1); ++i))<SUB>50</SUB>>", "215": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>50</SUB>>", "217": "<(LITERAL,0,int i = 0)<SUB>50</SUB>>", "219": "<(IDENTIFIER,i,i &lt; size1)<SUB>50</SUB>>", "221": "<(&lt;operator&gt;.preIncrement,++i)<SUB>50</SUB>>", "223": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>50</SUB>>", "225": "<(&lt;operator&gt;.equals,((mask &gt;&gt; i) &amp; 1) == 0)<SUB>51</SUB>>", "227": "<(&lt;operator&gt;.logicalShiftRight,mask &gt;&gt; i)<SUB>51</SUB>>", "229": "<(IDENTIFIER,i,mask &gt;&gt; i)<SUB>51</SUB>>", "231": "<(LITERAL,0,((mask &gt;&gt; i) &amp; 1) == 0)<SUB>51</SUB>>", "233": "<(&lt;operator&gt;.assignment,dp[mask | (1 &lt;&lt; i)] = max(dp[mask | (1 &lt;&lt; i)], dp[mask]))<SUB>52</SUB>>", "235": "<(IDENTIFIER,dp,dp[mask | (1 &lt;&lt; i)] = max(dp[mask | (1 &lt;&lt; i)], dp[mask]))<SUB>52</SUB>>", "237": "<(IDENTIFIER,mask,mask | (1 &lt;&lt; i))<SUB>52</SUB>>", "239": "<(LITERAL,1,1 &lt;&lt; i)<SUB>52</SUB>>", "241": "<(max,max(dp[mask | (1 &lt;&lt; i)], dp[mask]))<SUB>52</SUB>>", "243": "<(&lt;operator&gt;.indexAccess,dp[mask | (1 &lt;&lt; i)])<SUB>52</SUB>>", "245": "<(&lt;operator&gt;.or,mask | (1 &lt;&lt; i))<SUB>52</SUB>>", "247": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; i)<SUB>52</SUB>>", "249": "<(IDENTIFIER,i,1 &lt;&lt; i)<SUB>52</SUB>>", "251": "<(IDENTIFIER,dp,max(dp[mask | (1 &lt;&lt; i)], dp[mask]))<SUB>52</SUB>>", "253": "<(&lt;operator&gt;.assignment,maxCliqueSize = 1)<SUB>59</SUB>>", "255": "<(LITERAL,1,maxCliqueSize = 1)<SUB>59</SUB>>", "257": "<(&lt;operator&gt;.assignment,int size2 = n - n / 2)<SUB>60</SUB>>", "259": "<(&lt;operator&gt;.subtraction,n - n / 2)<SUB>60</SUB>>", "261": "<(&lt;operator&gt;.division,n / 2)<SUB>60</SUB>>", "263": "<(LITERAL,2,n / 2)<SUB>60</SUB>>", "265": "<(IDENTIFIER,border,border = 1 &lt;&lt; size2)<SUB>61</SUB>>", "267": "<(LITERAL,1,1 &lt;&lt; size2)<SUB>61</SUB>>", "269": "<(CONTROL_STRUCTURE,for (int mask = 0; Some(mask &lt; border); ++mask),for (int mask = 0; Some(mask &lt; border); ++mask))<SUB>63</SUB>>", "271": "<(&lt;operator&gt;.assignment,int mask = 0)<SUB>63</SUB>>", "273": "<(LITERAL,0,int mask = 0)<SUB>63</SUB>>", "275": "<(IDENTIFIER,mask,mask &lt; border)<SUB>63</SUB>>", "277": "<(&lt;operator&gt;.preIncrement,++mask)<SUB>63</SUB>>", "279": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>63</SUB>>", "281": "<(&lt;operator&gt;.assignment,boolean isComplete = true)<SUB>65</SUB>>", "283": "<(LITERAL,true,boolean isComplete = true)<SUB>65</SUB>>", "285": "<(LOCAL,int i: int)<SUB>66</SUB>>", "287": "<(IDENTIFIER,i,int i = 0)<SUB>66</SUB>>", "289": "<(&lt;operator&gt;.lessThan,i &lt; size2)<SUB>66</SUB>>", "291": "<(IDENTIFIER,size2,i &lt; size2)<SUB>66</SUB>>", "293": "<(IDENTIFIER,i,++i)<SUB>66</SUB>>", "295": "<(CONTROL_STRUCTURE,if (((mask &gt;&gt; i) &amp; 1) == 0),if (((mask &gt;&gt; i) &amp; 1) == 0))<SUB>67</SUB>>", "297": "<(&lt;operator&gt;.and,(mask &gt;&gt; i) &amp; 1)<SUB>67</SUB>>", "299": "<(IDENTIFIER,mask,mask &gt;&gt; i)<SUB>67</SUB>>", "301": "<(LITERAL,1,(mask &gt;&gt; i) &amp; 1)<SUB>67</SUB>>", "303": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>68</SUB>>", "305": "<(LOCAL,int j: int)<SUB>70</SUB>>", "307": "<(IDENTIFIER,j,int j = i + 1)<SUB>70</SUB>>", "309": "<(IDENTIFIER,i,i + 1)<SUB>70</SUB>>", "311": "<(&lt;operator&gt;.lessThan,j &lt; size2)<SUB>70</SUB>>", "313": "<(IDENTIFIER,size2,j &lt; size2)<SUB>70</SUB>>", "315": "<(IDENTIFIER,j,++j)<SUB>70</SUB>>", "317": "<(CONTROL_STRUCTURE,if (((mask &gt;&gt; j) &amp; 1) != 0 &amp;&amp; !graph[i + size1][j + size1]),if (((mask &gt;&gt; j) &amp; 1) != 0 &amp;&amp; !graph[i + size1][j + size1]))<SUB>71</SUB>>", "319": "<(&lt;operator&gt;.notEquals,((mask &gt;&gt; j) &amp; 1) != 0)<SUB>71</SUB>>", "321": "<(&lt;operator&gt;.logicalShiftRight,mask &gt;&gt; j)<SUB>71</SUB>>", "323": "<(IDENTIFIER,j,mask &gt;&gt; j)<SUB>71</SUB>>", "325": "<(LITERAL,0,((mask &gt;&gt; j) &amp; 1) != 0)<SUB>71</SUB>>", "327": "<(&lt;operator&gt;.indexAccess,graph[i + size1][j + size1])<SUB>71</SUB>>", "329": "<(IDENTIFIER,graph,!graph[i + size1][j + size1])<SUB>71</SUB>>", "331": "<(IDENTIFIER,i,i + size1)<SUB>71</SUB>>", "333": "<(&lt;operator&gt;.addition,j + size1)<SUB>71</SUB>>", "335": "<(IDENTIFIER,size1,j + size1)<SUB>71</SUB>>", "337": "<(&lt;operator&gt;.assignment,isComplete = false)<SUB>72</SUB>>", "339": "<(LITERAL,false,isComplete = false)<SUB>72</SUB>>", "341": "<(CONTROL_STRUCTURE,if (!isComplete),if (!isComplete))<SUB>77</SUB>>", "343": "<(IDENTIFIER,isComplete,!isComplete)<SUB>77</SUB>>", "345": "<(CONTROL_STRUCTURE,if (!isComplete),if (!isComplete))<SUB>81</SUB>>", "347": "<(IDENTIFIER,isComplete,!isComplete)<SUB>81</SUB>>", "349": "<(LOCAL,int mask1: int)<SUB>84</SUB>>", "351": "<(IDENTIFIER,mask1,int mask1 = (1 &lt;&lt; size1) - 1)<SUB>84</SUB>>", "353": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; size1)<SUB>84</SUB>>", "355": "<(IDENTIFIER,size1,1 &lt;&lt; size1)<SUB>84</SUB>>", "357": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; size2); ++i),for (int i = 0; Some(i &lt; size2); ++i))<SUB>86</SUB>>", "359": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>86</SUB>>", "361": "<(LITERAL,0,int i = 0)<SUB>86</SUB>>", "363": "<(IDENTIFIER,i,i &lt; size2)<SUB>86</SUB>>", "365": "<(&lt;operator&gt;.preIncrement,++i)<SUB>86</SUB>>", "367": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>86</SUB>>", "369": "<(&lt;operator&gt;.equals,((mask &gt;&gt; i) &amp; 1) == 0)<SUB>87</SUB>>", "371": "<(&lt;operator&gt;.logicalShiftRight,mask &gt;&gt; i)<SUB>87</SUB>>", "373": "<(IDENTIFIER,i,mask &gt;&gt; i)<SUB>87</SUB>>", "375": "<(LITERAL,0,((mask &gt;&gt; i) &amp; 1) == 0)<SUB>87</SUB>>", "377": "<(CONTROL_STRUCTURE,for (int j = 0; Some(j &lt; size1); ++j),for (int j = 0; Some(j &lt; size1); ++j))<SUB>90</SUB>>", "379": "<(&lt;operator&gt;.assignment,int j = 0)<SUB>90</SUB>>", "381": "<(LITERAL,0,int j = 0)<SUB>90</SUB>>", "383": "<(IDENTIFIER,j,j &lt; size1)<SUB>90</SUB>>", "385": "<(&lt;operator&gt;.preIncrement,++j)<SUB>90</SUB>>", "387": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>90</SUB>>", "389": "<(&lt;operator&gt;.logicalAnd,!graph[j][i + size1] &amp;&amp; ((mask1 &gt;&gt; j) &amp; 1) != 0)<SUB>91</SUB>>", "391": "<(&lt;operator&gt;.indexAccess,graph[j][i + size1])<SUB>91</SUB>>", "393": "<(IDENTIFIER,graph,!graph[j][i + size1])<SUB>91</SUB>>", "395": "<(&lt;operator&gt;.addition,i + size1)<SUB>91</SUB>>", "397": "<(IDENTIFIER,size1,i + size1)<SUB>91</SUB>>", "399": "<(&lt;operator&gt;.and,(mask1 &gt;&gt; j) &amp; 1)<SUB>91</SUB>>", "401": "<(IDENTIFIER,mask1,mask1 &gt;&gt; j)<SUB>91</SUB>>", "403": "<(LITERAL,1,(mask1 &gt;&gt; j) &amp; 1)<SUB>91</SUB>>", "405": "<(&lt;operators&gt;.assignmentXor,mask1 ^= 1 &lt;&lt; j)<SUB>92</SUB>>", "407": "<(&lt;operator&gt;.shiftLeft,1 &lt;&lt; j)<SUB>92</SUB>>", "409": "<(IDENTIFIER,j,1 &lt;&lt; j)<SUB>92</SUB>>", "411": "<(IDENTIFIER,maxCliqueSize,maxCliqueSize = max(maxCliqueSize, dp[mask1] + Integer.bitCount(mask)))<SUB>96</SUB>>", "413": "<(IDENTIFIER,Math,max(maxCliqueSize, dp[mask1] + Integer.bitCount(mask)))<SUB>96</SUB>>", "415": "<(&lt;operator&gt;.addition,dp[mask1] + Integer.bitCount(mask))<SUB>96</SUB>>", "417": "<(IDENTIFIER,dp,dp[mask1] + Integer.bitCount(mask))<SUB>96</SUB>>", "419": "<(bitCount,Integer.bitCount(mask))<SUB>96</SUB>>", "421": "<(IDENTIFIER,mask,Integer.bitCount(mask))<SUB>96</SUB>>", "423": "<(&lt;operator&gt;.assignment,double answer = 1.0 * k * k * (maxCliqueSize - 1) / (2 * maxCliqueSize))<SUB>100</SUB>>", "425": "<(&lt;operator&gt;.division,1.0 * k * k * (maxCliqueSize - 1) / (2 * maxCliqueSize))<SUB>100</SUB>>", "427": "<(&lt;operator&gt;.multiplication,1.0 * k * k)<SUB>100</SUB>>", "429": "<(LITERAL,1.0,1.0 * k)<SUB>100</SUB>>", "431": "<(IDENTIFIER,k,1.0 * k * k)<SUB>100</SUB>>", "433": "<(IDENTIFIER,maxCliqueSize,maxCliqueSize - 1)<SUB>100</SUB>>", "435": "<(&lt;operator&gt;.multiplication,2 * maxCliqueSize)<SUB>100</SUB>>", "437": "<(IDENTIFIER,maxCliqueSize,2 * maxCliqueSize)<SUB>100</SUB>>", "439": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>101</SUB>>", "441": "<(FIELD_IDENTIFIER,out,out)<SUB>101</SUB>>", "443": "<(&lt;operator&gt;.arrayInitializer,&lt;operator&gt;.arrayInitializer)<SUB>101</SUB>>", "445": "<(MODIFIER,PUBLIC)>", "447": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}