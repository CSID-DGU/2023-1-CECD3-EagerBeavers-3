{"edges": [["19", "20"], ["19", "21"], ["19", "170"], ["19", "171"], ["19", "172"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "29"], ["21", "30"], ["21", "36"], ["21", "37"], ["21", "44"], ["21", "45"], ["21", "52"], ["21", "53"], ["21", "57"], ["21", "58"], ["21", "62"], ["21", "97"], ["21", "105"], ["21", "106"], ["21", "109"], ["21", "110"], ["21", "165"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "28"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "35"], ["33", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["41", "43"], ["45", "46"], ["45", "47"], ["47", "48"], ["47", "49"], ["49", "50"], ["49", "51"], ["53", "54"], ["53", "55"], ["55", "56"], ["58", "59"], ["58", "60"], ["60", "61"], ["62", "63"], ["62", "64"], ["62", "67"], ["62", "70"], ["62", "72"], ["64", "65"], ["64", "66"], ["67", "68"], ["67", "69"], ["70", "71"], ["72", "73"], ["72", "79"], ["72", "88"], ["73", "74"], ["73", "75"], ["75", "76"], ["75", "78"], ["76", "77"], ["79", "80"], ["79", "83"], ["80", "81"], ["80", "82"], ["83", "84"], ["83", "85"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "92"], ["89", "90"], ["89", "91"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["97", "100"], ["97", "101"], ["97", "104"], ["101", "102"], ["101", "103"], ["106", "107"], ["106", "108"], ["110", "111"], ["110", "112"], ["110", "115"], ["110", "120"], ["110", "122"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["120", "121"], ["122", "123"], ["122", "148"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "135"], ["126", "127"], ["126", "132"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["132", "133"], ["132", "134"], ["135", "136"], ["135", "147"], ["136", "137"], ["136", "138"], ["138", "139"], ["138", "144"], ["139", "140"], ["139", "141"], ["141", "142"], ["141", "143"], ["144", "145"], ["144", "146"], ["148", "149"], ["148", "152"], ["148", "156"], ["149", "150"], ["149", "151"], ["152", "153"], ["153", "154"], ["153", "155"], ["156", "157"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["161", "162"], ["162", "163"], ["162", "164"], ["165", "166"], ["165", "169"], ["166", "167"], ["166", "168"], ["22", "28"], ["25", "33"], ["30", "41"], ["37", "49"], ["45", "55"], ["53", "60"], ["58", "64"], ["97", "106"], ["106", "112"], ["165", "172"], ["24", "22"], ["26", "25"], ["32", "30"], ["39", "37"], ["47", "45"], ["55", "53"], ["60", "58"], ["64", "67"], ["67", "76"], ["67", "101"], ["70", "67"], ["101", "97"], ["112", "117"], ["115", "129"], ["115", "168"], ["120", "117"], ["166", "165"], ["28", "26"], ["33", "32"], ["41", "39"], ["49", "47"], ["73", "80"], ["79", "89"], ["88", "70"], ["117", "115"], ["123", "149"], ["168", "166"], ["75", "73"], ["80", "85"], ["83", "79"], ["89", "94"], ["92", "88"], ["125", "123"], ["149", "153"], ["149", "158"], ["76", "75"], ["85", "83"], ["94", "92"], ["126", "137"], ["135", "125"], ["153", "120"], ["127", "132"], ["132", "126"], ["136", "135"], ["158", "162"], ["158", "120"], ["129", "127"], ["137", "141"], ["138", "136"], ["162", "120"], ["139", "144"], ["144", "138"], ["141", "139"], ["19", "24"], ["20", "172"], ["22", "172"], ["25", "172"], ["25", "172"], ["30", "172"], ["33", "172"], ["32", "172"], ["30", "172"], ["30", "172"], ["39", "172"], ["37", "172"], ["37", "172"], ["45", "172"], ["47", "172"], ["47", "172"], ["45", "172"], ["45", "172"], ["53", "172"], ["58", "172"], ["58", "172"], ["67", "172"], ["97", "172"], ["97", "172"], ["97", "172"], ["106", "172"], ["112", "172"], ["115", "172"], ["117", "172"], ["115", "172"], ["115", "172"], ["165", "172"], ["165", "172"], ["165", "172"], ["126", "172"], ["126", "172"], ["125", "172"], ["138", "172"], ["138", "172"], ["136", "172"], ["135", "172"], ["125", "172"], ["123", "172"], ["123", "172"], ["149", "172"], ["149", "172"], ["149", "172"], ["158", "172"], ["158", "172"], ["158", "172"], ["162", "172"], ["153", "172"], ["120", "172"], ["73", "172"], ["76", "172"], ["75", "172"], ["73", "172"], ["73", "172"], ["79", "172"], ["83", "172"], ["79", "172"], ["79", "172"], ["88", "172"], ["92", "172"], ["92", "172"], ["88", "172"], ["88", "172"], ["70", "172"], ["97", "172"], ["19", "20"], ["19", "22"], ["32", "30"], ["32", "30"], ["39", "37"], ["39", "37"], ["47", "45"], ["47", "45"], ["55", "53"], ["60", "58"], ["19", "106"], ["22", "25"], ["19", "25"], ["19", "64"], ["19", "97"], ["53", "97"], ["79", "97"], ["101", "97"], ["101", "97"], ["58", "97"], ["88", "97"], ["19", "112"], ["106", "165"], ["162", "165"], ["153", "165"], ["19", "165"], ["33", "32"], ["19", "32"], ["19", "39"], ["30", "39"], ["39", "47"], ["19", "47"], ["30", "47"], ["37", "55"], ["19", "55"], ["55", "60"], ["19", "60"], ["64", "67"], ["70", "67"], ["19", "67"], ["60", "67"], ["67", "70"], ["19", "70"], ["75", "73"], ["75", "73"], ["83", "79"], ["83", "79"], ["92", "88"], ["92", "88"], ["67", "101"], ["19", "101"], ["112", "115"], ["120", "115"], ["19", "115"], ["117", "115"], ["117", "115"], ["19", "120"], ["115", "120"], ["125", "123"], ["125", "123"], ["25", "33"], ["19", "33"], ["101", "117"], ["19", "117"], ["76", "75"], ["19", "75"], ["47", "83"], ["92", "83"], ["19", "83"], ["39", "83"], ["73", "83"], ["83", "92"], ["19", "92"], ["47", "92"], ["73", "92"], ["126", "125"], ["126", "125"], ["135", "125"], ["135", "125"], ["123", "149"], ["19", "149"], ["45", "149"], ["158", "149"], ["19", "153"], ["33", "76"], ["19", "76"], ["97", "126"], ["79", "126"], ["19", "135"], ["97", "135"], ["88", "135"], ["106", "153"], ["162", "153"], ["19", "136"], ["97", "136"], ["88", "136"], ["149", "158"], ["19", "158"], ["149", "158"], ["19", "162"], ["115", "129"], ["19", "129"], ["97", "138"], ["88", "138"], ["106", "162"], ["153", "162"], ["19", "141"], ["115", "141"], ["67", "94"], ["67", "73"], ["67", "89"], ["67", "75"], ["67", "85"], ["67", "67"], ["67", "92"], ["67", "76"], ["67", "79"], ["67", "80"], ["67", "83"], ["67", "88"], ["67", "70"], ["115", "115"], ["115", "141"], ["115", "120"], ["115", "136"], ["115", "149"], ["115", "132"], ["115", "123"], ["115", "144"], ["115", "129"], ["115", "138"], ["115", "126"], ["115", "137"], ["115", "135"], ["115", "117"], ["115", "127"], ["115", "139"], ["115", "125"], ["149", "153"], ["149", "158"], ["158", "162"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY sc = new Scanner(System.in))<SUB>2</SUB>>", "24": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,sc,new Scanner(System.in))<SUB>2</SUB>>", "27": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(LOCAL,String[] in: java.lang.String[])<SUB>4</SUB>>", "31": "<(IDENTIFIER,in,String[] in = split(&quot; &quot;))<SUB>4</SUB>>", "33": "<(nextLine,nextLine())<SUB>4</SUB>>", "35": "<(LITERAL,&quot; &quot;,split(&quot; &quot;))<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.assignment,int n = Integer.parseInt(in[0]))<SUB>5</SUB>>", "39": "<(parseInt,Integer.parseInt(in[0]))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.indexAccess,in[0])<SUB>5</SUB>>", "43": "<(LITERAL,0,Integer.parseInt(in[0]))<SUB>5</SUB>>", "45": "<(&lt;operator&gt;.assignment,int t = Integer.parseInt(in[1]))<SUB>6</SUB>>", "47": "<(parseInt,Integer.parseInt(in[1]))<SUB>6</SUB>>", "49": "<(&lt;operator&gt;.indexAccess,in[1])<SUB>6</SUB>>", "51": "<(LITERAL,1,Integer.parseInt(in[1]))<SUB>6</SUB>>", "53": "<(&lt;operator&gt;.assignment,int[] coor = new int[n])<SUB>8</SUB>>", "55": "<(&lt;operator&gt;.alloc,new int[n])>", "57": "<(LOCAL,int[] side: int[])<SUB>9</SUB>>", "59": "<(IDENTIFIER,side,int[] side = new int[n])<SUB>9</SUB>>", "61": "<(IDENTIFIER,n,new int[n])<SUB>9</SUB>>", "63": "<(LOCAL,int i: int)<SUB>11</SUB>>", "65": "<(IDENTIFIER,i,int i = 0)<SUB>11</SUB>>", "67": "<(&lt;operator&gt;.lessThan,i &lt; n)<SUB>11</SUB>>", "69": "<(IDENTIFIER,n,i &lt; n)<SUB>11</SUB>>", "71": "<(IDENTIFIER,i,i++)<SUB>11</SUB>>", "73": "<(&lt;operator&gt;.assignment,in = split(&quot; &quot;))<SUB>12</SUB>>", "75": "<(split,split(&quot; &quot;))<SUB>12</SUB>>", "77": "<(IDENTIFIER,sc,nextLine())<SUB>12</SUB>>", "79": "<(&lt;operator&gt;.assignment,coor[i] = Integer.parseInt(in[0]))<SUB>13</SUB>>", "81": "<(IDENTIFIER,coor,coor[i] = Integer.parseInt(in[0]))<SUB>13</SUB>>", "83": "<(parseInt,Integer.parseInt(in[0]))<SUB>13</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,in[0])<SUB>13</SUB>>", "87": "<(LITERAL,0,Integer.parseInt(in[0]))<SUB>13</SUB>>", "89": "<(&lt;operator&gt;.indexAccess,side[i])<SUB>14</SUB>>", "91": "<(IDENTIFIER,i,side[i] = Integer.parseInt(in[1]))<SUB>14</SUB>>", "93": "<(IDENTIFIER,Integer,Integer.parseInt(in[1]))<SUB>14</SUB>>", "95": "<(IDENTIFIER,in,Integer.parseInt(in[1]))<SUB>14</SUB>>", "97": "<(quickSort,quickSort(coor, 0, n - 1, side))<SUB>17</SUB>>", "99": "<(IDENTIFIER,coor,quickSort(coor, 0, n - 1, side))<SUB>17</SUB>>", "101": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>17</SUB>>", "103": "<(LITERAL,1,n - 1)<SUB>17</SUB>>", "105": "<(LOCAL,int count: int)<SUB>19</SUB>>", "107": "<(IDENTIFIER,count,int count = 2)<SUB>19</SUB>>", "109": "<(LOCAL,double dist: double)<SUB>20</SUB>>", "111": "<(LOCAL,int i: int)<SUB>21</SUB>>", "113": "<(IDENTIFIER,i,int i = 0)<SUB>21</SUB>>", "115": "<(&lt;operator&gt;.lessThan,i &lt; n - 1)<SUB>21</SUB>>", "117": "<(&lt;operator&gt;.subtraction,n - 1)<SUB>21</SUB>>", "119": "<(LITERAL,1,n - 1)<SUB>21</SUB>>", "121": "<(IDENTIFIER,i,i++)<SUB>21</SUB>>", "123": "<(&lt;operator&gt;.assignment,dist = (coor[i + 1] - coor[i]) - (double) (side[i + 1] + side[i]) / 2.0)<SUB>22</SUB>>", "125": "<(&lt;operator&gt;.subtraction,(coor[i + 1] - coor[i]) - (double) (side[i + 1] + side[i]) / 2.0)<SUB>22</SUB>>", "127": "<(&lt;operator&gt;.indexAccess,coor[i + 1])<SUB>22</SUB>>", "129": "<(&lt;operator&gt;.addition,i + 1)<SUB>22</SUB>>", "131": "<(LITERAL,1,i + 1)<SUB>22</SUB>>", "133": "<(IDENTIFIER,coor,coor[i + 1] - coor[i])<SUB>22</SUB>>", "135": "<(&lt;operator&gt;.division,(double) (side[i + 1] + side[i]) / 2.0)<SUB>22</SUB>>", "137": "<(TYPE_REF,double,double)<SUB>22</SUB>>", "139": "<(&lt;operator&gt;.indexAccess,side[i + 1])<SUB>22</SUB>>", "141": "<(&lt;operator&gt;.addition,i + 1)<SUB>22</SUB>>", "143": "<(LITERAL,1,i + 1)<SUB>22</SUB>>", "145": "<(IDENTIFIER,side,side[i + 1] + side[i])<SUB>22</SUB>>", "147": "<(LITERAL,2.0,(double) (side[i + 1] + side[i]) / 2.0)<SUB>22</SUB>>", "149": "<(&lt;operator&gt;.greaterThan,dist &gt; t)<SUB>23</SUB>>", "151": "<(IDENTIFIER,t,dist &gt; t)<SUB>23</SUB>>", "153": "<(&lt;operator&gt;.assignmentPlus,count += 2)<SUB>24</SUB>>", "155": "<(LITERAL,2,count += 2)<SUB>24</SUB>>", "157": "<(CONTROL_STRUCTURE,if (dist == t),if (dist == t))<SUB>25</SUB>>", "159": "<(IDENTIFIER,dist,dist == t)<SUB>25</SUB>>", "161": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>25</SUB>>", "163": "<(IDENTIFIER,count,count += 1)<SUB>26</SUB>>", "165": "<(println,System.out.println(count))<SUB>30</SUB>>", "167": "<(IDENTIFIER,System,System.out.println(count))<SUB>30</SUB>>", "169": "<(IDENTIFIER,count,System.out.println(count))<SUB>30</SUB>>", "171": "<(MODIFIER,STATIC)>"}}