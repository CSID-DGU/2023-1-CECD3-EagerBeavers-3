{"edges": [["19", "20"], ["19", "21"], ["19", "134"], ["19", "135"], ["19", "136"], ["21", "4"], ["21", "22"], ["21", "25"], ["21", "36"], ["21", "37"], ["21", "43"], ["21", "44"], ["21", "48"], ["21", "49"], ["21", "54"], ["21", "74"], ["21", "102"], ["21", "104"], ["21", "105"], ["21", "112"], ["21", "115"], ["21", "122"], ["21", "123"], ["21", "127"], ["22", "23"], ["22", "24"], ["25", "3"], ["25", "26"], ["26", "27"], ["26", "30"], ["26", "35"], ["27", "28"], ["27", "29"], ["30", "31"], ["30", "32"], ["32", "33"], ["32", "34"], ["37", "38"], ["37", "39"], ["39", "40"], ["39", "41"], ["41", "42"], ["44", "45"], ["44", "46"], ["46", "47"], ["49", "50"], ["49", "53"], ["50", "51"], ["50", "52"], ["54", "55"], ["54", "58"], ["54", "61"], ["54", "72"], ["55", "56"], ["55", "57"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "65"], ["62", "63"], ["62", "64"], ["65", "66"], ["65", "71"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["72", "73"], ["74", "75"], ["74", "78"], ["74", "89"], ["74", "100"], ["75", "76"], ["75", "77"], ["78", "79"], ["78", "88"], ["79", "80"], ["79", "87"], ["80", "81"], ["80", "82"], ["82", "83"], ["82", "84"], ["84", "85"], ["84", "86"], ["89", "90"], ["89", "91"], ["91", "92"], ["91", "99"], ["92", "93"], ["92", "94"], ["94", "95"], ["94", "96"], ["96", "97"], ["96", "98"], ["100", "101"], ["102", "103"], ["105", "106"], ["105", "107"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "111"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["117", "118"], ["117", "119"], ["119", "120"], ["119", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["127", "128"], ["127", "131"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["22", "29"], ["25", "41"], ["37", "46"], ["44", "50"], ["49", "55"], ["102", "108"], ["105", "112"], ["112", "119"], ["115", "125"], ["123", "130"], ["127", "136"], ["24", "22"], ["39", "37"], ["46", "44"], ["50", "49"], ["55", "58"], ["58", "72"], ["58", "75"], ["61", "58"], ["72", "62"], ["75", "84"], ["78", "100"], ["78", "102"], ["89", "84"], ["100", "96"], ["107", "105"], ["117", "115"], ["125", "123"], ["128", "131"], ["131", "127"], ["27", "34"], ["30", "25"], ["41", "39"], ["62", "68"], ["65", "61"], ["79", "78"], ["91", "89"], ["108", "109"], ["109", "107"], ["119", "117"], ["130", "128"], ["29", "27"], ["32", "30"], ["66", "65"], ["80", "79"], ["92", "91"], ["34", "32"], ["68", "66"], ["82", "80"], ["94", "92"], ["84", "82"], ["96", "94"], ["19", "24"], ["20", "136"], ["22", "136"], ["27", "136"], ["30", "136"], ["30", "136"], ["30", "136"], ["25", "136"], ["41", "136"], ["39", "136"], ["37", "136"], ["37", "136"], ["44", "136"], ["44", "136"], ["44", "136"], ["49", "136"], ["49", "136"], ["58", "136"], ["75", "136"], ["79", "136"], ["78", "136"], ["78", "136"], ["102", "136"], ["107", "136"], ["105", "136"], ["105", "136"], ["112", "136"], ["119", "136"], ["115", "136"], ["115", "136"], ["125", "136"], ["123", "136"], ["123", "136"], ["127", "136"], ["131", "136"], ["131", "136"], ["127", "136"], ["127", "136"], ["100", "136"], ["89", "136"], ["72", "136"], ["61", "136"], ["61", "136"], ["61", "136"], ["39", "136"], ["19", "20"], ["19", "22"], ["39", "37"], ["39", "37"], ["46", "44"], ["19", "49"], ["19", "105"], ["109", "105"], ["109", "105"], ["109", "112"], ["19", "112"], ["44", "115"], ["80", "115"], ["125", "123"], ["22", "25"], ["19", "25"], ["27", "25"], ["30", "25"], ["19", "55"], ["65", "61"], ["65", "61"], ["19", "75"], ["91", "89"], ["91", "89"], ["78", "102"], ["19", "102"], ["109", "112"], ["112", "115"], ["19", "115"], ["131", "127"], ["131", "127"], ["19", "27"], ["19", "35"], ["19", "39"], ["41", "39"], ["19", "46"], ["55", "58"], ["68", "58"], ["19", "58"], ["58", "72"], ["19", "72"], ["79", "78"], ["79", "78"], ["37", "78"], ["89", "78"], ["19", "78"], ["78", "89"], ["19", "89"], ["80", "100"], ["19", "100"], ["19", "107"], ["109", "107"], ["109", "107"], ["115", "125"], ["19", "125"], ["123", "131"], ["19", "131"], ["105", "131"], ["27", "30"], ["19", "30"], ["25", "41"], ["19", "41"], ["44", "65"], ["19", "65"], ["80", "79"], ["80", "79"], ["19", "79"], ["92", "91"], ["92", "91"], ["19", "91"], ["102", "109"], ["19", "109"], ["80", "109"], ["19", "119"], ["109", "119"], ["84", "80"], ["19", "80"], ["44", "80"], ["92", "80"], ["65", "80"], ["96", "92"], ["19", "92"], ["44", "92"], ["80", "92"], ["72", "68"], ["19", "68"], ["75", "84"], ["92", "84"], ["19", "84"], ["100", "96"], ["19", "96"], ["58", "58"], ["58", "68"], ["58", "61"], ["58", "66"], ["58", "72"], ["58", "65"], ["58", "62"], ["78", "80"], ["78", "94"], ["78", "96"], ["78", "89"], ["78", "100"], ["78", "84"], ["78", "92"], ["78", "91"], ["78", "82"], ["78", "78"], ["78", "79"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "22": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "24": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>3</SUB>>", "27": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "29": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>3</SUB>>", "31": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "33": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>3</SUB>>", "35": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "37": "<(&lt;operator&gt;.assignment,Long n = parseLong(br.readLine()))<SUB>4</SUB>>", "39": "<(parseLong,parseLong(br.readLine()))<SUB>4</SUB>>", "41": "<(readLine,readLine())<SUB>4</SUB>>", "43": "<(LOCAL,long[] p: long[])<SUB>5</SUB>>", "45": "<(IDENTIFIER,p,long[] p = new long[15])<SUB>5</SUB>>", "47": "<(LITERAL,15,new long[15])<SUB>5</SUB>>", "49": "<(&lt;operator&gt;.assignment,p[0] = 1)<SUB>7</SUB>>", "51": "<(IDENTIFIER,p,p[0] = 1)<SUB>7</SUB>>", "53": "<(LITERAL,1,p[0] = 1)<SUB>7</SUB>>", "55": "<(&lt;operator&gt;.assignment,i = 1)<SUB>8</SUB>>", "57": "<(LITERAL,1,i = 1)<SUB>8</SUB>>", "59": "<(IDENTIFIER,i,i &lt; 15)<SUB>8</SUB>>", "61": "<(&lt;operator&gt;.assignment,p[i] = p[i - 1] * 10)<SUB>8</SUB>>", "63": "<(IDENTIFIER,p,p[i] = p[i - 1] * 10)<SUB>8</SUB>>", "65": "<(&lt;operator&gt;.multiplication,p[i - 1] * 10)<SUB>8</SUB>>", "67": "<(IDENTIFIER,p,p[i - 1] * 10)<SUB>8</SUB>>", "69": "<(IDENTIFIER,i,i - 1)<SUB>8</SUB>>", "71": "<(LITERAL,10,p[i - 1] * 10)<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "75": "<(&lt;operator&gt;.assignment,i = 1)<SUB>9</SUB>>", "77": "<(LITERAL,1,i = 1)<SUB>9</SUB>>", "79": "<(&lt;operator&gt;.multiplication,i * p[i - 1] * 9L)<SUB>9</SUB>>", "81": "<(IDENTIFIER,i,i * p[i - 1])<SUB>9</SUB>>", "83": "<(IDENTIFIER,p,i * p[i - 1])<SUB>9</SUB>>", "85": "<(IDENTIFIER,i,i - 1)<SUB>9</SUB>>", "87": "<(LITERAL,9L,i * p[i - 1] * 9L)<SUB>9</SUB>>", "89": "<(&lt;operator&gt;.assignmentMinus,n -= i * p[i - 1] * 9L)<SUB>9</SUB>>", "91": "<(&lt;operator&gt;.multiplication,i * p[i - 1] * 9L)<SUB>9</SUB>>", "93": "<(IDENTIFIER,i,i * p[i - 1])<SUB>9</SUB>>", "95": "<(IDENTIFIER,p,i * p[i - 1])<SUB>9</SUB>>", "97": "<(IDENTIFIER,i,i - 1)<SUB>9</SUB>>", "99": "<(LITERAL,9L,i * p[i - 1] * 9L)<SUB>9</SUB>>", "101": "<(IDENTIFIER,i,i++)<SUB>9</SUB>>", "103": "<(IDENTIFIER,n,n--)<SUB>10</SUB>>", "105": "<(&lt;operator&gt;.assignment,int v = (int) (n % i))<SUB>11</SUB>>", "107": "<(&lt;operator&gt;.cast,(int) (n % i))<SUB>11</SUB>>", "109": "<(&lt;operator&gt;.modulo,n % i)<SUB>11</SUB>>", "111": "<(IDENTIFIER,i,n % i)<SUB>11</SUB>>", "113": "<(IDENTIFIER,n,n /= i)<SUB>12</SUB>>", "115": "<(&lt;operator&gt;.assignmentPlus,n += p[i - 1])<SUB>13</SUB>>", "117": "<(&lt;operator&gt;.indexAccess,p[i - 1])<SUB>13</SUB>>", "119": "<(&lt;operator&gt;.subtraction,i - 1)<SUB>13</SUB>>", "121": "<(LITERAL,1,i - 1)<SUB>13</SUB>>", "123": "<(&lt;operator&gt;.assignment,String s = n.toString())<SUB>14</SUB>>", "125": "<(toString,n.toString())<SUB>14</SUB>>", "127": "<(println,System.out.println(s.charAt(v)))<SUB>15</SUB>>", "129": "<(IDENTIFIER,System,System.out.println(s.charAt(v)))<SUB>15</SUB>>", "131": "<(charAt,s.charAt(v))<SUB>15</SUB>>", "133": "<(IDENTIFIER,v,s.charAt(v))<SUB>15</SUB>>", "135": "<(MODIFIER,STATIC)>"}}