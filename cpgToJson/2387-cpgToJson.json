{"edges": [["24", "26"], ["24", "189"], ["24", "190"], ["24", "191"], ["26", "4"], ["26", "27"], ["26", "30"], ["26", "6"], ["26", "41"], ["26", "44"], ["26", "48"], ["26", "49"], ["26", "8"], ["26", "55"], ["26", "58"], ["26", "61"], ["26", "62"], ["26", "66"], ["26", "84"], ["26", "85"], ["26", "88"], ["26", "122"], ["26", "123"], ["26", "129"], ["26", "187"], ["27", "28"], ["27", "29"], ["30", "3"], ["30", "31"], ["31", "32"], ["31", "35"], ["31", "40"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["37", "38"], ["37", "39"], ["41", "42"], ["41", "43"], ["44", "5"], ["44", "45"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "53"], ["53", "54"], ["55", "56"], ["55", "57"], ["58", "7"], ["58", "59"], ["59", "60"], ["62", "63"], ["62", "64"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "71"], ["66", "74"], ["66", "76"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["74", "75"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["80", "81"], ["80", "82"], ["82", "83"], ["85", "86"], ["85", "87"], ["88", "89"], ["88", "90"], ["88", "93"], ["88", "96"], ["88", "98"], ["90", "91"], ["90", "92"], ["93", "94"], ["93", "95"], ["96", "97"], ["98", "99"], ["98", "100"], ["98", "105"], ["98", "108"], ["98", "110"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["105", "106"], ["105", "107"], ["108", "109"], ["110", "111"], ["110", "118"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "117"], ["118", "119"], ["118", "120"], ["120", "121"], ["123", "124"], ["123", "125"], ["125", "126"], ["125", "127"], ["127", "128"], ["129", "130"], ["129", "134"], ["130", "131"], ["130", "133"], ["131", "132"], ["134", "135"], ["134", "138"], ["134", "141"], ["134", "142"], ["134", "148"], ["134", "149"], ["134", "155"], ["134", "156"], ["134", "163"], ["134", "181"], ["135", "136"], ["135", "137"], ["138", "9"], ["138", "139"], ["139", "140"], ["142", "143"], ["142", "144"], ["144", "145"], ["144", "146"], ["146", "147"], ["149", "150"], ["149", "151"], ["151", "152"], ["151", "153"], ["153", "154"], ["156", "157"], ["156", "158"], ["158", "159"], ["158", "162"], ["159", "160"], ["159", "161"], ["163", "164"], ["163", "177"], ["164", "165"], ["164", "176"], ["165", "166"], ["165", "175"], ["166", "167"], ["166", "174"], ["167", "168"], ["167", "171"], ["168", "169"], ["168", "170"], ["171", "172"], ["171", "173"], ["177", "178"], ["177", "179"], ["179", "180"], ["181", "182"], ["181", "183"], ["183", "184"], ["183", "185"], ["183", "186"], ["187", "188"], ["27", "34"], ["30", "43"], ["41", "47"], ["44", "53"], ["49", "57"], ["55", "59"], ["58", "64"], ["62", "68"], ["85", "90"], ["123", "131"], ["187", "191"], ["29", "27"], ["43", "41"], ["45", "44"], ["51", "49"], ["57", "55"], ["59", "58"], ["64", "62"], ["68", "71"], ["71", "77"], ["71", "85"], ["74", "71"], ["76", "74"], ["90", "93"], ["93", "102"], ["93", "127"], ["96", "93"], ["125", "123"], ["130", "137"], ["130", "187"], ["32", "39"], ["35", "30"], ["47", "45"], ["53", "51"], ["77", "82"], ["80", "76"], ["100", "105"], ["105", "112"], ["105", "96"], ["108", "105"], ["127", "125"], ["131", "130"], ["135", "139"], ["138", "146"], ["142", "153"], ["149", "159"], ["156", "169"], ["181", "131"], ["34", "32"], ["37", "35"], ["82", "80"], ["102", "100"], ["111", "120"], ["111", "108"], ["118", "108"], ["137", "135"], ["139", "138"], ["144", "142"], ["151", "149"], ["158", "156"], ["164", "179"], ["164", "183"], ["177", "183"], ["183", "181"], ["39", "37"], ["112", "115"], ["115", "111"], ["120", "118"], ["146", "144"], ["153", "151"], ["159", "158"], ["165", "164"], ["179", "177"], ["166", "165"], ["167", "166"], ["168", "171"], ["171", "167"], ["169", "168"], ["24", "29"], ["25", "191"], ["27", "191"], ["32", "191"], ["35", "191"], ["35", "191"], ["35", "191"], ["30", "191"], ["41", "191"], ["44", "191"], ["44", "191"], ["49", "191"], ["55", "191"], ["58", "191"], ["58", "191"], ["62", "191"], ["62", "191"], ["62", "191"], ["85", "191"], ["85", "191"], ["90", "191"], ["93", "191"], ["93", "191"], ["93", "191"], ["125", "191"], ["127", "191"], ["125", "191"], ["123", "191"], ["123", "191"], ["131", "191"], ["130", "191"], ["130", "191"], ["187", "191"], ["187", "191"], ["135", "191"], ["139", "191"], ["138", "191"], ["138", "191"], ["142", "191"], ["151", "191"], ["153", "191"], ["151", "191"], ["149", "191"], ["149", "191"], ["159", "191"], ["159", "191"], ["158", "191"], ["156", "191"], ["156", "191"], ["167", "191"], ["171", "191"], ["167", "191"], ["166", "191"], ["165", "191"], ["164", "191"], ["164", "191"], ["177", "191"], ["177", "191"], ["183", "191"], ["181", "191"], ["181", "191"], ["100", "191"], ["100", "191"], ["105", "191"], ["105", "191"], ["96", "191"], ["111", "191"], ["111", "191"], ["111", "191"], ["118", "191"], ["118", "191"], ["118", "191"], ["108", "191"], ["76", "191"], ["82", "191"], ["80", "191"], ["76", "191"], ["76", "191"], ["74", "191"], ["24", "25"], ["24", "27"], ["24", "41"], ["51", "49"], ["51", "49"], ["24", "55"], ["64", "62"], ["24", "85"], ["125", "123"], ["125", "123"], ["27", "30"], ["24", "30"], ["32", "30"], ["35", "30"], ["41", "44"], ["24", "44"], ["55", "58"], ["24", "58"], ["59", "58"], ["24", "68"], ["80", "76"], ["80", "76"], ["24", "90"], ["44", "187"], ["181", "187"], ["24", "187"], ["24", "32"], ["24", "40"], ["24", "51"], ["53", "51"], ["53", "59"], ["24", "59"], ["49", "64"], ["24", "64"], ["68", "71"], ["74", "71"], ["24", "71"], ["64", "71"], ["71", "74"], ["24", "74"], ["90", "93"], ["96", "93"], ["24", "93"], ["71", "93"], ["105", "93"], ["24", "96"], ["93", "96"], ["93", "100"], ["24", "100"], ["51", "125"], ["80", "125"], ["24", "125"], ["127", "125"], ["131", "130"], ["24", "130"], ["24", "135"], ["144", "142"], ["144", "142"], ["151", "149"], ["151", "149"], ["159", "156"], ["159", "156"], ["24", "156"], ["32", "35"], ["24", "35"], ["30", "53"], ["24", "53"], ["51", "80"], ["24", "80"], ["82", "80"], ["100", "105"], ["108", "105"], ["24", "105"], ["93", "105"], ["105", "108"], ["24", "108"], ["120", "118"], ["59", "127"], ["24", "127"], ["123", "131"], ["24", "131"], ["135", "138"], ["24", "138"], ["139", "138"], ["179", "177"], ["44", "181"], ["24", "181"], ["58", "82"], ["24", "82"], ["93", "102"], ["24", "102"], ["62", "111"], ["76", "111"], ["127", "139"], ["24", "139"], ["125", "144"], ["151", "144"], ["24", "144"], ["146", "144"], ["144", "151"], ["24", "151"], ["153", "151"], ["159", "158"], ["159", "158"], ["24", "158"], ["165", "164"], ["165", "164"], ["24", "164"], ["24", "183"], ["85", "120"], ["118", "120"], ["24", "120"], ["138", "146"], ["24", "146"], ["146", "153"], ["24", "153"], ["149", "159"], ["24", "159"], ["142", "159"], ["166", "165"], ["166", "165"], ["24", "165"], ["85", "179"], ["118", "179"], ["24", "179"], ["167", "166"], ["167", "166"], ["24", "166"], ["24", "167"], ["156", "167"], ["171", "167"], ["171", "167"], ["24", "168"], ["156", "168"], ["24", "171"], ["156", "171"], ["71", "77"], ["71", "74"], ["71", "76"], ["71", "82"], ["71", "80"], ["71", "71"], ["93", "96"], ["93", "102"], ["93", "93"], ["93", "105"], ["93", "100"], ["130", "183"], ["130", "167"], ["130", "146"], ["130", "169"], ["130", "131"], ["130", "166"], ["130", "149"], ["130", "142"], ["130", "151"], ["130", "153"], ["130", "168"], ["130", "159"], ["130", "144"], ["130", "138"], ["130", "181"], ["130", "137"], ["130", "130"], ["130", "165"], ["130", "135"], ["130", "164"], ["130", "139"], ["130", "156"], ["130", "158"], ["130", "171"], ["105", "115"], ["105", "112"], ["105", "105"], ["105", "108"], ["105", "111"], ["111", "120"], ["111", "118"], ["164", "179"], ["164", "177"]], "features": {"24": "<(METHOD,main)<SUB>1</SUB>>", "26": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "27": "<(&lt;operator&gt;.assignment,ANY br = new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "29": "<(&lt;operator&gt;.alloc,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "3": "<(IDENTIFIER,br,new BufferedReader(new InputStreamReader(System.in)))<SUB>2</SUB>>", "32": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)>", "34": "<(&lt;operator&gt;.alloc,new InputStreamReader(System.in))<SUB>2</SUB>>", "36": "<(IDENTIFIER,$obj0,new InputStreamReader(System.in))>", "38": "<(IDENTIFIER,System,new InputStreamReader(System.in))<SUB>2</SUB>>", "40": "<(IDENTIFIER,$obj0,&lt;empty&gt;)>", "41": "<(&lt;operator&gt;.assignment,ANY pw = new PrintWriter(System.out))<SUB>3</SUB>>", "43": "<(&lt;operator&gt;.alloc,new PrintWriter(System.out))<SUB>3</SUB>>", "5": "<(IDENTIFIER,pw,new PrintWriter(System.out))<SUB>3</SUB>>", "46": "<(IDENTIFIER,System,new PrintWriter(System.out))<SUB>3</SUB>>", "48": "<(LOCAL,int n: int)<SUB>4</SUB>>", "50": "<(IDENTIFIER,n,int n = parseInt(br.readLine()))<SUB>4</SUB>>", "52": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>4</SUB>>", "54": "<(IDENTIFIER,br,readLine())<SUB>4</SUB>>", "55": "<(&lt;operator&gt;.assignment,ANY st = new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "57": "<(&lt;operator&gt;.alloc,new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "7": "<(IDENTIFIER,st,new StringTokenizer(br.readLine()))<SUB>5</SUB>>", "60": "<(IDENTIFIER,br,readLine())<SUB>5</SUB>>", "62": "<(&lt;operator&gt;.assignment,int[] aa = new int[n])<SUB>6</SUB>>", "64": "<(&lt;operator&gt;.alloc,new int[n])>", "66": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>7</SUB>>", "68": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>7</SUB>>", "70": "<(LITERAL,0,int i = 0)<SUB>7</SUB>>", "72": "<(IDENTIFIER,i,i &lt; n)<SUB>7</SUB>>", "74": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "76": "<(&lt;operator&gt;.assignment,aa[i] = parseInt(st.nextToken()))<SUB>8</SUB>>", "78": "<(IDENTIFIER,aa,aa[i] = parseInt(st.nextToken()))<SUB>8</SUB>>", "80": "<(parseInt,parseInt(st.nextToken()))<SUB>8</SUB>>", "82": "<(nextToken,nextToken())<SUB>8</SUB>>", "84": "<(LOCAL,boolean odd: boolean)<SUB>9</SUB>>", "86": "<(IDENTIFIER,odd,boolean odd = false)<SUB>9</SUB>>", "88": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; n); i++),for (int i = 0; Some(i &lt; n); i++))<SUB>10</SUB>>", "90": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>10</SUB>>", "92": "<(LITERAL,0,int i = 0)<SUB>10</SUB>>", "94": "<(IDENTIFIER,i,i &lt; n)<SUB>10</SUB>>", "96": "<(&lt;operator&gt;.postIncrement,i++)<SUB>10</SUB>>", "98": "<(CONTROL_STRUCTURE,for (int j = i + 1; Some(j &lt; n); j++),for (int j = i + 1; Some(j &lt; n); j++))<SUB>11</SUB>>", "100": "<(&lt;operator&gt;.assignment,int j = i + 1)<SUB>11</SUB>>", "102": "<(&lt;operator&gt;.addition,i + 1)<SUB>11</SUB>>", "104": "<(LITERAL,1,i + 1)<SUB>11</SUB>>", "106": "<(IDENTIFIER,j,j &lt; n)<SUB>11</SUB>>", "108": "<(&lt;operator&gt;.postIncrement,j++)<SUB>11</SUB>>", "110": "<(CONTROL_STRUCTURE,if (aa[i] &gt; aa[j]),if (aa[i] &gt; aa[j]))<SUB>12</SUB>>", "112": "<(&lt;operator&gt;.indexAccess,aa[i])<SUB>12</SUB>>", "114": "<(IDENTIFIER,i,aa[i] &gt; aa[j])<SUB>12</SUB>>", "116": "<(IDENTIFIER,aa,aa[i] &gt; aa[j])<SUB>12</SUB>>", "118": "<(&lt;operator&gt;.assignment,odd = !odd)<SUB>13</SUB>>", "120": "<(&lt;operator&gt;.logicalNot,!odd)<SUB>13</SUB>>", "122": "<(LOCAL,int m: int)<SUB>14</SUB>>", "124": "<(IDENTIFIER,m,int m = parseInt(br.readLine()))<SUB>14</SUB>>", "126": "<(IDENTIFIER,Integer,parseInt(br.readLine()))<SUB>14</SUB>>", "128": "<(IDENTIFIER,br,readLine())<SUB>14</SUB>>", "130": "<(&lt;operator&gt;.greaterThan,m-- &gt; 0)<SUB>15</SUB>>", "132": "<(IDENTIFIER,m,m--)<SUB>15</SUB>>", "134": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>15</SUB>>", "136": "<(IDENTIFIER,st,st = new StringTokenizer(br.readLine()))<SUB>16</SUB>>", "138": "<(&lt;init&gt;,new StringTokenizer(br.readLine()))<SUB>16</SUB>>", "139": "<(readLine,readLine())<SUB>16</SUB>>", "141": "<(LOCAL,int l: int)<SUB>17</SUB>>", "143": "<(IDENTIFIER,l,int l = parseInt(st.nextToken()))<SUB>17</SUB>>", "145": "<(IDENTIFIER,Integer,parseInt(st.nextToken()))<SUB>17</SUB>>", "147": "<(IDENTIFIER,st,nextToken())<SUB>17</SUB>>", "149": "<(&lt;operator&gt;.assignment,int r = parseInt(st.nextToken()))<SUB>18</SUB>>", "151": "<(parseInt,parseInt(st.nextToken()))<SUB>18</SUB>>", "153": "<(nextToken,nextToken())<SUB>18</SUB>>", "155": "<(LOCAL,int k: int)<SUB>19</SUB>>", "157": "<(IDENTIFIER,k,int k = r - l + 1)<SUB>19</SUB>>", "159": "<(&lt;operator&gt;.subtraction,r - l)<SUB>19</SUB>>", "161": "<(IDENTIFIER,l,r - l)<SUB>19</SUB>>", "163": "<(CONTROL_STRUCTURE,if ((long) k * (k - 1) / 2 % 2 != 0),if ((long) k * (k - 1) / 2 % 2 != 0))<SUB>20</SUB>>", "165": "<(&lt;operator&gt;.modulo,(long) k * (k - 1) / 2 % 2)<SUB>20</SUB>>", "167": "<(&lt;operator&gt;.multiplication,(long) k * (k - 1))<SUB>20</SUB>>", "169": "<(TYPE_REF,long,long)<SUB>20</SUB>>", "171": "<(&lt;operator&gt;.subtraction,k - 1)<SUB>20</SUB>>", "173": "<(LITERAL,1,k - 1)<SUB>20</SUB>>", "175": "<(LITERAL,2,(long) k * (k - 1) / 2 % 2)<SUB>20</SUB>>", "177": "<(&lt;operator&gt;.assignment,odd = !odd)<SUB>21</SUB>>", "179": "<(&lt;operator&gt;.logicalNot,!odd)<SUB>21</SUB>>", "181": "<(println,println(odd ? &quot;odd&quot; : &quot;even&quot;))<SUB>22</SUB>>", "183": "<(&lt;operator&gt;.conditional,odd ? &quot;odd&quot; : &quot;even&quot;)<SUB>22</SUB>>", "185": "<(LITERAL,&quot;odd&quot;,odd ? &quot;odd&quot; : &quot;even&quot;)<SUB>22</SUB>>", "187": "<(close,close())<SUB>24</SUB>>", "189": "<(MODIFIER,PUBLIC)>", "191": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}