{"edges": [["37", "12"], ["37", "38"], ["37", "142"], ["37", "143"], ["37", "144"], ["38", "4"], ["38", "39"], ["38", "42"], ["38", "8"], ["38", "46"], ["38", "10"], ["38", "50"], ["38", "14"], ["38", "61"], ["38", "64"], ["38", "65"], ["38", "20"], ["38", "68"], ["38", "71"], ["38", "72"], ["38", "76"], ["38", "134"], ["39", "40"], ["39", "41"], ["42", "3"], ["42", "43"], ["43", "44"], ["43", "45"], ["46", "47"], ["46", "48"], ["48", "49"], ["50", "51"], ["50", "52"], ["52", "53"], ["52", "59"], ["53", "54"], ["53", "6"], ["54", "55"], ["55", "56"], ["55", "57"], ["55", "58"], ["59", "60"], ["61", "62"], ["61", "63"], ["64", "13"], ["65", "66"], ["65", "67"], ["68", "69"], ["68", "70"], ["72", "73"], ["72", "74"], ["74", "75"], ["76", "77"], ["76", "79"], ["77", "78"], ["79", "80"], ["79", "81"], ["79", "85"], ["79", "86"], ["79", "91"], ["79", "124"], ["79", "131"], ["81", "82"], ["81", "83"], ["83", "84"], ["86", "87"], ["86", "88"], ["88", "89"], ["88", "90"], ["91", "92"], ["91", "93"], ["93", "94"], ["94", "95"], ["94", "96"], ["94", "99"], ["94", "103"], ["94", "105"], ["96", "97"], ["96", "98"], ["99", "100"], ["99", "101"], ["101", "102"], ["103", "104"], ["105", "106"], ["105", "107"], ["105", "120"], ["107", "108"], ["107", "109"], ["109", "110"], ["109", "119"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "113"], ["113", "114"], ["113", "115"], ["116", "117"], ["116", "118"], ["120", "121"], ["120", "122"], ["120", "123"], ["124", "125"], ["124", "127"], ["125", "126"], ["127", "128"], ["128", "129"], ["128", "130"], ["131", "132"], ["131", "133"], ["134", "135"], ["134", "138"], ["135", "136"], ["135", "137"], ["138", "139"], ["138", "141"], ["138", "16"], ["139", "140"], ["39", "45"], ["42", "48"], ["46", "55"], ["50", "63"], ["61", "64"], ["64", "65"], ["65", "68"], ["68", "74"], ["72", "77"], ["134", "144"], ["41", "39"], ["43", "42"], ["48", "46"], ["52", "50"], ["63", "61"], ["74", "72"], ["77", "83"], ["77", "137"], ["135", "139"], ["138", "134"], ["45", "43"], ["53", "59"], ["59", "52"], ["81", "88"], ["86", "92"], ["131", "77"], ["137", "135"], ["139", "16"], ["16", "138"], ["54", "6"], ["6", "53"], ["83", "81"], ["88", "86"], ["92", "96"], ["92", "125"], ["125", "128"], ["125", "131"], ["55", "54"], ["128", "131"], ["96", "101"], ["99", "113"], ["99", "125"], ["103", "101"], ["101", "99"], ["107", "120"], ["120", "103"], ["109", "107"], ["110", "109"], ["111", "116"], ["116", "110"], ["113", "111"], ["37", "41"], ["12", "144"], ["39", "144"], ["42", "144"], ["42", "144"], ["48", "144"], ["46", "144"], ["46", "144"], ["55", "144"], ["54", "144"], ["53", "144"], ["52", "144"], ["52", "144"], ["50", "144"], ["50", "144"], ["61", "144"], ["64", "144"], ["65", "144"], ["68", "144"], ["68", "144"], ["74", "144"], ["72", "144"], ["77", "144"], ["77", "144"], ["134", "144"], ["139", "144"], ["138", "144"], ["134", "144"], ["134", "144"], ["88", "144"], ["86", "144"], ["86", "144"], ["96", "144"], ["99", "144"], ["99", "144"], ["99", "144"], ["125", "144"], ["128", "144"], ["131", "144"], ["131", "144"], ["131", "144"], ["111", "144"], ["110", "144"], ["110", "144"], ["109", "144"], ["107", "144"], ["107", "144"], ["120", "144"], ["120", "144"], ["103", "144"], ["59", "144"], ["55", "144"], ["37", "12"], ["37", "39"], ["48", "46"], ["52", "50"], ["52", "50"], ["37", "61"], ["37", "68"], ["74", "72"], ["39", "42"], ["37", "42"], ["61", "64"], ["37", "64"], ["64", "65"], ["37", "65"], ["138", "134"], ["138", "134"], ["138", "134"], ["42", "48"], ["37", "48"], ["53", "52"], ["53", "52"], ["59", "52"], ["50", "74"], ["37", "74"], ["72", "77"], ["83", "77"], ["37", "77"], ["83", "81"], ["88", "86"], ["88", "86"], ["125", "131"], ["37", "131"], ["139", "138"], ["37", "138"], ["54", "53"], ["37", "53"], ["37", "59"], ["37", "92"], ["65", "139"], ["101", "139"], ["128", "139"], ["37", "139"], ["55", "54"], ["55", "54"], ["55", "54"], ["77", "83"], ["37", "83"], ["37", "88"], ["81", "88"], ["86", "125"], ["37", "125"], ["37", "55"], ["46", "55"], ["37", "96"], ["65", "128"], ["101", "128"], ["37", "128"], ["96", "99"], ["103", "99"], ["37", "99"], ["101", "99"], ["120", "103"], ["37", "103"], ["109", "107"], ["109", "107"], ["65", "101"], ["128", "101"], ["120", "101"], ["37", "101"], ["116", "120"], ["37", "120"], ["116", "120"], ["107", "120"], ["111", "109"], ["111", "109"], ["116", "109"], ["116", "109"], ["37", "109"], ["111", "110"], ["111", "110"], ["116", "110"], ["116", "110"], ["101", "111"], ["37", "111"], ["113", "111"], ["113", "111"], ["111", "116"], ["37", "116"], ["113", "116"], ["99", "113"], ["37", "113"], ["77", "77"], ["77", "83"], ["77", "81"], ["77", "131"], ["77", "88"], ["77", "92"], ["77", "125"], ["77", "86"], ["92", "96"], ["92", "99"], ["92", "101"], ["125", "128"], ["99", "107"], ["99", "120"], ["99", "113"], ["99", "116"], ["99", "99"], ["99", "103"], ["99", "110"], ["99", "101"], ["99", "111"], ["99", "109"]], "features": {"37": "<(METHOD,main)<SUB>1</SUB>>", "38": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "39": "<(&lt;operator&gt;.assignment,ANY s = new Scanner(System.in))<SUB>2</SUB>>", "41": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,s,new Scanner(System.in))<SUB>2</SUB>>", "44": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "8": "<(LOCAL,int n: int)<SUB>3</SUB>>", "47": "<(IDENTIFIER,n,int n = nextInt())<SUB>3</SUB>>", "49": "<(IDENTIFIER,s,nextInt())<SUB>3</SUB>>", "50": "<(&lt;operator&gt;.assignment,ANY commands = collect(Collectors.toList()))<SUB>4</SUB>>", "52": "<(collect,collect(Collectors.toList()))<SUB>4</SUB>>", "54": "<(boxed,boxed())<SUB>4</SUB>>", "56": "<(IDENTIFIER,IntStream,range(0, n))<SUB>4</SUB>>", "58": "<(IDENTIFIER,n,range(0, n))<SUB>4</SUB>>", "59": "<(toList,toList())<SUB>4</SUB>>", "14": "<(LOCAL,List&lt;Integer&gt; ways: ANY)<SUB>5</SUB>>", "62": "<(IDENTIFIER,ways,ANY ways = new ArrayList&lt;&gt;())<SUB>5</SUB>>", "64": "<(&lt;init&gt;,new ArrayList&lt;&gt;())<SUB>5</SUB>>", "65": "<(add,add(1))<SUB>6</SUB>>", "67": "<(LITERAL,1,add(1))<SUB>6</SUB>>", "68": "<(&lt;operator&gt;.assignment,boolean lastWasS = false)<SUB>7</SUB>>", "70": "<(LITERAL,false,boolean lastWasS = false)<SUB>7</SUB>>", "72": "<(&lt;operator&gt;.assignment,)<SUB>8</SUB>>", "74": "<(iterator,&lt;empty&gt;)<SUB>8</SUB>>", "76": "<(CONTROL_STRUCTURE,FOR,FOR)<SUB>8</SUB>>", "78": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "80": "<(LOCAL,command: java.lang.String)<SUB>8</SUB>>", "82": "<(IDENTIFIER,command,&lt;empty&gt;)>", "84": "<(IDENTIFIER,$iterLocal0,&lt;empty&gt;)>", "86": "<(&lt;operator&gt;.assignment,boolean isS = this.equals(command))<SUB>9</SUB>>", "88": "<(equals,this.equals(command))<SUB>9</SUB>>", "90": "<(IDENTIFIER,command,this.equals(command))<SUB>9</SUB>>", "92": "<(IDENTIFIER,lastWasS,if (lastWasS))<SUB>11</SUB>>", "94": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; ways.size()); ++i),for (int i = 1; Some(i &lt; ways.size()); ++i))<SUB>12</SUB>>", "96": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>12</SUB>>", "98": "<(LITERAL,1,int i = 1)<SUB>12</SUB>>", "100": "<(IDENTIFIER,i,i &lt; ways.size())<SUB>12</SUB>>", "102": "<(IDENTIFIER,ways,size())<SUB>12</SUB>>", "104": "<(IDENTIFIER,i,++i)<SUB>12</SUB>>", "106": "<(LOCAL,int waysNumber: int)<SUB>13</SUB>>", "108": "<(IDENTIFIER,waysNumber,int waysNumber = (ways.get(i - 1) + ways.get(i)) % 1_000_000_007)<SUB>13</SUB>>", "110": "<(&lt;operator&gt;.addition,ways.get(i - 1) + ways.get(i))<SUB>13</SUB>>", "112": "<(IDENTIFIER,ways,get(i - 1))<SUB>13</SUB>>", "114": "<(IDENTIFIER,i,i - 1)<SUB>13</SUB>>", "116": "<(get,get(i))<SUB>13</SUB>>", "118": "<(IDENTIFIER,i,get(i))<SUB>13</SUB>>", "120": "<(set,set(i, waysNumber))<SUB>14</SUB>>", "122": "<(IDENTIFIER,i,set(i, waysNumber))<SUB>14</SUB>>", "124": "<(CONTROL_STRUCTURE,if (!isS),if (!isS))<SUB>18</SUB>>", "126": "<(IDENTIFIER,isS,!isS)<SUB>18</SUB>>", "128": "<(add,add(0))<SUB>19</SUB>>", "130": "<(LITERAL,0,add(0))<SUB>19</SUB>>", "132": "<(IDENTIFIER,lastWasS,lastWasS = isS)<SUB>22</SUB>>", "134": "<(println,println(ways.stream().reduce(0, (a, b) -&gt; (a + b) % 1_000_000_007)))<SUB>24</SUB>>", "136": "<(IDENTIFIER,System,println(ways.stream().reduce(0, (a, b) -&gt; (a + b) % 1_000_000_007)))<SUB>24</SUB>>", "138": "<(reduce,reduce(0, &lt;lambda&gt;))<SUB>24</SUB>>", "140": "<(IDENTIFIER,ways,stream())<SUB>24</SUB>>", "16": "<(METHOD_REF,Main.lambda$1:&lt;unresolvedSignature&gt;(2),reduce(0, &lt;lambda&gt;))>", "143": "<(MODIFIER,STATIC)>"}}