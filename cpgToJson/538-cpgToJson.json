{"edges": [["19", "20"], ["19", "21"], ["19", "94"], ["19", "95"], ["19", "96"], ["21", "22"], ["21", "23"], ["21", "4"], ["21", "27"], ["21", "30"], ["21", "31"], ["21", "56"], ["21", "89"], ["23", "24"], ["23", "25"], ["25", "26"], ["27", "28"], ["27", "29"], ["30", "3"], ["31", "32"], ["31", "33"], ["31", "36"], ["31", "39"], ["31", "41"], ["33", "34"], ["33", "35"], ["36", "37"], ["36", "38"], ["39", "40"], ["41", "42"], ["41", "49"], ["42", "43"], ["42", "44"], ["44", "45"], ["44", "48"], ["45", "46"], ["45", "47"], ["49", "50"], ["49", "51"], ["51", "52"], ["51", "55"], ["52", "53"], ["52", "54"], ["56", "57"], ["56", "58"], ["56", "61"], ["56", "64"], ["56", "66"], ["58", "59"], ["58", "60"], ["61", "62"], ["61", "63"], ["64", "65"], ["66", "67"], ["66", "68"], ["66", "72"], ["68", "69"], ["68", "70"], ["70", "71"], ["72", "73"], ["72", "76"], ["72", "82"], ["73", "74"], ["73", "75"], ["76", "77"], ["77", "78"], ["77", "81"], ["78", "79"], ["78", "80"], ["82", "83"], ["83", "84"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["23", "29"], ["27", "30"], ["30", "33"], ["89", "96"], ["25", "23"], ["29", "27"], ["33", "36"], ["36", "45"], ["36", "58"], ["39", "36"], ["58", "61"], ["61", "70"], ["61", "92"], ["64", "61"], ["90", "89"], ["42", "52"], ["49", "39"], ["68", "73"], ["92", "90"], ["44", "42"], ["51", "49"], ["70", "68"], ["73", "78"], ["73", "85"], ["45", "44"], ["52", "51"], ["77", "64"], ["78", "77"], ["84", "64"], ["85", "84"], ["19", "25"], ["20", "96"], ["25", "96"], ["23", "96"], ["23", "96"], ["27", "96"], ["30", "96"], ["30", "96"], ["33", "96"], ["36", "96"], ["36", "96"], ["58", "96"], ["61", "96"], ["61", "96"], ["61", "96"], ["89", "96"], ["89", "96"], ["89", "96"], ["70", "96"], ["68", "96"], ["68", "96"], ["73", "96"], ["73", "96"], ["73", "96"], ["84", "96"], ["84", "96"], ["77", "96"], ["77", "96"], ["64", "96"], ["42", "96"], ["42", "96"], ["49", "96"], ["51", "96"], ["49", "96"], ["49", "96"], ["39", "96"], ["36", "96"], ["19", "20"], ["25", "23"], ["19", "27"], ["27", "30"], ["19", "30"], ["19", "33"], ["19", "58"], ["85", "89"], ["78", "89"], ["19", "89"], ["19", "25"], ["33", "36"], ["39", "36"], ["19", "36"], ["52", "39"], ["19", "39"], ["58", "61"], ["64", "61"], ["19", "61"], ["23", "61"], ["61", "64"], ["19", "64"], ["70", "68"], ["30", "42"], ["49", "42"], ["19", "42"], ["44", "42"], ["44", "42"], ["42", "49"], ["19", "49"], ["51", "49"], ["51", "49"], ["45", "44"], ["19", "44"], ["52", "51"], ["19", "51"], ["25", "70"], ["19", "70"], ["30", "73"], ["49", "73"], ["19", "73"], ["68", "73"], ["36", "45"], ["19", "45"], ["45", "52"], ["19", "52"], ["78", "77"], ["78", "77"], ["19", "77"], ["85", "78"], ["19", "78"], ["85", "84"], ["85", "84"], ["19", "84"], ["78", "85"], ["19", "85"], ["36", "49"], ["36", "42"], ["36", "51"], ["36", "36"], ["36", "52"], ["36", "45"], ["36", "44"], ["36", "39"], ["61", "68"], ["61", "73"], ["61", "61"], ["61", "64"], ["61", "70"], ["73", "77"], ["73", "84"], ["73", "85"], ["73", "78"]], "features": {"19": "<(METHOD,main)<SUB>1</SUB>>", "21": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "23": "<(&lt;operator&gt;.assignment,int test = nextInt())<SUB>2</SUB>>", "25": "<(nextInt,nextInt())<SUB>2</SUB>>", "4": "<(LOCAL,TreeSet&lt;Integer&gt; set: ANY)<SUB>6</SUB>>", "28": "<(IDENTIFIER,set,ANY set = new TreeSet&lt;&gt;())<SUB>6</SUB>>", "30": "<(&lt;init&gt;,new TreeSet&lt;&gt;())<SUB>6</SUB>>", "31": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= MAX_N); i++),for (int i = 1; Some(i &lt;= MAX_N); i++))<SUB>7</SUB>>", "33": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>7</SUB>>", "35": "<(LITERAL,1,int i = 1)<SUB>7</SUB>>", "37": "<(IDENTIFIER,i,i &lt;= MAX_N)<SUB>7</SUB>>", "39": "<(&lt;operator&gt;.postIncrement,i++)<SUB>7</SUB>>", "41": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>7</SUB>>", "43": "<(IDENTIFIER,set,add(i * i * 2))<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.multiplication,i * i)<SUB>8</SUB>>", "47": "<(IDENTIFIER,i,i * i)<SUB>8</SUB>>", "49": "<(add,add(i * i * 4))<SUB>9</SUB>>", "51": "<(&lt;operator&gt;.multiplication,i * i * 4)<SUB>9</SUB>>", "53": "<(IDENTIFIER,i,i * i)<SUB>9</SUB>>", "55": "<(LITERAL,4,i * i * 4)<SUB>9</SUB>>", "57": "<(LOCAL,int t: int)<SUB>14</SUB>>", "59": "<(IDENTIFIER,t,int t = 1)<SUB>14</SUB>>", "61": "<(&lt;operator&gt;.lessEqualsThan,t &lt;= test)<SUB>14</SUB>>", "63": "<(IDENTIFIER,test,t &lt;= test)<SUB>14</SUB>>", "65": "<(IDENTIFIER,t,t++)<SUB>14</SUB>>", "67": "<(LOCAL,int n: int)<SUB>15</SUB>>", "69": "<(IDENTIFIER,n,int n = nextInt())<SUB>15</SUB>>", "71": "<(IDENTIFIER,f,nextInt())<SUB>15</SUB>>", "73": "<(contains,contains(n))<SUB>16</SUB>>", "75": "<(IDENTIFIER,n,contains(n))<SUB>16</SUB>>", "77": "<(append,append(&quot;\\n&quot;))<SUB>17</SUB>>", "79": "<(IDENTIFIER,sb,append(&quot;YES&quot;))<SUB>17</SUB>>", "81": "<(LITERAL,&quot;\\n&quot;,append(&quot;\\n&quot;))<SUB>17</SUB>>", "83": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>19</SUB>>", "85": "<(append,append(&quot;NO&quot;))<SUB>20</SUB>>", "87": "<(LITERAL,&quot;NO&quot;,append(&quot;NO&quot;))<SUB>20</SUB>>", "89": "<(println,println(sb))<SUB>24</SUB>>", "91": "<(IDENTIFIER,System,println(sb))<SUB>24</SUB>>", "93": "<(IDENTIFIER,sb,println(sb))<SUB>24</SUB>>", "95": "<(MODIFIER,STATIC)>"}}