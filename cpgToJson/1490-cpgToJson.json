{"edges": [["17", "19"], ["17", "181"], ["17", "182"], ["17", "183"], ["19", "20"], ["19", "21"], ["19", "27"], ["19", "28"], ["19", "34"], ["19", "35"], ["19", "39"], ["19", "64"], ["19", "176"], ["19", "179"], ["21", "22"], ["21", "23"], ["23", "24"], ["23", "25"], ["25", "26"], ["28", "29"], ["28", "30"], ["30", "31"], ["30", "32"], ["32", "33"], ["35", "36"], ["35", "37"], ["37", "38"], ["39", "40"], ["39", "41"], ["39", "44"], ["39", "47"], ["39", "49"], ["41", "42"], ["41", "43"], ["44", "45"], ["44", "46"], ["47", "48"], ["49", "50"], ["50", "51"], ["50", "54"], ["51", "52"], ["51", "53"], ["54", "55"], ["54", "63"], ["55", "56"], ["55", "57"], ["57", "58"], ["57", "59"], ["57", "60"], ["60", "61"], ["60", "62"], ["64", "65"], ["64", "66"], ["64", "69"], ["64", "72"], ["64", "74"], ["66", "67"], ["66", "68"], ["69", "70"], ["69", "71"], ["72", "73"], ["74", "75"], ["74", "82"], ["74", "110"], ["75", "76"], ["75", "81"], ["76", "77"], ["76", "80"], ["77", "78"], ["77", "79"], ["82", "83"], ["82", "96"], ["83", "84"], ["83", "89"], ["84", "85"], ["84", "88"], ["85", "86"], ["85", "87"], ["89", "90"], ["89", "95"], ["90", "91"], ["90", "94"], ["91", "92"], ["91", "93"], ["96", "97"], ["96", "107"], ["96", "109"], ["97", "98"], ["97", "99"], ["99", "100"], ["99", "106"], ["100", "101"], ["100", "102"], ["102", "103"], ["102", "104"], ["102", "105"], ["107", "108"], ["110", "111"], ["110", "116"], ["111", "112"], ["111", "115"], ["112", "113"], ["112", "114"], ["116", "117"], ["116", "118"], ["116", "126"], ["116", "127"], ["116", "142"], ["116", "143"], ["116", "152"], ["118", "119"], ["118", "120"], ["120", "121"], ["120", "122"], ["122", "123"], ["122", "124"], ["122", "125"], ["127", "128"], ["127", "129"], ["129", "130"], ["129", "131"], ["131", "132"], ["131", "133"], ["133", "134"], ["133", "139"], ["134", "135"], ["134", "136"], ["136", "137"], ["136", "138"], ["139", "140"], ["139", "141"], ["143", "144"], ["143", "145"], ["145", "146"], ["145", "149"], ["146", "147"], ["146", "148"], ["149", "150"], ["149", "151"], ["152", "153"], ["152", "162"], ["153", "154"], ["153", "157"], ["154", "155"], ["154", "156"], ["157", "158"], ["157", "161"], ["158", "159"], ["158", "160"], ["162", "163"], ["162", "173"], ["162", "175"], ["163", "164"], ["163", "165"], ["165", "166"], ["165", "172"], ["166", "167"], ["166", "168"], ["168", "169"], ["168", "170"], ["168", "171"], ["173", "174"], ["176", "177"], ["176", "178"], ["179", "180"], ["21", "32"], ["28", "37"], ["35", "41"], ["176", "179"], ["179", "183"], ["23", "21"], ["30", "28"], ["37", "35"], ["41", "44"], ["44", "51"], ["44", "66"], ["47", "44"], ["66", "69"], ["69", "77"], ["69", "176"], ["72", "69"], ["25", "23"], ["32", "30"], ["50", "47"], ["51", "56"], ["54", "50"], ["76", "72"], ["76", "85"], ["83", "101"], ["83", "112"], ["111", "121"], ["111", "72"], ["55", "54"], ["77", "76"], ["84", "83"], ["84", "91"], ["89", "83"], ["97", "107"], ["107", "109"], ["109", "183"], ["112", "111"], ["118", "130"], ["127", "146"], ["143", "154"], ["56", "60"], ["57", "55"], ["85", "84"], ["90", "89"], ["99", "97"], ["120", "118"], ["129", "127"], ["145", "143"], ["153", "167"], ["153", "72"], ["60", "57"], ["91", "90"], ["100", "99"], ["121", "122"], ["122", "120"], ["130", "136"], ["131", "129"], ["146", "149"], ["149", "145"], ["154", "153"], ["154", "158"], ["157", "153"], ["163", "173"], ["173", "175"], ["175", "183"], ["101", "102"], ["102", "100"], ["133", "131"], ["158", "157"], ["165", "163"], ["134", "139"], ["139", "133"], ["166", "165"], ["136", "134"], ["167", "168"], ["168", "166"], ["17", "25"], ["109", "183"], ["175", "183"], ["18", "183"], ["21", "183"], ["30", "183"], ["28", "183"], ["28", "183"], ["35", "183"], ["35", "183"], ["35", "183"], ["41", "183"], ["44", "183"], ["66", "183"], ["69", "183"], ["76", "183"], ["76", "183"], ["84", "183"], ["84", "183"], ["83", "183"], ["90", "183"], ["89", "183"], ["89", "183"], ["83", "183"], ["83", "183"], ["111", "183"], ["118", "183"], ["133", "183"], ["133", "183"], ["131", "183"], ["129", "183"], ["127", "183"], ["127", "183"], ["149", "183"], ["149", "183"], ["145", "183"], ["143", "183"], ["143", "183"], ["154", "183"], ["153", "183"], ["158", "183"], ["157", "183"], ["153", "183"], ["153", "183"], ["102", "183"], ["102", "183"], ["100", "183"], ["99", "183"], ["97", "183"], ["97", "183"], ["107", "183"], ["107", "183"], ["72", "183"], ["57", "183"], ["55", "183"], ["54", "183"], ["50", "183"], ["50", "183"], ["47", "183"], ["17", "18"], ["23", "21"], ["23", "21"], ["30", "28"], ["30", "28"], ["37", "35"], ["17", "41"], ["17", "66"], ["17", "176"], ["176", "179"], ["17", "179"], ["25", "23"], ["17", "23"], ["32", "30"], ["17", "30"], ["17", "37"], ["41", "44"], ["47", "44"], ["17", "44"], ["60", "47"], ["17", "47"], ["54", "50"], ["54", "50"], ["66", "69"], ["72", "69"], ["17", "69"], ["69", "72"], ["122", "72"], ["17", "72"], ["17", "25"], ["23", "32"], ["17", "32"], ["17", "54"], ["57", "54"], ["57", "54"], ["57", "54"], ["35", "76"], ["111", "76"], ["50", "76"], ["134", "76"], ["28", "76"], ["89", "76"], ["157", "76"], ["17", "76"], ["84", "83"], ["84", "83"], ["89", "83"], ["89", "83"], ["17", "109"], ["35", "111"], ["84", "111"], ["84", "111"], ["17", "111"], ["17", "118"], ["122", "118"], ["122", "118"], ["122", "118"], ["17", "127"], ["131", "127"], ["131", "127"], ["35", "143"], ["134", "143"], ["149", "143"], ["149", "143"], ["17", "55"], ["57", "55"], ["57", "55"], ["57", "55"], ["35", "84"], ["76", "84"], ["21", "84"], ["111", "84"], ["154", "84"], ["17", "84"], ["35", "89"], ["84", "89"], ["17", "89"], ["76", "89"], ["17", "97"], ["99", "97"], ["99", "97"], ["97", "107"], ["17", "107"], ["30", "57"], ["17", "57"], ["60", "57"], ["60", "57"], ["35", "90"], ["84", "90"], ["17", "90"], ["17", "99"], ["102", "99"], ["102", "99"], ["102", "99"], ["17", "120"], ["122", "120"], ["122", "120"], ["122", "120"], ["17", "129"], ["131", "129"], ["131", "129"], ["35", "145"], ["134", "145"], ["149", "145"], ["149", "145"], ["154", "153"], ["154", "153"], ["157", "153"], ["157", "153"], ["17", "175"], ["44", "60"], ["17", "60"], ["17", "100"], ["102", "100"], ["102", "100"], ["102", "100"], ["30", "122"], ["131", "122"], ["57", "122"], ["17", "122"], ["69", "122"], ["122", "131"], ["17", "131"], ["133", "131"], ["133", "131"], ["127", "149"], ["17", "149"], ["139", "149"], ["143", "154"], ["17", "154"], ["134", "154"], ["154", "157"], ["17", "157"], ["76", "157"], ["89", "157"], ["17", "163"], ["165", "163"], ["165", "163"], ["163", "173"], ["17", "173"], ["30", "102"], ["131", "102"], ["57", "102"], ["17", "102"], ["69", "102"], ["134", "133"], ["134", "133"], ["139", "133"], ["139", "133"], ["154", "158"], ["17", "158"], ["17", "165"], ["168", "165"], ["168", "165"], ["168", "165"], ["111", "134"], ["17", "134"], ["35", "134"], ["111", "134"], ["118", "139"], ["17", "139"], ["17", "166"], ["168", "166"], ["168", "166"], ["168", "166"], ["131", "168"], ["17", "168"], ["122", "168"], ["44", "60"], ["44", "51"], ["44", "57"], ["44", "56"], ["44", "50"], ["44", "44"], ["44", "54"], ["44", "47"], ["44", "55"], ["69", "77"], ["69", "179"], ["69", "76"], ["69", "176"], ["76", "84"], ["76", "85"], ["76", "69"], ["76", "72"], ["76", "83"], ["83", "107"], ["83", "102"], ["83", "97"], ["83", "112"], ["83", "101"], ["83", "100"], ["83", "111"], ["83", "99"], ["83", "109"], ["111", "120"], ["111", "136"], ["111", "154"], ["111", "145"], ["111", "146"], ["111", "131"], ["111", "149"], ["111", "69"], ["111", "121"], ["111", "153"], ["111", "129"], ["111", "134"], ["111", "130"], ["111", "118"], ["111", "127"], ["111", "139"], ["111", "122"], ["111", "72"], ["111", "143"], ["111", "133"], ["84", "91"], ["84", "90"], ["84", "89"], ["153", "167"], ["153", "163"], ["153", "69"], ["153", "168"], ["153", "173"], ["153", "166"], ["153", "72"], ["153", "165"], ["153", "175"], ["154", "158"], ["154", "157"]], "features": {"17": "<(METHOD,main)<SUB>1</SUB>>", "19": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "21": "<(&lt;operator&gt;.assignment,long l = parseLong(next()))<SUB>2</SUB>>", "23": "<(parseLong,parseLong(next()))<SUB>2</SUB>>", "25": "<(next,next())<SUB>2</SUB>>", "27": "<(LOCAL,long r: long)<SUB>3</SUB>>", "29": "<(IDENTIFIER,r,long r = parseLong(next()))<SUB>3</SUB>>", "31": "<(IDENTIFIER,this,parseLong(next()))<SUB>3</SUB>>", "33": "<(IDENTIFIER,this,next())<SUB>3</SUB>>", "35": "<(&lt;operator&gt;.assignment,long[] min = new long[61])<SUB>4</SUB>>", "37": "<(&lt;operator&gt;.alloc,new long[61])>", "39": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt;= 60); ++i),for (int i = 1; Some(i &lt;= 60); ++i))<SUB>5</SUB>>", "41": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>5</SUB>>", "43": "<(LITERAL,1,int i = 1)<SUB>5</SUB>>", "45": "<(IDENTIFIER,i,i &lt;= 60)<SUB>5</SUB>>", "47": "<(&lt;operator&gt;.preIncrement,++i)<SUB>5</SUB>>", "49": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>5</SUB>>", "51": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>6</SUB>>", "53": "<(IDENTIFIER,i,min[i] = (long) pow(2, i - 1) - 1)<SUB>6</SUB>>", "55": "<(&lt;operator&gt;.cast,(long) pow(2, i - 1))<SUB>6</SUB>>", "57": "<(pow,pow(2, i - 1))<SUB>6</SUB>>", "59": "<(LITERAL,2,pow(2, i - 1))<SUB>6</SUB>>", "61": "<(IDENTIFIER,i,i - 1)<SUB>6</SUB>>", "63": "<(LITERAL,1,(long) pow(2, i - 1) - 1)<SUB>6</SUB>>", "65": "<(LOCAL,int i: int)<SUB>8</SUB>>", "67": "<(IDENTIFIER,i,int i = 60)<SUB>8</SUB>>", "69": "<(&lt;operator&gt;.greaterEqualsThan,i &gt;= 0)<SUB>8</SUB>>", "71": "<(LITERAL,0,i &gt;= 0)<SUB>8</SUB>>", "73": "<(IDENTIFIER,i,--i)<SUB>8</SUB>>", "75": "<(CONTROL_STRUCTURE,if (min[i] &gt;= r),if (min[i] &gt;= r))<SUB>9</SUB>>", "77": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>9</SUB>>", "79": "<(IDENTIFIER,i,min[i] &gt;= r)<SUB>9</SUB>>", "81": "<(CONTROL_STRUCTURE,continue;,continue;)<SUB>10</SUB>>", "83": "<(&lt;operator&gt;.logicalAnd,min[i] &gt;= l &amp;&amp; min[i] + 1 &lt;= r)<SUB>11</SUB>>", "85": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>11</SUB>>", "87": "<(IDENTIFIER,i,min[i] &gt;= l)<SUB>11</SUB>>", "89": "<(&lt;operator&gt;.lessEqualsThan,min[i] + 1 &lt;= r)<SUB>11</SUB>>", "91": "<(&lt;operator&gt;.indexAccess,min[i])<SUB>11</SUB>>", "93": "<(IDENTIFIER,i,min[i] + 1)<SUB>11</SUB>>", "95": "<(IDENTIFIER,r,min[i] + 1 &lt;= r)<SUB>11</SUB>>", "97": "<(println,println((long) pow(2, i) - 1))<SUB>12</SUB>>", "99": "<(&lt;operator&gt;.subtraction,(long) pow(2, i) - 1)<SUB>12</SUB>>", "101": "<(TYPE_REF,long,long)<SUB>12</SUB>>", "103": "<(IDENTIFIER,this,pow(2, i))<SUB>12</SUB>>", "105": "<(IDENTIFIER,i,pow(2, i))<SUB>12</SUB>>", "107": "<(flush,flush())<SUB>13</SUB>>", "109": "<(RETURN,return;,return;)<SUB>14</SUB>>", "111": "<(&lt;operator&gt;.lessThan,min[i] &lt; l)<SUB>16</SUB>>", "113": "<(IDENTIFIER,min,min[i] &lt; l)<SUB>16</SUB>>", "115": "<(IDENTIFIER,l,min[i] &lt; l)<SUB>16</SUB>>", "117": "<(LOCAL,long one_jump: long)<SUB>17</SUB>>", "119": "<(IDENTIFIER,one_jump,long one_jump = (long) pow(2, i))<SUB>17</SUB>>", "121": "<(TYPE_REF,long,long)<SUB>17</SUB>>", "123": "<(IDENTIFIER,this,pow(2, i))<SUB>17</SUB>>", "125": "<(IDENTIFIER,i,pow(2, i))<SUB>17</SUB>>", "127": "<(&lt;operator&gt;.assignment,long jumps = (long) ceil((l - min[i]) / (one_jump * 1.0)))<SUB>18</SUB>>", "129": "<(&lt;operator&gt;.cast,(long) ceil((l - min[i]) / (one_jump * 1.0)))<SUB>18</SUB>>", "131": "<(ceil,ceil((l - min[i]) / (one_jump * 1.0)))<SUB>18</SUB>>", "133": "<(&lt;operator&gt;.division,(l - min[i]) / (one_jump * 1.0))<SUB>18</SUB>>", "135": "<(IDENTIFIER,l,l - min[i])<SUB>18</SUB>>", "137": "<(IDENTIFIER,min,l - min[i])<SUB>18</SUB>>", "139": "<(&lt;operator&gt;.multiplication,one_jump * 1.0)<SUB>18</SUB>>", "141": "<(LITERAL,1.0,one_jump * 1.0)<SUB>18</SUB>>", "143": "<(&lt;operator&gt;.assignment,long cur = min[i] + (jumps * one_jump))<SUB>19</SUB>>", "145": "<(&lt;operator&gt;.addition,min[i] + (jumps * one_jump))<SUB>19</SUB>>", "147": "<(IDENTIFIER,min,min[i] + (jumps * one_jump))<SUB>19</SUB>>", "149": "<(&lt;operator&gt;.multiplication,jumps * one_jump)<SUB>19</SUB>>", "151": "<(IDENTIFIER,one_jump,jumps * one_jump)<SUB>19</SUB>>", "153": "<(&lt;operator&gt;.logicalAnd,cur &gt;= l &amp;&amp; cur + 1 &lt;= r)<SUB>20</SUB>>", "155": "<(IDENTIFIER,cur,cur &gt;= l)<SUB>20</SUB>>", "157": "<(&lt;operator&gt;.lessEqualsThan,cur + 1 &lt;= r)<SUB>20</SUB>>", "159": "<(IDENTIFIER,cur,cur + 1)<SUB>20</SUB>>", "161": "<(IDENTIFIER,r,cur + 1 &lt;= r)<SUB>20</SUB>>", "163": "<(println,println((long) pow(2, i) - 1))<SUB>21</SUB>>", "165": "<(&lt;operator&gt;.subtraction,(long) pow(2, i) - 1)<SUB>21</SUB>>", "167": "<(TYPE_REF,long,long)<SUB>21</SUB>>", "169": "<(IDENTIFIER,this,pow(2, i))<SUB>21</SUB>>", "171": "<(IDENTIFIER,i,pow(2, i))<SUB>21</SUB>>", "173": "<(flush,flush())<SUB>22</SUB>>", "175": "<(RETURN,return;,return;)<SUB>23</SUB>>", "177": "<(IDENTIFIER,out,println(0))<SUB>27</SUB>>", "179": "<(flush,flush())<SUB>28</SUB>>", "181": "<(MODIFIER,PUBLIC)>", "183": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}