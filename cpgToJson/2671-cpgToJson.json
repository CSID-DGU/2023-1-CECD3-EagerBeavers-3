{"edges": [["21", "22"], ["21", "23"], ["21", "134"], ["21", "135"], ["21", "136"], ["23", "4"], ["23", "24"], ["23", "27"], ["23", "31"], ["23", "32"], ["23", "6"], ["23", "36"], ["23", "39"], ["23", "40"], ["23", "55"], ["23", "56"], ["23", "59"], ["23", "129"], ["24", "25"], ["24", "26"], ["27", "3"], ["27", "28"], ["28", "29"], ["28", "30"], ["32", "33"], ["32", "34"], ["34", "35"], ["36", "37"], ["36", "38"], ["39", "5"], ["40", "41"], ["40", "42"], ["40", "45"], ["40", "48"], ["40", "50"], ["42", "43"], ["42", "44"], ["45", "46"], ["45", "47"], ["48", "49"], ["50", "51"], ["51", "52"], ["51", "53"], ["53", "54"], ["56", "57"], ["56", "58"], ["59", "60"], ["59", "64"], ["60", "61"], ["60", "63"], ["61", "62"], ["64", "65"], ["64", "66"], ["64", "71"], ["64", "97"], ["64", "127"], ["66", "67"], ["66", "68"], ["68", "69"], ["68", "70"], ["71", "72"], ["71", "73"], ["71", "76"], ["71", "80"], ["71", "82"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["78", "79"], ["80", "81"], ["82", "83"], ["82", "84"], ["82", "89"], ["84", "85"], ["84", "86"], ["86", "87"], ["86", "88"], ["89", "90"], ["89", "93"], ["90", "91"], ["90", "92"], ["93", "94"], ["94", "95"], ["94", "96"], ["97", "98"], ["97", "99"], ["97", "102"], ["97", "106"], ["97", "108"], ["99", "100"], ["99", "101"], ["102", "103"], ["102", "104"], ["104", "105"], ["106", "107"], ["108", "109"], ["108", "110"], ["108", "115"], ["110", "111"], ["110", "112"], ["112", "113"], ["112", "114"], ["115", "116"], ["115", "121"], ["116", "117"], ["116", "120"], ["117", "118"], ["117", "119"], ["121", "122"], ["121", "125"], ["122", "123"], ["122", "124"], ["125", "126"], ["127", "128"], ["129", "130"], ["129", "133"], ["130", "131"], ["130", "132"], ["24", "30"], ["27", "34"], ["32", "38"], ["36", "39"], ["39", "42"], ["56", "61"], ["129", "136"], ["26", "24"], ["28", "27"], ["34", "32"], ["38", "36"], ["42", "45"], ["45", "53"], ["45", "56"], ["48", "45"], ["60", "70"], ["60", "132"], ["130", "129"], ["30", "28"], ["51", "48"], ["61", "60"], ["66", "73"], ["127", "61"], ["132", "130"], ["53", "51"], ["68", "66"], ["73", "78"], ["76", "86"], ["76", "99"], ["80", "78"], ["99", "104"], ["102", "112"], ["102", "127"], ["106", "104"], ["70", "68"], ["78", "76"], ["84", "90"], ["104", "102"], ["110", "117"], ["86", "84"], ["90", "94"], ["90", "80"], ["112", "110"], ["116", "122"], ["116", "106"], ["94", "80"], ["117", "116"], ["122", "125"], ["125", "106"], ["21", "26"], ["22", "136"], ["24", "136"], ["27", "136"], ["27", "136"], ["34", "136"], ["32", "136"], ["32", "136"], ["36", "136"], ["39", "136"], ["42", "136"], ["45", "136"], ["45", "136"], ["45", "136"], ["56", "136"], ["61", "136"], ["60", "136"], ["60", "136"], ["129", "136"], ["129", "136"], ["129", "136"], ["66", "136"], ["66", "136"], ["66", "136"], ["99", "136"], ["102", "136"], ["102", "136"], ["127", "136"], ["110", "136"], ["110", "136"], ["117", "136"], ["117", "136"], ["116", "136"], ["116", "136"], ["122", "136"], ["125", "136"], ["106", "136"], ["84", "136"], ["84", "136"], ["90", "136"], ["90", "136"], ["90", "136"], ["94", "136"], ["94", "136"], ["94", "136"], ["80", "136"], ["53", "136"], ["51", "136"], ["51", "136"], ["48", "136"], ["21", "22"], ["21", "24"], ["34", "32"], ["21", "36"], ["21", "56"], ["24", "27"], ["21", "27"], ["36", "39"], ["21", "39"], ["21", "42"], ["56", "129"], ["127", "129"], ["21", "129"], ["27", "34"], ["21", "34"], ["42", "45"], ["48", "45"], ["21", "45"], ["32", "45"], ["45", "48"], ["21", "48"], ["61", "60"], ["21", "60"], ["39", "51"], ["21", "51"], ["53", "51"], ["39", "61"], ["104", "61"], ["51", "61"], ["21", "61"], ["21", "73"], ["21", "99"], ["56", "127"], ["21", "127"], ["34", "53"], ["21", "53"], ["73", "76"], ["80", "76"], ["21", "76"], ["78", "76"], ["86", "80"], ["21", "80"], ["86", "84"], ["86", "84"], ["99", "102"], ["106", "102"], ["21", "102"], ["104", "102"], ["112", "106"], ["125", "106"], ["21", "106"], ["112", "110"], ["112", "110"], ["61", "78"], ["86", "78"], ["21", "78"], ["78", "104"], ["112", "104"], ["122", "104"], ["21", "104"], ["78", "86"], ["21", "86"], ["76", "86"], ["84", "90"], ["21", "90"], ["66", "90"], ["94", "90"], ["90", "94"], ["21", "94"], ["104", "112"], ["21", "112"], ["102", "112"], ["117", "116"], ["117", "116"], ["21", "116"], ["110", "117"], ["21", "117"], ["66", "117"], ["90", "117"], ["94", "117"], ["112", "122"], ["21", "122"], ["112", "122"], ["122", "125"], ["21", "125"], ["45", "48"], ["45", "51"], ["45", "45"], ["45", "53"], ["60", "68"], ["60", "60"], ["60", "73"], ["60", "66"], ["60", "99"], ["60", "102"], ["60", "104"], ["60", "76"], ["60", "61"], ["60", "70"], ["60", "127"], ["60", "78"], ["76", "84"], ["76", "76"], ["76", "90"], ["76", "80"], ["76", "78"], ["76", "86"], ["102", "116"], ["102", "102"], ["102", "104"], ["102", "106"], ["102", "112"], ["102", "110"], ["102", "117"], ["90", "94"], ["116", "122"], ["116", "125"]], "features": {"21": "<(METHOD,main)<SUB>1</SUB>>", "23": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "24": "<(&lt;operator&gt;.assignment,ANY scan = new Scanner(System.in))<SUB>2</SUB>>", "26": "<(&lt;operator&gt;.alloc,new Scanner(System.in))<SUB>2</SUB>>", "3": "<(IDENTIFIER,scan,new Scanner(System.in))<SUB>2</SUB>>", "29": "<(IDENTIFIER,System,new Scanner(System.in))<SUB>2</SUB>>", "31": "<(LOCAL,int t: int)<SUB>4</SUB>>", "33": "<(IDENTIFIER,t,int t = nextInt())<SUB>4</SUB>>", "35": "<(IDENTIFIER,scan,nextInt())<SUB>4</SUB>>", "36": "<(&lt;operator&gt;.assignment,ANY arr = new ArrayList&lt;&gt;())<SUB>6</SUB>>", "38": "<(&lt;operator&gt;.alloc,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "5": "<(IDENTIFIER,arr,new ArrayList&lt;&gt;())<SUB>6</SUB>>", "41": "<(LOCAL,int i: int)<SUB>8</SUB>>", "43": "<(IDENTIFIER,i,int i = 0)<SUB>8</SUB>>", "45": "<(&lt;operator&gt;.lessThan,i &lt; t)<SUB>8</SUB>>", "47": "<(IDENTIFIER,t,i &lt; t)<SUB>8</SUB>>", "49": "<(IDENTIFIER,i,i++)<SUB>8</SUB>>", "51": "<(add,add(scan.nextInt()))<SUB>9</SUB>>", "53": "<(nextInt,nextInt())<SUB>9</SUB>>", "55": "<(LOCAL,int count: int)<SUB>12</SUB>>", "57": "<(IDENTIFIER,count,int count = 0)<SUB>12</SUB>>", "59": "<(CONTROL_STRUCTURE,while (arr.size() != 0),while (arr.size() != 0))<SUB>14</SUB>>", "61": "<(size,size())<SUB>14</SUB>>", "63": "<(LITERAL,0,arr.size() != 0)<SUB>14</SUB>>", "65": "<(LOCAL,int min: int)<SUB>16</SUB>>", "67": "<(IDENTIFIER,min,int min = Integer.MAX_VALUE)<SUB>16</SUB>>", "69": "<(IDENTIFIER,Integer,int min = Integer.MAX_VALUE)<SUB>16</SUB>>", "71": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; arr.size()); i++),for (int i = 0; Some(i &lt; arr.size()); i++))<SUB>18</SUB>>", "73": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>18</SUB>>", "75": "<(LITERAL,0,int i = 0)<SUB>18</SUB>>", "77": "<(IDENTIFIER,i,i &lt; arr.size())<SUB>18</SUB>>", "79": "<(IDENTIFIER,arr,size())<SUB>18</SUB>>", "81": "<(IDENTIFIER,i,i++)<SUB>18</SUB>>", "83": "<(LOCAL,int temp: int)<SUB>19</SUB>>", "85": "<(IDENTIFIER,temp,int temp = get(i))<SUB>19</SUB>>", "87": "<(IDENTIFIER,arr,get(i))<SUB>19</SUB>>", "89": "<(CONTROL_STRUCTURE,if (temp &lt; min),if (temp &lt; min))<SUB>20</SUB>>", "91": "<(IDENTIFIER,temp,temp &lt; min)<SUB>20</SUB>>", "93": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>20</SUB>>", "95": "<(IDENTIFIER,min,min = temp)<SUB>21</SUB>>", "97": "<(CONTROL_STRUCTURE,for (int i = 0; Some(i &lt; arr.size()); i++),for (int i = 0; Some(i &lt; arr.size()); i++))<SUB>26</SUB>>", "99": "<(&lt;operator&gt;.assignment,int i = 0)<SUB>26</SUB>>", "101": "<(LITERAL,0,int i = 0)<SUB>26</SUB>>", "103": "<(IDENTIFIER,i,i &lt; arr.size())<SUB>26</SUB>>", "105": "<(IDENTIFIER,arr,size())<SUB>26</SUB>>", "107": "<(IDENTIFIER,i,i++)<SUB>26</SUB>>", "109": "<(LOCAL,int temp: int)<SUB>27</SUB>>", "111": "<(IDENTIFIER,temp,int temp = get(i))<SUB>27</SUB>>", "113": "<(IDENTIFIER,arr,get(i))<SUB>27</SUB>>", "115": "<(CONTROL_STRUCTURE,if (temp % min == 0),if (temp % min == 0))<SUB>28</SUB>>", "117": "<(&lt;operator&gt;.modulo,temp % min)<SUB>28</SUB>>", "119": "<(IDENTIFIER,min,temp % min)<SUB>28</SUB>>", "121": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "123": "<(IDENTIFIER,arr,remove(i))<SUB>29</SUB>>", "125": "<(&lt;operator&gt;.postDecrement,i--)<SUB>30</SUB>>", "127": "<(&lt;operator&gt;.postIncrement,count++)<SUB>34</SUB>>", "129": "<(println,System.out.println(count))<SUB>37</SUB>>", "131": "<(IDENTIFIER,System,System.out.println(count))<SUB>37</SUB>>", "133": "<(IDENTIFIER,count,System.out.println(count))<SUB>37</SUB>>", "135": "<(MODIFIER,STATIC)>"}}