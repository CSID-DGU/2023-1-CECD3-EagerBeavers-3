{"edges": [["25", "27"], ["25", "151"], ["25", "152"], ["25", "153"], ["27", "4"], ["27", "28"], ["27", "31"], ["27", "6"], ["27", "35"], ["27", "38"], ["27", "42"], ["27", "43"], ["27", "47"], ["28", "29"], ["28", "30"], ["31", "3"], ["31", "32"], ["32", "33"], ["32", "34"], ["35", "36"], ["35", "37"], ["38", "5"], ["38", "39"], ["39", "40"], ["39", "41"], ["43", "44"], ["43", "45"], ["45", "46"], ["47", "48"], ["47", "52"], ["48", "49"], ["48", "51"], ["49", "50"], ["52", "53"], ["52", "54"], ["52", "8"], ["52", "58"], ["52", "61"], ["52", "62"], ["52", "67"], ["52", "68"], ["52", "72"], ["52", "76"], ["52", "79"], ["54", "55"], ["54", "56"], ["56", "57"], ["58", "59"], ["58", "60"], ["61", "7"], ["62", "63"], ["62", "66"], ["63", "64"], ["63", "65"], ["68", "69"], ["68", "70"], ["70", "71"], ["72", "73"], ["73", "74"], ["73", "75"], ["76", "77"], ["76", "78"], ["79", "80"], ["79", "81"], ["79", "84"], ["79", "87"], ["79", "89"], ["81", "82"], ["81", "83"], ["84", "85"], ["84", "86"], ["87", "88"], ["89", "90"], ["89", "91"], ["89", "95"], ["89", "114"], ["89", "10"], ["89", "117"], ["89", "120"], ["89", "121"], ["89", "122"], ["89", "126"], ["89", "140"], ["89", "149"], ["91", "92"], ["91", "93"], ["93", "94"], ["95", "96"], ["95", "99"], ["95", "100"], ["96", "97"], ["96", "98"], ["100", "101"], ["101", "102"], ["101", "112"], ["102", "103"], ["102", "109"], ["103", "104"], ["103", "108"], ["104", "105"], ["104", "107"], ["105", "106"], ["109", "110"], ["110", "111"], ["112", "113"], ["114", "115"], ["114", "116"], ["117", "118"], ["117", "119"], ["120", "9"], ["122", "123"], ["122", "124"], ["124", "125"], ["126", "127"], ["126", "129"], ["127", "128"], ["129", "130"], ["129", "131"], ["129", "135"], ["131", "132"], ["131", "133"], ["133", "134"], ["135", "136"], ["135", "139"], ["136", "137"], ["136", "138"], ["140", "141"], ["140", "142"], ["142", "143"], ["142", "144"], ["142", "145"], ["145", "146"], ["145", "148"], ["146", "147"], ["149", "150"], ["28", "34"], ["31", "37"], ["35", "41"], ["38", "45"], ["43", "49"], ["30", "28"], ["32", "31"], ["37", "35"], ["39", "38"], ["45", "43"], ["48", "153"], ["48", "56"], ["34", "32"], ["41", "39"], ["49", "48"], ["54", "60"], ["58", "61"], ["61", "65"], ["62", "70"], ["68", "73"], ["72", "76"], ["76", "81"], ["56", "54"], ["60", "58"], ["63", "62"], ["70", "68"], ["73", "72"], ["81", "84"], ["84", "49"], ["84", "93"], ["87", "84"], ["65", "63"], ["91", "96"], ["114", "119"], ["117", "120"], ["120", "124"], ["122", "127"], ["140", "149"], ["149", "87"], ["93", "91"], ["96", "105"], ["119", "117"], ["124", "122"], ["127", "133"], ["127", "146"], ["142", "140"], ["131", "136"], ["135", "127"], ["145", "142"], ["112", "114"], ["133", "131"], ["136", "135"], ["146", "145"], ["103", "110"], ["103", "112"], ["104", "103"], ["110", "105"], ["105", "104"], ["25", "30"], ["26", "153"], ["28", "153"], ["31", "153"], ["31", "153"], ["35", "153"], ["38", "153"], ["38", "153"], ["38", "153"], ["45", "153"], ["43", "153"], ["43", "153"], ["49", "153"], ["48", "153"], ["48", "153"], ["84", "153"], ["84", "153"], ["84", "153"], ["25", "26"], ["25", "28"], ["25", "35"], ["45", "43"], ["28", "31"], ["25", "31"], ["35", "38"], ["25", "38"], ["31", "45"], ["25", "45"], ["49", "48"], ["25", "48"], ["56", "54"], ["25", "58"], ["70", "68"], ["43", "49"], ["25", "49"], ["58", "61"], ["25", "61"], ["38", "62"], ["25", "62"], ["73", "72"], ["73", "72"], ["61", "76"], ["25", "76"], ["25", "81"], ["45", "56"], ["70", "56"], ["93", "56"], ["25", "56"], ["56", "70"], ["25", "70"], ["68", "73"], ["25", "73"], ["81", "84"], ["87", "84"], ["25", "84"], ["54", "84"], ["84", "87"], ["25", "87"], ["93", "91"], ["25", "117"], ["124", "122"], ["112", "114"], ["25", "114"], ["103", "114"], ["117", "120"], ["25", "120"], ["38", "140"], ["149", "140"], ["25", "140"], ["142", "140"], ["142", "140"], ["142", "140"], ["140", "149"], ["25", "149"], ["70", "93"], ["25", "93"], ["91", "96"], ["25", "96"], ["114", "124"], ["25", "124"], ["122", "127"], ["133", "127"], ["25", "127"], ["133", "131"], ["146", "142"], ["25", "142"], ["145", "142"], ["145", "142"], ["136", "135"], ["136", "135"], ["25", "135"], ["146", "145"], ["25", "145"], ["105", "112"], ["25", "112"], ["127", "133"], ["25", "133"], ["120", "136"], ["25", "136"], ["131", "136"], ["120", "146"], ["136", "146"], ["25", "146"], ["105", "103"], ["25", "103"], ["96", "103"], ["105", "104"], ["25", "104"], ["105", "110"], ["25", "110"], ["76", "105"], ["124", "105"], ["110", "105"], ["25", "105"], ["48", "48"], ["48", "68"], ["48", "49"], ["48", "60"], ["48", "73"], ["48", "81"], ["48", "84"], ["48", "72"], ["48", "56"], ["48", "76"], ["48", "65"], ["48", "54"], ["48", "58"], ["48", "61"], ["48", "70"], ["48", "63"], ["48", "62"], ["84", "96"], ["84", "120"], ["84", "145"], ["84", "146"], ["84", "122"], ["84", "84"], ["84", "114"], ["84", "149"], ["84", "103"], ["84", "142"], ["84", "104"], ["84", "119"], ["84", "87"], ["84", "91"], ["84", "112"], ["84", "93"], ["84", "140"], ["84", "105"], ["84", "117"], ["84", "127"], ["84", "124"], ["127", "136"], ["127", "131"], ["127", "135"], ["127", "127"], ["127", "133"], ["103", "103"], ["103", "104"], ["103", "105"], ["103", "110"]], "features": {"25": "<(METHOD,main)<SUB>1</SUB>>", "27": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>1</SUB>>", "28": "<(&lt;operator&gt;.assignment,ANY in = new InputReader(System.in))<SUB>3</SUB>>", "30": "<(&lt;operator&gt;.alloc,new InputReader(System.in))<SUB>3</SUB>>", "3": "<(IDENTIFIER,in,new InputReader(System.in))<SUB>3</SUB>>", "33": "<(IDENTIFIER,System,new InputReader(System.in))<SUB>3</SUB>>", "6": "<(LOCAL,FastWriter out: ANY)<SUB>5</SUB>>", "36": "<(IDENTIFIER,out,ANY out = new FastWriter(System.out))<SUB>5</SUB>>", "38": "<(&lt;init&gt;,new FastWriter(System.out))<SUB>5</SUB>>", "39": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>5</SUB>>", "41": "<(FIELD_IDENTIFIER,out,out)<SUB>5</SUB>>", "43": "<(&lt;operator&gt;.assignment,int t = readInt())<SUB>15</SUB>>", "45": "<(readInt,readInt())<SUB>15</SUB>>", "47": "<(CONTROL_STRUCTURE,while (t-- &gt; 0),while (t-- &gt; 0))<SUB>18</SUB>>", "49": "<(&lt;operator&gt;.postDecrement,t--)<SUB>18</SUB>>", "51": "<(LITERAL,0,t-- &gt; 0)<SUB>18</SUB>>", "53": "<(LOCAL,int n: int)<SUB>20</SUB>>", "55": "<(IDENTIFIER,n,int n = readInt())<SUB>20</SUB>>", "57": "<(IDENTIFIER,in,readInt())<SUB>20</SUB>>", "58": "<(&lt;operator&gt;.assignment,ANY s = new Stack&lt;&gt;())<SUB>22</SUB>>", "60": "<(&lt;operator&gt;.alloc,new Stack&lt;&gt;())<SUB>22</SUB>>", "7": "<(IDENTIFIER,s,new Stack&lt;&gt;())<SUB>22</SUB>>", "63": "<(&lt;operator&gt;.fieldAccess,System.out)<SUB>24</SUB>>", "65": "<(FIELD_IDENTIFIER,out,out)<SUB>24</SUB>>", "67": "<(LOCAL,int i1: int)<SUB>25</SUB>>", "69": "<(IDENTIFIER,i1,int i1 = readInt())<SUB>25</SUB>>", "71": "<(IDENTIFIER,in,readInt())<SUB>25</SUB>>", "73": "<(&lt;operator&gt;.equals,i1 == 1)<SUB>26</SUB>>", "75": "<(LITERAL,1,i1 == 1)<SUB>26</SUB>>", "77": "<(IDENTIFIER,s,add(1))<SUB>27</SUB>>", "79": "<(CONTROL_STRUCTURE,for (int i = 1; Some(i &lt; n); ++i),for (int i = 1; Some(i &lt; n); ++i))<SUB>28</SUB>>", "81": "<(&lt;operator&gt;.assignment,int i = 1)<SUB>28</SUB>>", "83": "<(LITERAL,1,int i = 1)<SUB>28</SUB>>", "85": "<(IDENTIFIER,i,i &lt; n)<SUB>28</SUB>>", "87": "<(&lt;operator&gt;.preIncrement,++i)<SUB>28</SUB>>", "89": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>28</SUB>>", "91": "<(&lt;operator&gt;.assignment,int next = readInt())<SUB>29</SUB>>", "93": "<(readInt,readInt())<SUB>29</SUB>>", "95": "<(CONTROL_STRUCTURE,if (next == 1),if (next == 1))<SUB>30</SUB>>", "97": "<(IDENTIFIER,next,next == 1)<SUB>30</SUB>>", "99": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>30</SUB>>", "101": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>31</SUB>>", "103": "<(&lt;operator&gt;.notEquals,(s.peek() + 1) != next)<SUB>32</SUB>>", "105": "<(peek,peek())<SUB>32</SUB>>", "107": "<(LITERAL,1,s.peek() + 1)<SUB>32</SUB>>", "109": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>32</SUB>>", "111": "<(IDENTIFIER,s,pop())<SUB>33</SUB>>", "113": "<(IDENTIFIER,s,pop())<SUB>35</SUB>>", "115": "<(IDENTIFIER,s,add(next))<SUB>38</SUB>>", "10": "<(LOCAL,StringBuilder ans: java.lang.StringBuilder)<SUB>39</SUB>>", "118": "<(IDENTIFIER,ans,StringBuilder ans = new StringBuilder())<SUB>39</SUB>>", "120": "<(&lt;init&gt;,new StringBuilder())<SUB>39</SUB>>", "121": "<(LOCAL,$iterLocal0: java.util.Iterator)<SUB>40</SUB>>", "123": "<(IDENTIFIER,$iterLocal0,)<SUB>40</SUB>>", "125": "<(IDENTIFIER,s,&lt;empty&gt;)<SUB>40</SUB>>", "127": "<(hasNext,&lt;empty&gt;)<SUB>40</SUB>>", "129": "<(BLOCK,&lt;empty&gt;,&lt;empty&gt;)<SUB>40</SUB>>", "131": "<(&lt;operator&gt;.assignment,&lt;empty&gt;)<SUB>40</SUB>>", "133": "<(next,&lt;empty&gt;)<SUB>40</SUB>>", "135": "<(append,ans.append(c).append(&quot;.&quot;))<SUB>41</SUB>>", "137": "<(IDENTIFIER,ans,ans.append(c))<SUB>41</SUB>>", "139": "<(LITERAL,&quot;.&quot;,ans.append(c).append(&quot;.&quot;))<SUB>41</SUB>>", "141": "<(IDENTIFIER,out,println(ans.substring(0, ans.length() - 1)))<SUB>43</SUB>>", "143": "<(IDENTIFIER,ans,ans.substring(0, ans.length() - 1))<SUB>43</SUB>>", "145": "<(&lt;operator&gt;.subtraction,ans.length() - 1)<SUB>43</SUB>>", "147": "<(IDENTIFIER,ans,ans.length())<SUB>43</SUB>>", "149": "<(flush,flush())<SUB>44</SUB>>", "151": "<(MODIFIER,PUBLIC)>", "153": "<(METHOD_RETURN,void)<SUB>1</SUB>>"}}